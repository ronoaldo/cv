/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.7
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: opencv2.i

#define SWIGMODULE cv

#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>



typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;




#define swiggo_size_assert_eq(x, y, name) typedef char name[(x-y)*(x-y)*-2+1];
#define swiggo_size_assert(t, n) swiggo_size_assert_eq(sizeof(t), n, swiggo_sizeof_##t##_is_not_##n)

swiggo_size_assert(char, 1)
swiggo_size_assert(short, 2)
swiggo_size_assert(int, 4)
typedef long long swiggo_long_long;
swiggo_size_assert(swiggo_long_long, 8)
swiggo_size_assert(float, 4)
swiggo_size_assert(double, 8)

#ifdef __cplusplus
extern "C" {
#endif
extern void crosscall2(void (*fn)(void *, int), void *, int);
extern char* _cgo_topofstack(void) __attribute__ ((weak));
extern void _cgo_allocate(void *, int);
extern void _cgo_panic(void *, int);
#ifdef __cplusplus
}
#endif

static char *_swig_topofstack() {
  if (_cgo_topofstack) {
    return _cgo_topofstack();
  } else {
    return 0;
  }
}

static void _swig_gopanic(const char *p) {
  struct {
    const char *p;
  } a;
  a.p = p;
  crosscall2(_cgo_panic, &a, (int) sizeof a);
}




#define SWIG_contract_assert(expr, msg) \
  if (!(expr)) { _swig_gopanic(msg); } else


static _gostring_ Swig_AllocateString(const char *p, size_t l) {
  _gostring_ ret;
  ret.p = (char*)malloc(l);
  memcpy(ret.p, p, l);
  ret.n = l;
  return ret;
}


static void Swig_free(void* p) {
  free(p);
}


#include "opencv2/core/opengl_interop_deprecated.hpp"
#include "opencv2/core/core.hpp"
#include "opencv2/objdetect/objdetect.hpp"
#include "opencv2/highgui/highgui.hpp"
#include "opencv2/imgproc/imgproc.hpp"


#include <string>


#include <vector>
#include <stdexcept>

#ifdef __cplusplus
extern "C" {
#endif

void _wrap_Swig_free_cv_dbcbba478e71899d(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  
  arg1 = *(void **)&_swig_go_0; 
  
  Swig_free(arg1);
  
}


_gostring_ _wrap_fromUtf16_cv_dbcbba478e71899d(std::basic_string< wchar_t > *_swig_go_0) {
  cv::WString *arg1 = 0 ;
  cv::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::WString **)&_swig_go_0; 
  
  result = cv::fromUtf16((std::basic_string< wchar_t > const &)*arg1);
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


std::basic_string< wchar_t > *_wrap_toUtf16_cv_dbcbba478e71899d(_gostring_ _swig_go_0) {
  cv::string *arg1 = 0 ;
  cv::WString result;
  std::basic_string< wchar_t > *_swig_go_result;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  
  result = cv::toUtf16((std::string const &)*arg1);
  *(cv::WString **)&_swig_go_result = new cv::WString(result); 
  return _swig_go_result;
}


_gostring_ _wrap_format_cv_dbcbba478e71899d(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  void *arg2 = 0 ;
  cv::string result;
  _gostring_ _swig_go_result;
  
  arg1 = (char *)_swig_go_0.p; 
  
  result = cv::format((char const *)arg1,arg2);
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


_gostring_ _wrap_tempfile__SWIG_0_cv_dbcbba478e71899d(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  cv::string result;
  _gostring_ _swig_go_result;
  
  arg1 = (char *)_swig_go_0.p; 
  
  result = cv::tempfile((char const *)arg1);
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


_gostring_ _wrap_tempfile__SWIG_1_cv_dbcbba478e71899d() {
  cv::string result;
  _gostring_ _swig_go_result;
  
  
  result = cv::tempfile();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


intgo _wrap_DECOMP_LU_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::DECOMP_LU;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DECOMP_SVD_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::DECOMP_SVD;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DECOMP_EIG_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::DECOMP_EIG;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DECOMP_CHOLESKY_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::DECOMP_CHOLESKY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DECOMP_QR_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::DECOMP_QR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DECOMP_NORMAL_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::DECOMP_NORMAL;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_NORM_INF_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::NORM_INF;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_NORM_L1_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::NORM_L1;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_NORM_L2_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::NORM_L2;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_NORM_L2SQR_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::NORM_L2SQR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_NORM_HAMMING_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::NORM_HAMMING;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_NORM_HAMMING2_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::NORM_HAMMING2;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_NORM_TYPE_MASK_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::NORM_TYPE_MASK;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_NORM_RELATIVE_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::NORM_RELATIVE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_NORM_MINMAX_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::NORM_MINMAX;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CMP_EQ_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::CMP_EQ;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CMP_GT_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::CMP_GT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CMP_GE_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::CMP_GE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CMP_LT_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::CMP_LT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CMP_LE_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::CMP_LE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CMP_NE_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::CMP_NE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_GEMM_1_T_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::GEMM_1_T;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_GEMM_2_T_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::GEMM_2_T;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_GEMM_3_T_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::GEMM_3_T;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DFT_INVERSE_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::DFT_INVERSE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DFT_SCALE_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::DFT_SCALE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DFT_ROWS_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::DFT_ROWS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DFT_COMPLEX_OUTPUT_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::DFT_COMPLEX_OUTPUT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DFT_REAL_OUTPUT_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::DFT_REAL_OUTPUT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DCT_INVERSE_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::DCT_INVERSE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DCT_ROWS_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::DCT_ROWS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


cv::Exception *_wrap_new_Exception__SWIG_0_cv_dbcbba478e71899d() {
  cv::Exception *result = 0 ;
  cv::Exception *_swig_go_result;
  
  
  result = (cv::Exception *)new cv::Exception();
  *(cv::Exception **)&_swig_go_result = (cv::Exception *)result; 
  return _swig_go_result;
}


cv::Exception *_wrap_new_Exception__SWIG_1_cv_dbcbba478e71899d(intgo _swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3, intgo _swig_go_4) {
  int arg1 ;
  cv::string *arg2 = 0 ;
  cv::string *arg3 = 0 ;
  cv::string *arg4 = 0 ;
  int arg5 ;
  cv::Exception *result = 0 ;
  cv::Exception *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  cv::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  cv::string arg3_str(_swig_go_2.p, _swig_go_2.n);
  arg3 = &arg3_str;
  
  
  cv::string arg4_str(_swig_go_3.p, _swig_go_3.n);
  arg4 = &arg4_str;
  
  arg5 = (int)_swig_go_4; 
  
  result = (cv::Exception *)new cv::Exception(arg1,(cv::string const &)*arg2,(cv::string const &)*arg3,(cv::string const &)*arg4,arg5);
  *(cv::Exception **)&_swig_go_result = (cv::Exception *)result; 
  return _swig_go_result;
}


void _wrap_delete_Exception_cv_dbcbba478e71899d(cv::Exception *_swig_go_0) {
  cv::Exception *arg1 = (cv::Exception *) 0 ;
  
  arg1 = *(cv::Exception **)&_swig_go_0; 
  
  delete arg1;
  
}


_gostring_ _wrap_Exception_what_cv_dbcbba478e71899d(cv::Exception *_swig_go_0) {
  cv::Exception *arg1 = (cv::Exception *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::Exception **)&_swig_go_0; 
  
  result = (char *)((cv::Exception const *)arg1)->what();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_Exception_formatMessage_cv_dbcbba478e71899d(cv::Exception *_swig_go_0) {
  cv::Exception *arg1 = (cv::Exception *) 0 ;
  
  arg1 = *(cv::Exception **)&_swig_go_0; 
  
  (arg1)->formatMessage();
  
}


void _wrap_Exception_msg_set_cv_dbcbba478e71899d(cv::Exception *_swig_go_0, _gostring_ _swig_go_1) {
  cv::Exception *arg1 = (cv::Exception *) 0 ;
  cv::string *arg2 = 0 ;
  
  arg1 = *(cv::Exception **)&_swig_go_0; 
  
  cv::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  if (arg1) (arg1)->msg = *arg2;
  
}


_gostring_ _wrap_Exception_msg_get_cv_dbcbba478e71899d(cv::Exception *_swig_go_0) {
  cv::Exception *arg1 = (cv::Exception *) 0 ;
  cv::string *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::Exception **)&_swig_go_0; 
  
  result = (cv::string *) & ((arg1)->msg);
  _swig_go_result = Swig_AllocateString((*result).data(), (*result).length()); 
  return _swig_go_result;
}


void _wrap_Exception_code_set_cv_dbcbba478e71899d(cv::Exception *_swig_go_0, intgo _swig_go_1) {
  cv::Exception *arg1 = (cv::Exception *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::Exception **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->code = arg2;
  
}


intgo _wrap_Exception_code_get_cv_dbcbba478e71899d(cv::Exception *_swig_go_0) {
  cv::Exception *arg1 = (cv::Exception *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::Exception **)&_swig_go_0; 
  
  result = (int) ((arg1)->code);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Exception_err_set_cv_dbcbba478e71899d(cv::Exception *_swig_go_0, _gostring_ _swig_go_1) {
  cv::Exception *arg1 = (cv::Exception *) 0 ;
  cv::string *arg2 = 0 ;
  
  arg1 = *(cv::Exception **)&_swig_go_0; 
  
  cv::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  if (arg1) (arg1)->err = *arg2;
  
}


_gostring_ _wrap_Exception_err_get_cv_dbcbba478e71899d(cv::Exception *_swig_go_0) {
  cv::Exception *arg1 = (cv::Exception *) 0 ;
  cv::string *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::Exception **)&_swig_go_0; 
  
  result = (cv::string *) & ((arg1)->err);
  _swig_go_result = Swig_AllocateString((*result).data(), (*result).length()); 
  return _swig_go_result;
}


void _wrap_Exception_Xfunc_set_cv_dbcbba478e71899d(cv::Exception *_swig_go_0, _gostring_ _swig_go_1) {
  cv::Exception *arg1 = (cv::Exception *) 0 ;
  cv::string *arg2 = 0 ;
  
  arg1 = *(cv::Exception **)&_swig_go_0; 
  
  cv::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  if (arg1) (arg1)->func = *arg2;
  
}


_gostring_ _wrap_Exception_Xfunc_get_cv_dbcbba478e71899d(cv::Exception *_swig_go_0) {
  cv::Exception *arg1 = (cv::Exception *) 0 ;
  cv::string *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::Exception **)&_swig_go_0; 
  
  result = (cv::string *) & ((arg1)->func);
  _swig_go_result = Swig_AllocateString((*result).data(), (*result).length()); 
  return _swig_go_result;
}


void _wrap_Exception_file_set_cv_dbcbba478e71899d(cv::Exception *_swig_go_0, _gostring_ _swig_go_1) {
  cv::Exception *arg1 = (cv::Exception *) 0 ;
  cv::string *arg2 = 0 ;
  
  arg1 = *(cv::Exception **)&_swig_go_0; 
  
  cv::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  if (arg1) (arg1)->file = *arg2;
  
}


_gostring_ _wrap_Exception_file_get_cv_dbcbba478e71899d(cv::Exception *_swig_go_0) {
  cv::Exception *arg1 = (cv::Exception *) 0 ;
  cv::string *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::Exception **)&_swig_go_0; 
  
  result = (cv::string *) & ((arg1)->file);
  _swig_go_result = Swig_AllocateString((*result).data(), (*result).length()); 
  return _swig_go_result;
}


void _wrap_Exception_line_set_cv_dbcbba478e71899d(cv::Exception *_swig_go_0, intgo _swig_go_1) {
  cv::Exception *arg1 = (cv::Exception *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::Exception **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->line = arg2;
  
}


intgo _wrap_Exception_line_get_cv_dbcbba478e71899d(cv::Exception *_swig_go_0) {
  cv::Exception *arg1 = (cv::Exception *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::Exception **)&_swig_go_0; 
  
  result = (int) ((arg1)->line);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_error_cv_dbcbba478e71899d(cv::Exception *_swig_go_0) {
  cv::Exception *arg1 = 0 ;
  
  arg1 = *(cv::Exception **)&_swig_go_0; 
  
  cv::error((cv::Exception const &)*arg1);
  
}


bool _wrap_setBreakOnError_cv_dbcbba478e71899d(bool _swig_go_0) {
  bool arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (bool)_swig_go_0; 
  
  result = (bool)cv::setBreakOnError(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void** _wrap_redirectError__SWIG_0_cv_dbcbba478e71899d(void** _swig_go_0, void *_swig_go_1, void **_swig_go_2) {
  cv::ErrorCallback arg1 = (cv::ErrorCallback) 0 ;
  void *arg2 = (void *) 0 ;
  void **arg3 = (void **) 0 ;
  cv::ErrorCallback result;
  void** _swig_go_result;
  
  arg1 = *(cv::ErrorCallback *)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = *(void ***)&_swig_go_2; 
  
  result = (cv::ErrorCallback)cv::redirectError(arg1,arg2,arg3);
  *(cv::ErrorCallback *)&_swig_go_result = (cv::ErrorCallback)result; 
  return _swig_go_result;
}


void** _wrap_redirectError__SWIG_1_cv_dbcbba478e71899d(void** _swig_go_0, void *_swig_go_1) {
  cv::ErrorCallback arg1 = (cv::ErrorCallback) 0 ;
  void *arg2 = (void *) 0 ;
  cv::ErrorCallback result;
  void** _swig_go_result;
  
  arg1 = *(cv::ErrorCallback *)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  result = (cv::ErrorCallback)cv::redirectError(arg1,arg2);
  *(cv::ErrorCallback *)&_swig_go_result = (cv::ErrorCallback)result; 
  return _swig_go_result;
}


void** _wrap_redirectError__SWIG_2_cv_dbcbba478e71899d(void** _swig_go_0) {
  cv::ErrorCallback arg1 = (cv::ErrorCallback) 0 ;
  cv::ErrorCallback result;
  void** _swig_go_result;
  
  arg1 = *(cv::ErrorCallback *)&_swig_go_0; 
  
  result = (cv::ErrorCallback)cv::redirectError(arg1);
  *(cv::ErrorCallback *)&_swig_go_result = (cv::ErrorCallback)result; 
  return _swig_go_result;
}


_gostring_ _wrap_CV_Func_cv_dbcbba478e71899d() {
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  
  result = "\0";
  
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_glob__SWIG_0_cv_dbcbba478e71899d(_gostring_ _swig_go_0, std::vector< std::string > *_swig_go_1, bool _swig_go_2) {
  cv::String arg1 ;
  std::vector< cv::String > *arg2 = 0 ;
  bool arg3 ;
  
  (&arg1)->assign(_swig_go_0.p, _swig_go_0.n); 
  arg2 = *(std::vector< cv::String > **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  cv::glob(arg1,*arg2,arg3);
  
}


void _wrap_glob__SWIG_1_cv_dbcbba478e71899d(_gostring_ _swig_go_0, std::vector< std::string > *_swig_go_1) {
  cv::String arg1 ;
  std::vector< cv::String > *arg2 = 0 ;
  
  (&arg1)->assign(_swig_go_0.p, _swig_go_0.n); 
  arg2 = *(std::vector< cv::String > **)&_swig_go_1; 
  
  cv::glob(arg1,*arg2);
  
}


void _wrap_setNumThreads_cv_dbcbba478e71899d(intgo _swig_go_0) {
  int arg1 ;
  
  arg1 = (int)_swig_go_0; 
  
  cv::setNumThreads(arg1);
  
}


intgo _wrap_getNumThreads_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)cv::getNumThreads();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_getThreadNum_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)cv::getThreadNum();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_getBuildInformation_cv_dbcbba478e71899d() {
  cv::string *result = 0 ;
  _gostring_ _swig_go_result;
  
  
  result = (cv::string *) &cv::getBuildInformation();
  _swig_go_result = Swig_AllocateString((*result).data(), (*result).length()); 
  return _swig_go_result;
}


int64_t *_wrap_getTickCount_cv_dbcbba478e71899d() {
  int64 result;
  int64_t *_swig_go_result;
  
  
  result = cv::getTickCount();
  *(int64 **)&_swig_go_result = new int64(result); 
  return _swig_go_result;
}


double _wrap_getTickFrequency_cv_dbcbba478e71899d() {
  double result;
  double _swig_go_result;
  
  
  result = (double)cv::getTickFrequency();
  _swig_go_result = result; 
  return _swig_go_result;
}


int64_t *_wrap_getCPUTickCount_cv_dbcbba478e71899d() {
  int64 result;
  int64_t *_swig_go_result;
  
  
  result = cv::getCPUTickCount();
  *(int64 **)&_swig_go_result = new int64(result); 
  return _swig_go_result;
}


bool _wrap_checkHardwareSupport_cv_dbcbba478e71899d(intgo _swig_go_0) {
  int arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (bool)cv::checkHardwareSupport(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_getNumberOfCPUs_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)cv::getNumberOfCPUs();
  _swig_go_result = result; 
  return _swig_go_result;
}


void *_wrap_fastMalloc_cv_dbcbba478e71899d(long long _swig_go_0) {
  size_t arg1 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = (size_t)_swig_go_0; 
  
  result = (void *)cv::fastMalloc(arg1);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_fastFree_cv_dbcbba478e71899d(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  
  arg1 = *(void **)&_swig_go_0; 
  
  cv::fastFree(arg1);
  
}


long long _wrap_alignSize_cv_dbcbba478e71899d(long long _swig_go_0, intgo _swig_go_1) {
  size_t arg1 ;
  int arg2 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = (size_t)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = cv::alignSize(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_setUseOptimized_cv_dbcbba478e71899d(bool _swig_go_0) {
  bool arg1 ;
  
  arg1 = (bool)_swig_go_0; 
  
  cv::setUseOptimized(arg1);
  
}


bool _wrap_useOptimized_cv_dbcbba478e71899d() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)cv::useOptimized();
  _swig_go_result = result; 
  return _swig_go_result;
}


cv::Matx_AddOp *_wrap_new_Matx_AddOp_cv_dbcbba478e71899d() {
  cv::Matx_AddOp *result = 0 ;
  cv::Matx_AddOp *_swig_go_result;
  
  
  result = (cv::Matx_AddOp *)new cv::Matx_AddOp();
  *(cv::Matx_AddOp **)&_swig_go_result = (cv::Matx_AddOp *)result; 
  return _swig_go_result;
}


void _wrap_delete_Matx_AddOp_cv_dbcbba478e71899d(cv::Matx_AddOp *_swig_go_0) {
  cv::Matx_AddOp *arg1 = (cv::Matx_AddOp *) 0 ;
  
  arg1 = *(cv::Matx_AddOp **)&_swig_go_0; 
  
  delete arg1;
  
}


cv::Matx_SubOp *_wrap_new_Matx_SubOp_cv_dbcbba478e71899d() {
  cv::Matx_SubOp *result = 0 ;
  cv::Matx_SubOp *_swig_go_result;
  
  
  result = (cv::Matx_SubOp *)new cv::Matx_SubOp();
  *(cv::Matx_SubOp **)&_swig_go_result = (cv::Matx_SubOp *)result; 
  return _swig_go_result;
}


void _wrap_delete_Matx_SubOp_cv_dbcbba478e71899d(cv::Matx_SubOp *_swig_go_0) {
  cv::Matx_SubOp *arg1 = (cv::Matx_SubOp *) 0 ;
  
  arg1 = *(cv::Matx_SubOp **)&_swig_go_0; 
  
  delete arg1;
  
}


cv::Matx_ScaleOp *_wrap_new_Matx_ScaleOp_cv_dbcbba478e71899d() {
  cv::Matx_ScaleOp *result = 0 ;
  cv::Matx_ScaleOp *_swig_go_result;
  
  
  result = (cv::Matx_ScaleOp *)new cv::Matx_ScaleOp();
  *(cv::Matx_ScaleOp **)&_swig_go_result = (cv::Matx_ScaleOp *)result; 
  return _swig_go_result;
}


void _wrap_delete_Matx_ScaleOp_cv_dbcbba478e71899d(cv::Matx_ScaleOp *_swig_go_0) {
  cv::Matx_ScaleOp *arg1 = (cv::Matx_ScaleOp *) 0 ;
  
  arg1 = *(cv::Matx_ScaleOp **)&_swig_go_0; 
  
  delete arg1;
  
}


cv::Matx_MulOp *_wrap_new_Matx_MulOp_cv_dbcbba478e71899d() {
  cv::Matx_MulOp *result = 0 ;
  cv::Matx_MulOp *_swig_go_result;
  
  
  result = (cv::Matx_MulOp *)new cv::Matx_MulOp();
  *(cv::Matx_MulOp **)&_swig_go_result = (cv::Matx_MulOp *)result; 
  return _swig_go_result;
}


void _wrap_delete_Matx_MulOp_cv_dbcbba478e71899d(cv::Matx_MulOp *_swig_go_0) {
  cv::Matx_MulOp *arg1 = (cv::Matx_MulOp *) 0 ;
  
  arg1 = *(cv::Matx_MulOp **)&_swig_go_0; 
  
  delete arg1;
  
}


cv::Matx_MatMulOp *_wrap_new_Matx_MatMulOp_cv_dbcbba478e71899d() {
  cv::Matx_MatMulOp *result = 0 ;
  cv::Matx_MatMulOp *_swig_go_result;
  
  
  result = (cv::Matx_MatMulOp *)new cv::Matx_MatMulOp();
  *(cv::Matx_MatMulOp **)&_swig_go_result = (cv::Matx_MatMulOp *)result; 
  return _swig_go_result;
}


void _wrap_delete_Matx_MatMulOp_cv_dbcbba478e71899d(cv::Matx_MatMulOp *_swig_go_0) {
  cv::Matx_MatMulOp *arg1 = (cv::Matx_MatMulOp *) 0 ;
  
  arg1 = *(cv::Matx_MatMulOp **)&_swig_go_0; 
  
  delete arg1;
  
}


cv::Matx_TOp *_wrap_new_Matx_TOp_cv_dbcbba478e71899d() {
  cv::Matx_TOp *result = 0 ;
  cv::Matx_TOp *_swig_go_result;
  
  
  result = (cv::Matx_TOp *)new cv::Matx_TOp();
  *(cv::Matx_TOp **)&_swig_go_result = (cv::Matx_TOp *)result; 
  return _swig_go_result;
}


void _wrap_delete_Matx_TOp_cv_dbcbba478e71899d(cv::Matx_TOp *_swig_go_0) {
  cv::Matx_TOp *arg1 = (cv::Matx_TOp *) 0 ;
  
  arg1 = *(cv::Matx_TOp **)&_swig_go_0; 
  
  delete arg1;
  
}


cv::RotatedRect *_wrap_new_RotatedRect__SWIG_0_cv_dbcbba478e71899d() {
  cv::RotatedRect *result = 0 ;
  cv::RotatedRect *_swig_go_result;
  
  
  result = (cv::RotatedRect *)new cv::RotatedRect();
  *(cv::RotatedRect **)&_swig_go_result = (cv::RotatedRect *)result; 
  return _swig_go_result;
}


cv::RotatedRect *_wrap_new_RotatedRect__SWIG_1_cv_dbcbba478e71899d(cv::Point_< float > *_swig_go_0, cv::Size_< float > *_swig_go_1, float _swig_go_2) {
  cv::Point2f *arg1 = 0 ;
  cv::Size2f *arg2 = 0 ;
  float arg3 ;
  cv::RotatedRect *result = 0 ;
  cv::RotatedRect *_swig_go_result;
  
  arg1 = *(cv::Point2f **)&_swig_go_0; 
  arg2 = *(cv::Size2f **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  result = (cv::RotatedRect *)new cv::RotatedRect((cv::Point2f const &)*arg1,(cv::Size2f const &)*arg2,arg3);
  *(cv::RotatedRect **)&_swig_go_result = (cv::RotatedRect *)result; 
  return _swig_go_result;
}


cv::RotatedRect *_wrap_new_RotatedRect__SWIG_2_cv_dbcbba478e71899d(CvBox2D *_swig_go_0) {
  CvBox2D *arg1 = 0 ;
  cv::RotatedRect *result = 0 ;
  cv::RotatedRect *_swig_go_result;
  
  arg1 = *(CvBox2D **)&_swig_go_0; 
  
  result = (cv::RotatedRect *)new cv::RotatedRect((CvBox2D const &)*arg1);
  *(cv::RotatedRect **)&_swig_go_result = (cv::RotatedRect *)result; 
  return _swig_go_result;
}


void _wrap_RotatedRect_points_cv_dbcbba478e71899d(cv::RotatedRect *_swig_go_0, cv::Point_< float > *_swig_go_1) {
  cv::RotatedRect *arg1 = (cv::RotatedRect *) 0 ;
  cv::Point2f *arg2 ;
  
  arg1 = *(cv::RotatedRect **)&_swig_go_0; 
  arg2 = *(cv::Point2f **)&_swig_go_1; 
  
  ((cv::RotatedRect const *)arg1)->points(arg2);
  
}


cv::Rect_< int > *_wrap_RotatedRect_boundingRect_cv_dbcbba478e71899d(cv::RotatedRect *_swig_go_0) {
  cv::RotatedRect *arg1 = (cv::RotatedRect *) 0 ;
  SwigValueWrapper< cv::Rect_< int > > result;
  cv::Rect_< int > *_swig_go_result;
  
  arg1 = *(cv::RotatedRect **)&_swig_go_0; 
  
  result = ((cv::RotatedRect const *)arg1)->boundingRect();
  *(cv::Rect **)&_swig_go_result = new cv::Rect(result); 
  return _swig_go_result;
}


void _wrap_RotatedRect_center_set_cv_dbcbba478e71899d(cv::RotatedRect *_swig_go_0, cv::Point_< float > *_swig_go_1) {
  cv::RotatedRect *arg1 = (cv::RotatedRect *) 0 ;
  cv::Point2f *arg2 = (cv::Point2f *) 0 ;
  
  arg1 = *(cv::RotatedRect **)&_swig_go_0; 
  arg2 = *(cv::Point2f **)&_swig_go_1; 
  
  if (arg1) (arg1)->center = *arg2;
  
}


cv::Point_< float > *_wrap_RotatedRect_center_get_cv_dbcbba478e71899d(cv::RotatedRect *_swig_go_0) {
  cv::RotatedRect *arg1 = (cv::RotatedRect *) 0 ;
  cv::Point2f *result = 0 ;
  cv::Point_< float > *_swig_go_result;
  
  arg1 = *(cv::RotatedRect **)&_swig_go_0; 
  
  result = (cv::Point2f *)& ((arg1)->center);
  *(cv::Point2f **)&_swig_go_result = (cv::Point2f *)result; 
  return _swig_go_result;
}


void _wrap_RotatedRect_size_set_cv_dbcbba478e71899d(cv::RotatedRect *_swig_go_0, cv::Size_< float > *_swig_go_1) {
  cv::RotatedRect *arg1 = (cv::RotatedRect *) 0 ;
  cv::Size2f *arg2 = (cv::Size2f *) 0 ;
  
  arg1 = *(cv::RotatedRect **)&_swig_go_0; 
  arg2 = *(cv::Size2f **)&_swig_go_1; 
  
  if (arg1) (arg1)->size = *arg2;
  
}


cv::Size_< float > *_wrap_RotatedRect_size_get_cv_dbcbba478e71899d(cv::RotatedRect *_swig_go_0) {
  cv::RotatedRect *arg1 = (cv::RotatedRect *) 0 ;
  cv::Size2f *result = 0 ;
  cv::Size_< float > *_swig_go_result;
  
  arg1 = *(cv::RotatedRect **)&_swig_go_0; 
  
  result = (cv::Size2f *)& ((arg1)->size);
  *(cv::Size2f **)&_swig_go_result = (cv::Size2f *)result; 
  return _swig_go_result;
}


void _wrap_RotatedRect_angle_set_cv_dbcbba478e71899d(cv::RotatedRect *_swig_go_0, float _swig_go_1) {
  cv::RotatedRect *arg1 = (cv::RotatedRect *) 0 ;
  float arg2 ;
  
  arg1 = *(cv::RotatedRect **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->angle = arg2;
  
}


float _wrap_RotatedRect_angle_get_cv_dbcbba478e71899d(cv::RotatedRect *_swig_go_0) {
  cv::RotatedRect *arg1 = (cv::RotatedRect *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(cv::RotatedRect **)&_swig_go_0; 
  
  result = (float) ((arg1)->angle);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_RotatedRect_cv_dbcbba478e71899d(cv::RotatedRect *_swig_go_0) {
  cv::RotatedRect *arg1 = (cv::RotatedRect *) 0 ;
  
  arg1 = *(cv::RotatedRect **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_scalarToRawData__SWIG_0_cv_dbcbba478e71899d(cv::Scalar_< double > *_swig_go_0, void *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  cv::Scalar *arg1 = 0 ;
  void *arg2 = (void *) 0 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = *(cv::Scalar **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  cv::scalarToRawData((cv::Scalar_< double > const &)*arg1,arg2,arg3,arg4);
  
}


void _wrap_scalarToRawData__SWIG_1_cv_dbcbba478e71899d(cv::Scalar_< double > *_swig_go_0, void *_swig_go_1, intgo _swig_go_2) {
  cv::Scalar *arg1 = 0 ;
  void *arg2 = (void *) 0 ;
  int arg3 ;
  
  arg1 = *(cv::Scalar **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  cv::scalarToRawData((cv::Scalar_< double > const &)*arg1,arg2,arg3);
  
}


cv::Range *_wrap_new_Range__SWIG_0_cv_dbcbba478e71899d() {
  cv::Range *result = 0 ;
  cv::Range *_swig_go_result;
  
  
  result = (cv::Range *)new cv::Range();
  *(cv::Range **)&_swig_go_result = (cv::Range *)result; 
  return _swig_go_result;
}


cv::Range *_wrap_new_Range__SWIG_1_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1) {
  int arg1 ;
  int arg2 ;
  cv::Range *result = 0 ;
  cv::Range *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (cv::Range *)new cv::Range(arg1,arg2);
  *(cv::Range **)&_swig_go_result = (cv::Range *)result; 
  return _swig_go_result;
}


cv::Range *_wrap_new_Range__SWIG_2_cv_dbcbba478e71899d(CvSlice *_swig_go_0) {
  CvSlice *arg1 = 0 ;
  cv::Range *result = 0 ;
  cv::Range *_swig_go_result;
  
  arg1 = *(CvSlice **)&_swig_go_0; 
  
  result = (cv::Range *)new cv::Range((CvSlice const &)*arg1);
  *(cv::Range **)&_swig_go_result = (cv::Range *)result; 
  return _swig_go_result;
}


intgo _wrap_Range_size_cv_dbcbba478e71899d(cv::Range *_swig_go_0) {
  cv::Range *arg1 = (cv::Range *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::Range **)&_swig_go_0; 
  
  result = (int)((cv::Range const *)arg1)->size();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_Range_empty_cv_dbcbba478e71899d(cv::Range *_swig_go_0) {
  cv::Range *arg1 = (cv::Range *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::Range **)&_swig_go_0; 
  
  result = (bool)((cv::Range const *)arg1)->empty();
  _swig_go_result = result; 
  return _swig_go_result;
}


cv::Range *_wrap_Range_all_cv_dbcbba478e71899d() {
  cv::Range result;
  cv::Range *_swig_go_result;
  
  
  result = cv::Range::all();
  *(cv::Range **)&_swig_go_result = new cv::Range(result); 
  return _swig_go_result;
}


void _wrap_Range_start_set_cv_dbcbba478e71899d(cv::Range *_swig_go_0, intgo _swig_go_1) {
  cv::Range *arg1 = (cv::Range *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::Range **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->start = arg2;
  
}


intgo _wrap_Range_start_get_cv_dbcbba478e71899d(cv::Range *_swig_go_0) {
  cv::Range *arg1 = (cv::Range *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::Range **)&_swig_go_0; 
  
  result = (int) ((arg1)->start);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Range_end_set_cv_dbcbba478e71899d(cv::Range *_swig_go_0, intgo _swig_go_1) {
  cv::Range *arg1 = (cv::Range *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::Range **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->end = arg2;
  
}


intgo _wrap_Range_end_get_cv_dbcbba478e71899d(cv::Range *_swig_go_0) {
  cv::Range *arg1 = (cv::Range *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::Range **)&_swig_go_0; 
  
  result = (int) ((arg1)->end);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_Range_cv_dbcbba478e71899d(cv::Range *_swig_go_0) {
  cv::Range *arg1 = (cv::Range *) 0 ;
  
  arg1 = *(cv::Range **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_KIND_SHIFT__InputArray_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::_InputArray::KIND_SHIFT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_FIXED_TYPE__InputArray_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::_InputArray::FIXED_TYPE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_FIXED_SIZE__InputArray_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::_InputArray::FIXED_SIZE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_KIND_MASK__InputArray_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::_InputArray::KIND_MASK;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_NONE__InputArray_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::_InputArray::NONE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_MAT__InputArray_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::_InputArray::MAT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_MATX__InputArray_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::_InputArray::MATX;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_STD_VECTOR__InputArray_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::_InputArray::STD_VECTOR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_STD_VECTOR_VECTOR__InputArray_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::_InputArray::STD_VECTOR_VECTOR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_STD_VECTOR_MAT__InputArray_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::_InputArray::STD_VECTOR_MAT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_EXPR__InputArray_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::_InputArray::EXPR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_OPENGL_BUFFER__InputArray_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::_InputArray::OPENGL_BUFFER;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_OPENGL_TEXTURE__InputArray_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::_InputArray::OPENGL_TEXTURE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_GPU_MAT__InputArray_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::_InputArray::GPU_MAT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_OCL_MAT__InputArray_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::_InputArray::OCL_MAT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


cv::_InputArray *_wrap_new__InputArray__SWIG_0_cv_dbcbba478e71899d() {
  cv::_InputArray *result = 0 ;
  cv::_InputArray *_swig_go_result;
  
  
  result = (cv::_InputArray *)new cv::_InputArray();
  *(cv::_InputArray **)&_swig_go_result = (cv::_InputArray *)result; 
  return _swig_go_result;
}


cv::_InputArray *_wrap_new__InputArray__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = 0 ;
  cv::_InputArray *result = 0 ;
  cv::_InputArray *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = (cv::_InputArray *)new cv::_InputArray((cv::Mat const &)*arg1);
  *(cv::_InputArray **)&_swig_go_result = (cv::_InputArray *)result; 
  return _swig_go_result;
}


cv::_InputArray *_wrap_new__InputArray__SWIG_2_cv_dbcbba478e71899d(cv::MatExpr *_swig_go_0) {
  cv::MatExpr *arg1 = 0 ;
  cv::_InputArray *result = 0 ;
  cv::_InputArray *_swig_go_result;
  
  arg1 = *(cv::MatExpr **)&_swig_go_0; 
  
  result = (cv::_InputArray *)new cv::_InputArray((cv::MatExpr const &)*arg1);
  *(cv::_InputArray **)&_swig_go_result = (cv::_InputArray *)result; 
  return _swig_go_result;
}


cv::_InputArray *_wrap_new__InputArray__SWIG_6_cv_dbcbba478e71899d(std::vector< cv::Mat > *_swig_go_0) {
  std::vector< cv::Mat > *arg1 = 0 ;
  cv::_InputArray *result = 0 ;
  cv::_InputArray *_swig_go_result;
  
  arg1 = *(std::vector< cv::Mat > **)&_swig_go_0; 
  
  result = (cv::_InputArray *)new cv::_InputArray((std::vector< cv::Mat > const &)*arg1);
  *(cv::_InputArray **)&_swig_go_result = (cv::_InputArray *)result; 
  return _swig_go_result;
}


cv::_InputArray *_wrap_new__InputArray__SWIG_10_cv_dbcbba478e71899d(cv::Scalar_< double > *_swig_go_0) {
  cv::Scalar *arg1 = 0 ;
  cv::_InputArray *result = 0 ;
  cv::_InputArray *_swig_go_result;
  
  arg1 = *(cv::Scalar **)&_swig_go_0; 
  
  result = (cv::_InputArray *)new cv::_InputArray((cv::Scalar const &)*arg1);
  *(cv::_InputArray **)&_swig_go_result = (cv::_InputArray *)result; 
  return _swig_go_result;
}


cv::_InputArray *_wrap_new__InputArray__SWIG_11_cv_dbcbba478e71899d(double _swig_go_0) {
  double *arg1 = 0 ;
  cv::_InputArray *result = 0 ;
  cv::_InputArray *_swig_go_result;
  
  arg1 = (double *)&_swig_go_0; 
  
  result = (cv::_InputArray *)new cv::_InputArray((double const &)*arg1);
  *(cv::_InputArray **)&_swig_go_result = (cv::_InputArray *)result; 
  return _swig_go_result;
}


cv::_InputArray *_wrap_new__InputArray__SWIG_12_cv_dbcbba478e71899d(cv::GlBuffer *_swig_go_0) {
  cv::GlBuffer *arg1 = 0 ;
  cv::_InputArray *result = 0 ;
  cv::_InputArray *_swig_go_result;
  
  arg1 = *(cv::GlBuffer **)&_swig_go_0; 
  
  result = (cv::_InputArray *)new cv::_InputArray((cv::GlBuffer const &)*arg1);
  *(cv::_InputArray **)&_swig_go_result = (cv::_InputArray *)result; 
  return _swig_go_result;
}


cv::_InputArray *_wrap_new__InputArray__SWIG_13_cv_dbcbba478e71899d(cv::GlTexture *_swig_go_0) {
  cv::GlTexture *arg1 = 0 ;
  cv::_InputArray *result = 0 ;
  cv::_InputArray *_swig_go_result;
  
  arg1 = *(cv::GlTexture **)&_swig_go_0; 
  
  result = (cv::_InputArray *)new cv::_InputArray((cv::GlTexture const &)*arg1);
  *(cv::_InputArray **)&_swig_go_result = (cv::_InputArray *)result; 
  return _swig_go_result;
}


cv::_InputArray *_wrap_new__InputArray__SWIG_14_cv_dbcbba478e71899d(cv::gpu::GpuMat *_swig_go_0) {
  cv::gpu::GpuMat *arg1 = 0 ;
  cv::_InputArray *result = 0 ;
  cv::_InputArray *_swig_go_result;
  
  arg1 = *(cv::gpu::GpuMat **)&_swig_go_0; 
  
  result = (cv::_InputArray *)new cv::_InputArray((cv::gpu::GpuMat const &)*arg1);
  *(cv::_InputArray **)&_swig_go_result = (cv::_InputArray *)result; 
  return _swig_go_result;
}


cv::_InputArray *_wrap_new__InputArray__SWIG_15_cv_dbcbba478e71899d(cv::ogl::Buffer *_swig_go_0) {
  cv::ogl::Buffer *arg1 = 0 ;
  cv::_InputArray *result = 0 ;
  cv::_InputArray *_swig_go_result;
  
  arg1 = *(cv::ogl::Buffer **)&_swig_go_0; 
  
  result = (cv::_InputArray *)new cv::_InputArray((cv::ogl::Buffer const &)*arg1);
  *(cv::_InputArray **)&_swig_go_result = (cv::_InputArray *)result; 
  return _swig_go_result;
}


cv::_InputArray *_wrap_new__InputArray__SWIG_16_cv_dbcbba478e71899d(cv::ogl::Texture2D *_swig_go_0) {
  cv::ogl::Texture2D *arg1 = 0 ;
  cv::_InputArray *result = 0 ;
  cv::_InputArray *_swig_go_result;
  
  arg1 = *(cv::ogl::Texture2D **)&_swig_go_0; 
  
  result = (cv::_InputArray *)new cv::_InputArray((cv::ogl::Texture2D const &)*arg1);
  *(cv::_InputArray **)&_swig_go_result = (cv::_InputArray *)result; 
  return _swig_go_result;
}


cv::Mat *_wrap__InputArray_getMat__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, intgo _swig_go_1) {
  cv::_InputArray *arg1 = (cv::_InputArray *) 0 ;
  int arg2 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = ((cv::_InputArray const *)arg1)->getMat(arg2);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


cv::Mat *_wrap__InputArray_getMat__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0) {
  cv::_InputArray *arg1 = (cv::_InputArray *) 0 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  result = ((cv::_InputArray const *)arg1)->getMat();
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


void _wrap__InputArray_getMatVector_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, std::vector< cv::Mat > *_swig_go_1) {
  cv::_InputArray *arg1 = (cv::_InputArray *) 0 ;
  std::vector< cv::Mat > *arg2 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(std::vector< cv::Mat > **)&_swig_go_1; 
  
  ((cv::_InputArray const *)arg1)->getMatVector(*arg2);
  
}


cv::GlBuffer *_wrap__InputArray_getGlBuffer_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0) {
  cv::_InputArray *arg1 = (cv::_InputArray *) 0 ;
  SwigValueWrapper< cv::GlBuffer > result;
  cv::GlBuffer *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  result = ((cv::_InputArray const *)arg1)->getGlBuffer();
  *(cv::GlBuffer **)&_swig_go_result = new cv::GlBuffer(result); 
  return _swig_go_result;
}


cv::GlTexture *_wrap__InputArray_getGlTexture_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0) {
  cv::_InputArray *arg1 = (cv::_InputArray *) 0 ;
  cv::GlTexture result;
  cv::GlTexture *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  result = ((cv::_InputArray const *)arg1)->getGlTexture();
  *(cv::GlTexture **)&_swig_go_result = new cv::GlTexture(result); 
  return _swig_go_result;
}


cv::gpu::GpuMat *_wrap__InputArray_getGpuMat_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0) {
  cv::_InputArray *arg1 = (cv::_InputArray *) 0 ;
  cv::gpu::GpuMat result;
  cv::gpu::GpuMat *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  result = ((cv::_InputArray const *)arg1)->getGpuMat();
  *(cv::gpu::GpuMat **)&_swig_go_result = new cv::gpu::GpuMat(result); 
  return _swig_go_result;
}


cv::ogl::Buffer *_wrap__InputArray_getOGlBuffer_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0) {
  cv::_InputArray *arg1 = (cv::_InputArray *) 0 ;
  cv::ogl::Buffer result;
  cv::ogl::Buffer *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  result = ((cv::_InputArray const *)arg1)->getOGlBuffer();
  *(cv::ogl::Buffer **)&_swig_go_result = new cv::ogl::Buffer(result); 
  return _swig_go_result;
}


cv::ogl::Texture2D *_wrap__InputArray_getOGlTexture2D_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0) {
  cv::_InputArray *arg1 = (cv::_InputArray *) 0 ;
  cv::ogl::Texture2D result;
  cv::ogl::Texture2D *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  result = ((cv::_InputArray const *)arg1)->getOGlTexture2D();
  *(cv::ogl::Texture2D **)&_swig_go_result = new cv::ogl::Texture2D(result); 
  return _swig_go_result;
}


intgo _wrap__InputArray_kind_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0) {
  cv::_InputArray *arg1 = (cv::_InputArray *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  result = (int)((cv::_InputArray const *)arg1)->kind();
  _swig_go_result = result; 
  return _swig_go_result;
}


cv::Size_< int > *_wrap__InputArray_size__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, intgo _swig_go_1) {
  cv::_InputArray *arg1 = (cv::_InputArray *) 0 ;
  int arg2 ;
  SwigValueWrapper< cv::Size_< int > > result;
  cv::Size_< int > *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = ((cv::_InputArray const *)arg1)->size(arg2);
  *(cv::Size **)&_swig_go_result = new cv::Size(result); 
  return _swig_go_result;
}


cv::Size_< int > *_wrap__InputArray_size__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0) {
  cv::_InputArray *arg1 = (cv::_InputArray *) 0 ;
  SwigValueWrapper< cv::Size_< int > > result;
  cv::Size_< int > *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  result = ((cv::_InputArray const *)arg1)->size();
  *(cv::Size **)&_swig_go_result = new cv::Size(result); 
  return _swig_go_result;
}


long long _wrap__InputArray_total__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, intgo _swig_go_1) {
  cv::_InputArray *arg1 = (cv::_InputArray *) 0 ;
  int arg2 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = ((cv::_InputArray const *)arg1)->total(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap__InputArray_total__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0) {
  cv::_InputArray *arg1 = (cv::_InputArray *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  result = ((cv::_InputArray const *)arg1)->total();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap__InputArray_Xtype__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, intgo _swig_go_1) {
  cv::_InputArray *arg1 = (cv::_InputArray *) 0 ;
  int arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (int)((cv::_InputArray const *)arg1)->type(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap__InputArray_Xtype__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0) {
  cv::_InputArray *arg1 = (cv::_InputArray *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  result = (int)((cv::_InputArray const *)arg1)->type();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap__InputArray_depth__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, intgo _swig_go_1) {
  cv::_InputArray *arg1 = (cv::_InputArray *) 0 ;
  int arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (int)((cv::_InputArray const *)arg1)->depth(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap__InputArray_depth__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0) {
  cv::_InputArray *arg1 = (cv::_InputArray *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  result = (int)((cv::_InputArray const *)arg1)->depth();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap__InputArray_channels__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, intgo _swig_go_1) {
  cv::_InputArray *arg1 = (cv::_InputArray *) 0 ;
  int arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (int)((cv::_InputArray const *)arg1)->channels(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap__InputArray_channels__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0) {
  cv::_InputArray *arg1 = (cv::_InputArray *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  result = (int)((cv::_InputArray const *)arg1)->channels();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap__InputArray_empty_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0) {
  cv::_InputArray *arg1 = (cv::_InputArray *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  result = (bool)((cv::_InputArray const *)arg1)->empty();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap__InputArray_flags_set_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, intgo _swig_go_1) {
  cv::_InputArray *arg1 = (cv::_InputArray *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->flags = arg2;
  
}


intgo _wrap__InputArray_flags_get_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0) {
  cv::_InputArray *arg1 = (cv::_InputArray *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  result = (int) ((arg1)->flags);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap__InputArray_obj_set_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, void *_swig_go_1) {
  cv::_InputArray *arg1 = (cv::_InputArray *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->obj = arg2;
  
}


void *_wrap__InputArray_obj_get_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0) {
  cv::_InputArray *arg1 = (cv::_InputArray *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  result = (void *) ((arg1)->obj);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap__InputArray_sz_set_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::Size_< int > *_swig_go_1) {
  cv::_InputArray *arg1 = (cv::_InputArray *) 0 ;
  cv::Size *arg2 = (cv::Size *) 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::Size **)&_swig_go_1; 
  
  if (arg1) (arg1)->sz = *arg2;
  
}


cv::Size_< int > *_wrap__InputArray_sz_get_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0) {
  cv::_InputArray *arg1 = (cv::_InputArray *) 0 ;
  cv::Size *result = 0 ;
  cv::Size_< int > *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  result = (cv::Size *)& ((arg1)->sz);
  *(cv::Size **)&_swig_go_result = (cv::Size *)result; 
  return _swig_go_result;
}


void _wrap_delete__InputArray_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0) {
  cv::_InputArray *arg1 = (cv::_InputArray *) 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_DEPTH_MASK_8U_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::DEPTH_MASK_8U;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DEPTH_MASK_8S_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::DEPTH_MASK_8S;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DEPTH_MASK_16U_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::DEPTH_MASK_16U;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DEPTH_MASK_16S_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::DEPTH_MASK_16S;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DEPTH_MASK_32S_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::DEPTH_MASK_32S;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DEPTH_MASK_32F_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::DEPTH_MASK_32F;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DEPTH_MASK_64F_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::DEPTH_MASK_64F;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DEPTH_MASK_ALL_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::DEPTH_MASK_ALL;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DEPTH_MASK_ALL_BUT_8S_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::DEPTH_MASK_ALL_BUT_8S;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DEPTH_MASK_FLT_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::DEPTH_MASK_FLT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


cv::_OutputArray *_wrap_new__OutputArray__SWIG_0_cv_dbcbba478e71899d() {
  cv::_OutputArray *result = 0 ;
  cv::_OutputArray *_swig_go_result;
  
  
  result = (cv::_OutputArray *)new cv::_OutputArray();
  *(cv::_OutputArray **)&_swig_go_result = (cv::_OutputArray *)result; 
  return _swig_go_result;
}


cv::_OutputArray *_wrap_new__OutputArray__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = 0 ;
  cv::_OutputArray *result = 0 ;
  cv::_OutputArray *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = (cv::_OutputArray *)new cv::_OutputArray(*arg1);
  *(cv::_OutputArray **)&_swig_go_result = (cv::_OutputArray *)result; 
  return _swig_go_result;
}


cv::_OutputArray *_wrap_new__OutputArray__SWIG_4_cv_dbcbba478e71899d(std::vector< cv::Mat > *_swig_go_0) {
  std::vector< cv::Mat > *arg1 = 0 ;
  cv::_OutputArray *result = 0 ;
  cv::_OutputArray *_swig_go_result;
  
  arg1 = *(std::vector< cv::Mat > **)&_swig_go_0; 
  
  result = (cv::_OutputArray *)new cv::_OutputArray(*arg1);
  *(cv::_OutputArray **)&_swig_go_result = (cv::_OutputArray *)result; 
  return _swig_go_result;
}


cv::_OutputArray *_wrap_new__OutputArray__SWIG_9_cv_dbcbba478e71899d(cv::gpu::GpuMat *_swig_go_0) {
  cv::gpu::GpuMat *arg1 = 0 ;
  cv::_OutputArray *result = 0 ;
  cv::_OutputArray *_swig_go_result;
  
  arg1 = *(cv::gpu::GpuMat **)&_swig_go_0; 
  
  result = (cv::_OutputArray *)new cv::_OutputArray(*arg1);
  *(cv::_OutputArray **)&_swig_go_result = (cv::_OutputArray *)result; 
  return _swig_go_result;
}


cv::_OutputArray *_wrap_new__OutputArray__SWIG_10_cv_dbcbba478e71899d(cv::ogl::Buffer *_swig_go_0) {
  cv::ogl::Buffer *arg1 = 0 ;
  cv::_OutputArray *result = 0 ;
  cv::_OutputArray *_swig_go_result;
  
  arg1 = *(cv::ogl::Buffer **)&_swig_go_0; 
  
  result = (cv::_OutputArray *)new cv::_OutputArray(*arg1);
  *(cv::_OutputArray **)&_swig_go_result = (cv::_OutputArray *)result; 
  return _swig_go_result;
}


cv::_OutputArray *_wrap_new__OutputArray__SWIG_11_cv_dbcbba478e71899d(cv::ogl::Texture2D *_swig_go_0) {
  cv::ogl::Texture2D *arg1 = 0 ;
  cv::_OutputArray *result = 0 ;
  cv::_OutputArray *_swig_go_result;
  
  arg1 = *(cv::ogl::Texture2D **)&_swig_go_0; 
  
  result = (cv::_OutputArray *)new cv::_OutputArray(*arg1);
  *(cv::_OutputArray **)&_swig_go_result = (cv::_OutputArray *)result; 
  return _swig_go_result;
}


cv::_OutputArray *_wrap_new__OutputArray__SWIG_12_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = 0 ;
  cv::_OutputArray *result = 0 ;
  cv::_OutputArray *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = (cv::_OutputArray *)new cv::_OutputArray((cv::Mat const &)*arg1);
  *(cv::_OutputArray **)&_swig_go_result = (cv::_OutputArray *)result; 
  return _swig_go_result;
}


cv::_OutputArray *_wrap_new__OutputArray__SWIG_15_cv_dbcbba478e71899d(std::vector< cv::Mat > *_swig_go_0) {
  std::vector< cv::Mat > *arg1 = 0 ;
  cv::_OutputArray *result = 0 ;
  cv::_OutputArray *_swig_go_result;
  
  arg1 = *(std::vector< cv::Mat > **)&_swig_go_0; 
  
  result = (cv::_OutputArray *)new cv::_OutputArray((std::vector< cv::Mat > const &)*arg1);
  *(cv::_OutputArray **)&_swig_go_result = (cv::_OutputArray *)result; 
  return _swig_go_result;
}


cv::_OutputArray *_wrap_new__OutputArray__SWIG_20_cv_dbcbba478e71899d(cv::gpu::GpuMat *_swig_go_0) {
  cv::gpu::GpuMat *arg1 = 0 ;
  cv::_OutputArray *result = 0 ;
  cv::_OutputArray *_swig_go_result;
  
  arg1 = *(cv::gpu::GpuMat **)&_swig_go_0; 
  
  result = (cv::_OutputArray *)new cv::_OutputArray((cv::gpu::GpuMat const &)*arg1);
  *(cv::_OutputArray **)&_swig_go_result = (cv::_OutputArray *)result; 
  return _swig_go_result;
}


cv::_OutputArray *_wrap_new__OutputArray__SWIG_21_cv_dbcbba478e71899d(cv::ogl::Buffer *_swig_go_0) {
  cv::ogl::Buffer *arg1 = 0 ;
  cv::_OutputArray *result = 0 ;
  cv::_OutputArray *_swig_go_result;
  
  arg1 = *(cv::ogl::Buffer **)&_swig_go_0; 
  
  result = (cv::_OutputArray *)new cv::_OutputArray((cv::ogl::Buffer const &)*arg1);
  *(cv::_OutputArray **)&_swig_go_result = (cv::_OutputArray *)result; 
  return _swig_go_result;
}


cv::_OutputArray *_wrap_new__OutputArray__SWIG_22_cv_dbcbba478e71899d(cv::ogl::Texture2D *_swig_go_0) {
  cv::ogl::Texture2D *arg1 = 0 ;
  cv::_OutputArray *result = 0 ;
  cv::_OutputArray *_swig_go_result;
  
  arg1 = *(cv::ogl::Texture2D **)&_swig_go_0; 
  
  result = (cv::_OutputArray *)new cv::_OutputArray((cv::ogl::Texture2D const &)*arg1);
  *(cv::_OutputArray **)&_swig_go_result = (cv::_OutputArray *)result; 
  return _swig_go_result;
}


bool _wrap__OutputArray_fixedSize_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  result = (bool)((cv::_OutputArray const *)arg1)->fixedSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap__OutputArray_fixedType_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  result = (bool)((cv::_OutputArray const *)arg1)->fixedType();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap__OutputArray_needed_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  result = (bool)((cv::_OutputArray const *)arg1)->needed();
  _swig_go_result = result; 
  return _swig_go_result;
}


cv::Mat *_wrap__OutputArray_getMatRef__SWIG_0_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, intgo _swig_go_1) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  int arg2 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (cv::Mat *) &((cv::_OutputArray const *)arg1)->getMatRef(arg2);
  *(cv::Mat **)&_swig_go_result = result; 
  return _swig_go_result;
}


cv::Mat *_wrap__OutputArray_getMatRef__SWIG_1_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  result = (cv::Mat *) &((cv::_OutputArray const *)arg1)->getMatRef();
  *(cv::Mat **)&_swig_go_result = result; 
  return _swig_go_result;
}


cv::gpu::GpuMat *_wrap__OutputArray_getGpuMatRef_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  cv::gpu::GpuMat *result = 0 ;
  cv::gpu::GpuMat *_swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  result = (cv::gpu::GpuMat *) &((cv::_OutputArray const *)arg1)->getGpuMatRef();
  *(cv::gpu::GpuMat **)&_swig_go_result = result; 
  return _swig_go_result;
}


cv::ogl::Buffer *_wrap__OutputArray_getOGlBufferRef_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  cv::ogl::Buffer *result = 0 ;
  cv::ogl::Buffer *_swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  result = (cv::ogl::Buffer *) &((cv::_OutputArray const *)arg1)->getOGlBufferRef();
  *(cv::ogl::Buffer **)&_swig_go_result = result; 
  return _swig_go_result;
}


cv::ogl::Texture2D *_wrap__OutputArray_getOGlTexture2DRef_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  cv::ogl::Texture2D *result = 0 ;
  cv::ogl::Texture2D *_swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  result = (cv::ogl::Texture2D *) &((cv::_OutputArray const *)arg1)->getOGlTexture2DRef();
  *(cv::ogl::Texture2D **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap__OutputArray_create__SWIG_0_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::Size_< int > *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, bool _swig_go_4, intgo _swig_go_5) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  SwigValueWrapper< cv::Size_< int > > arg2 ;
  int arg3 ;
  int arg4 ;
  bool arg5 ;
  int arg6 ;
  cv::Size *argp2 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  argp2 = (cv::Size *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg2 = (cv::Size)*argp2;
  
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  ((cv::_OutputArray const *)arg1)->create(arg2,arg3,arg4,arg5,arg6);
  
}


void _wrap__OutputArray_create__SWIG_1_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::Size_< int > *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  SwigValueWrapper< cv::Size_< int > > arg2 ;
  int arg3 ;
  int arg4 ;
  bool arg5 ;
  cv::Size *argp2 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  argp2 = (cv::Size *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg2 = (cv::Size)*argp2;
  
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  ((cv::_OutputArray const *)arg1)->create(arg2,arg3,arg4,arg5);
  
}


void _wrap__OutputArray_create__SWIG_2_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::Size_< int > *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  SwigValueWrapper< cv::Size_< int > > arg2 ;
  int arg3 ;
  int arg4 ;
  cv::Size *argp2 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  argp2 = (cv::Size *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg2 = (cv::Size)*argp2;
  
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  ((cv::_OutputArray const *)arg1)->create(arg2,arg3,arg4);
  
}


void _wrap__OutputArray_create__SWIG_3_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::Size_< int > *_swig_go_1, intgo _swig_go_2) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  SwigValueWrapper< cv::Size_< int > > arg2 ;
  int arg3 ;
  cv::Size *argp2 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  argp2 = (cv::Size *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg2 = (cv::Size)*argp2;
  
  arg3 = (int)_swig_go_2; 
  
  ((cv::_OutputArray const *)arg1)->create(arg2,arg3);
  
}


void _wrap__OutputArray_create__SWIG_4_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, bool _swig_go_5, intgo _swig_go_6) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  bool arg6 ;
  int arg7 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (bool)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  
  ((cv::_OutputArray const *)arg1)->create(arg2,arg3,arg4,arg5,arg6,arg7);
  
}


void _wrap__OutputArray_create__SWIG_5_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, bool _swig_go_5) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  bool arg6 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (bool)_swig_go_5; 
  
  ((cv::_OutputArray const *)arg1)->create(arg2,arg3,arg4,arg5,arg6);
  
}


void _wrap__OutputArray_create__SWIG_6_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  ((cv::_OutputArray const *)arg1)->create(arg2,arg3,arg4,arg5);
  
}


void _wrap__OutputArray_create__SWIG_7_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  ((cv::_OutputArray const *)arg1)->create(arg2,arg3,arg4);
  
}


void _wrap__OutputArray_create__SWIG_8_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, intgo _swig_go_1, intgo *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4, bool _swig_go_5, intgo _swig_go_6) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  int arg2 ;
  int *arg3 = (int *) 0 ;
  int arg4 ;
  int arg5 ;
  bool arg6 ;
  int arg7 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (bool)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  
  ((cv::_OutputArray const *)arg1)->create(arg2,(int const *)arg3,arg4,arg5,arg6,arg7);
  
}


void _wrap__OutputArray_create__SWIG_9_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, intgo _swig_go_1, intgo *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4, bool _swig_go_5) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  int arg2 ;
  int *arg3 = (int *) 0 ;
  int arg4 ;
  int arg5 ;
  bool arg6 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (bool)_swig_go_5; 
  
  ((cv::_OutputArray const *)arg1)->create(arg2,(int const *)arg3,arg4,arg5,arg6);
  
}


void _wrap__OutputArray_create__SWIG_10_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, intgo _swig_go_1, intgo *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  int arg2 ;
  int *arg3 = (int *) 0 ;
  int arg4 ;
  int arg5 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  ((cv::_OutputArray const *)arg1)->create(arg2,(int const *)arg3,arg4,arg5);
  
}


void _wrap__OutputArray_create__SWIG_11_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, intgo _swig_go_1, intgo *_swig_go_2, intgo _swig_go_3) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  int arg2 ;
  int *arg3 = (int *) 0 ;
  int arg4 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  ((cv::_OutputArray const *)arg1)->create(arg2,(int const *)arg3,arg4);
  
}


void _wrap__OutputArray_release_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  ((cv::_OutputArray const *)arg1)->release();
  
}


void _wrap__OutputArray_clear_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  ((cv::_OutputArray const *)arg1)->clear();
  
}


void _wrap_delete__OutputArray_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  delete arg1;
  
}


cv::Mat *_wrap__OutputArray_getMat__SWIG_0_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, intgo _swig_go_1) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  int arg2 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  cv::_InputArray *swig_b0 = (cv::_InputArray *)arg1;
  result = ((cv::_InputArray const *)swig_b0)->getMat(arg2);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


cv::Mat *_wrap__OutputArray_getMat__SWIG_1_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  cv::_InputArray *swig_b0 = (cv::_InputArray *)arg1;
  result = ((cv::_InputArray const *)swig_b0)->getMat();
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


void _wrap__OutputArray_getMatVector_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, std::vector< cv::Mat > *_swig_go_1) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  std::vector< cv::Mat > *arg2 = 0 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(std::vector< cv::Mat > **)&_swig_go_1; 
  
  cv::_InputArray *swig_b0 = (cv::_InputArray *)arg1;
  ((cv::_InputArray const *)swig_b0)->getMatVector(*arg2);
  
}


cv::GlBuffer *_wrap__OutputArray_getGlBuffer_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  SwigValueWrapper< cv::GlBuffer > result;
  cv::GlBuffer *_swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  cv::_InputArray *swig_b0 = (cv::_InputArray *)arg1;
  result = ((cv::_InputArray const *)swig_b0)->getGlBuffer();
  *(cv::GlBuffer **)&_swig_go_result = new cv::GlBuffer(result); 
  return _swig_go_result;
}


cv::GlTexture *_wrap__OutputArray_getGlTexture_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  cv::GlTexture result;
  cv::GlTexture *_swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  cv::_InputArray *swig_b0 = (cv::_InputArray *)arg1;
  result = ((cv::_InputArray const *)swig_b0)->getGlTexture();
  *(cv::GlTexture **)&_swig_go_result = new cv::GlTexture(result); 
  return _swig_go_result;
}


cv::gpu::GpuMat *_wrap__OutputArray_getGpuMat_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  cv::gpu::GpuMat result;
  cv::gpu::GpuMat *_swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  cv::_InputArray *swig_b0 = (cv::_InputArray *)arg1;
  result = ((cv::_InputArray const *)swig_b0)->getGpuMat();
  *(cv::gpu::GpuMat **)&_swig_go_result = new cv::gpu::GpuMat(result); 
  return _swig_go_result;
}


cv::ogl::Buffer *_wrap__OutputArray_getOGlBuffer_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  cv::ogl::Buffer result;
  cv::ogl::Buffer *_swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  cv::_InputArray *swig_b0 = (cv::_InputArray *)arg1;
  result = ((cv::_InputArray const *)swig_b0)->getOGlBuffer();
  *(cv::ogl::Buffer **)&_swig_go_result = new cv::ogl::Buffer(result); 
  return _swig_go_result;
}


cv::ogl::Texture2D *_wrap__OutputArray_getOGlTexture2D_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  cv::ogl::Texture2D result;
  cv::ogl::Texture2D *_swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  cv::_InputArray *swig_b0 = (cv::_InputArray *)arg1;
  result = ((cv::_InputArray const *)swig_b0)->getOGlTexture2D();
  *(cv::ogl::Texture2D **)&_swig_go_result = new cv::ogl::Texture2D(result); 
  return _swig_go_result;
}


intgo _wrap__OutputArray_kind_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  cv::_InputArray *swig_b0 = (cv::_InputArray *)arg1;
  result = (int)((cv::_InputArray const *)swig_b0)->kind();
  _swig_go_result = result; 
  return _swig_go_result;
}


cv::Size_< int > *_wrap__OutputArray_size__SWIG_0_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, intgo _swig_go_1) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  int arg2 ;
  SwigValueWrapper< cv::Size_< int > > result;
  cv::Size_< int > *_swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  cv::_InputArray *swig_b0 = (cv::_InputArray *)arg1;
  result = ((cv::_InputArray const *)swig_b0)->size(arg2);
  *(cv::Size **)&_swig_go_result = new cv::Size(result); 
  return _swig_go_result;
}


cv::Size_< int > *_wrap__OutputArray_size__SWIG_1_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  SwigValueWrapper< cv::Size_< int > > result;
  cv::Size_< int > *_swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  cv::_InputArray *swig_b0 = (cv::_InputArray *)arg1;
  result = ((cv::_InputArray const *)swig_b0)->size();
  *(cv::Size **)&_swig_go_result = new cv::Size(result); 
  return _swig_go_result;
}


long long _wrap__OutputArray_total__SWIG_0_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, intgo _swig_go_1) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  int arg2 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  cv::_InputArray *swig_b0 = (cv::_InputArray *)arg1;
  result = ((cv::_InputArray const *)swig_b0)->total(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap__OutputArray_total__SWIG_1_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  cv::_InputArray *swig_b0 = (cv::_InputArray *)arg1;
  result = ((cv::_InputArray const *)swig_b0)->total();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap__OutputArray_Xtype__SWIG_0_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, intgo _swig_go_1) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  int arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  cv::_InputArray *swig_b0 = (cv::_InputArray *)arg1;
  result = (int)((cv::_InputArray const *)swig_b0)->type(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap__OutputArray_Xtype__SWIG_1_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  cv::_InputArray *swig_b0 = (cv::_InputArray *)arg1;
  result = (int)((cv::_InputArray const *)swig_b0)->type();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap__OutputArray_depth__SWIG_0_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, intgo _swig_go_1) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  int arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  cv::_InputArray *swig_b0 = (cv::_InputArray *)arg1;
  result = (int)((cv::_InputArray const *)swig_b0)->depth(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap__OutputArray_depth__SWIG_1_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  cv::_InputArray *swig_b0 = (cv::_InputArray *)arg1;
  result = (int)((cv::_InputArray const *)swig_b0)->depth();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap__OutputArray_channels__SWIG_0_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, intgo _swig_go_1) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  int arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  cv::_InputArray *swig_b0 = (cv::_InputArray *)arg1;
  result = (int)((cv::_InputArray const *)swig_b0)->channels(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap__OutputArray_channels__SWIG_1_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  cv::_InputArray *swig_b0 = (cv::_InputArray *)arg1;
  result = (int)((cv::_InputArray const *)swig_b0)->channels();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap__OutputArray_empty_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  cv::_InputArray *swig_b0 = (cv::_InputArray *)arg1;
  result = (bool)((cv::_InputArray const *)swig_b0)->empty();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Set_OutputArray_Flags_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, intgo _swig_go_1) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  cv::_InputArray *swig_b0 = (cv::_InputArray *)arg1;
  if (swig_b0) (swig_b0)->flags = arg2;
  
}


intgo _wrap_Get_OutputArray_Flags_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  cv::_InputArray *swig_b0 = (cv::_InputArray *)arg1;
  result = (int) ((swig_b0)->flags);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Set_OutputArray_Obj_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, void *_swig_go_1) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  cv::_InputArray *swig_b0 = (cv::_InputArray *)arg1;
  if (swig_b0) (swig_b0)->obj = arg2;
  
}


void *_wrap_Get_OutputArray_Obj_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  cv::_InputArray *swig_b0 = (cv::_InputArray *)arg1;
  result = (void *) ((swig_b0)->obj);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_Set_OutputArray_Sz_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::Size_< int > *_swig_go_1) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  cv::Size *arg2 = (cv::Size *) 0 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(cv::Size **)&_swig_go_1; 
  
  cv::_InputArray *swig_b0 = (cv::_InputArray *)arg1;
  if (swig_b0) (swig_b0)->sz = *arg2;
  
}


cv::Size_< int > *_wrap_Get_OutputArray_Sz_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0) {
  cv::_OutputArray *arg1 = (cv::_OutputArray *) 0 ;
  cv::Size *result = 0 ;
  cv::Size_< int > *_swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  cv::_InputArray *swig_b0 = (cv::_InputArray *)arg1;
  result = (cv::Size *)& ((swig_b0)->sz);
  *(cv::Size **)&_swig_go_result = (cv::Size *)result; 
  return _swig_go_result;
}


cv::_OutputArray *_wrap_noArray_cv_dbcbba478e71899d() {
  cv::_OutputArray *result = 0 ;
  cv::_OutputArray *_swig_go_result;
  
  
  result = (cv::_OutputArray *) &cv::noArray();
  *(cv::_OutputArray **)&_swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_MAGIC_MASK_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::MAGIC_MASK;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_TYPE_MASK_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::TYPE_MASK;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DEPTH_MASK_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::DEPTH_MASK;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


long long _wrap_getElemSize_cv_dbcbba478e71899d(intgo _swig_go_0) {
  int arg1 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = cv::getElemSize(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_MatAllocator_cv_dbcbba478e71899d(cv::MatAllocator *_swig_go_0) {
  cv::MatAllocator *arg1 = (cv::MatAllocator *) 0 ;
  
  arg1 = *(cv::MatAllocator **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_MatAllocator_allocate_cv_dbcbba478e71899d(cv::MatAllocator *_swig_go_0, intgo _swig_go_1, intgo *_swig_go_2, intgo _swig_go_3, _Atomic_word **_swig_go_4, _gostring_ _swig_go_5, _gostring_ _swig_go_6, long long *_swig_go_7) {
  cv::MatAllocator *arg1 = (cv::MatAllocator *) 0 ;
  int arg2 ;
  int *arg3 = (int *) 0 ;
  int arg4 ;
  _Atomic_word **arg5 = 0 ;
  uchar **arg6 = 0 ;
  uchar **arg7 = 0 ;
  size_t *arg8 = (size_t *) 0 ;
  
  arg1 = *(cv::MatAllocator **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(_Atomic_word ***)&_swig_go_4; 
  arg6 = (uchar **)_swig_go_5.p; 
  arg7 = (uchar **)_swig_go_6.p; 
  arg8 = *(size_t **)&_swig_go_7; 
  
  (arg1)->allocate(arg2,(int const *)arg3,arg4,*arg5,*arg6,*arg7,arg8);
  
}


void _wrap_MatAllocator_deallocate_cv_dbcbba478e71899d(cv::MatAllocator *_swig_go_0, _Atomic_word *_swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3) {
  cv::MatAllocator *arg1 = (cv::MatAllocator *) 0 ;
  _Atomic_word *arg2 = (_Atomic_word *) 0 ;
  uchar *arg3 = (uchar *) 0 ;
  uchar *arg4 = (uchar *) 0 ;
  
  arg1 = *(cv::MatAllocator **)&_swig_go_0; 
  arg2 = *(_Atomic_word **)&_swig_go_1; 
  arg3 = (uchar *)_swig_go_2.p; 
  arg4 = (uchar *)_swig_go_3.p; 
  
  (arg1)->deallocate(arg2,arg3,arg4);
  
}


cv::Mat *_wrap_new_Mat__SWIG_0_cv_dbcbba478e71899d() {
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  
  result = (cv::Mat *)new cv::Mat();
  *(cv::Mat **)&_swig_go_result = (cv::Mat *)result; 
  return _swig_go_result;
}


cv::Mat *_wrap_new_Mat__SWIG_1_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  int arg1 ;
  int arg2 ;
  int arg3 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (cv::Mat *)new cv::Mat(arg1,arg2,arg3);
  *(cv::Mat **)&_swig_go_result = (cv::Mat *)result; 
  return _swig_go_result;
}


cv::Mat *_wrap_new_Mat__SWIG_2_cv_dbcbba478e71899d(cv::Size_< int > *_swig_go_0, intgo _swig_go_1) {
  SwigValueWrapper< cv::Size_< int > > arg1 ;
  int arg2 ;
  cv::Size *argp1 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  
  argp1 = (cv::Size *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg1 = (cv::Size)*argp1;
  
  arg2 = (int)_swig_go_1; 
  
  result = (cv::Mat *)new cv::Mat(arg1,arg2);
  *(cv::Mat **)&_swig_go_result = (cv::Mat *)result; 
  return _swig_go_result;
}


cv::Mat *_wrap_new_Mat__SWIG_3_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, intgo _swig_go_2, cv::Scalar_< double > *_swig_go_3) {
  int arg1 ;
  int arg2 ;
  int arg3 ;
  cv::Scalar *arg4 = 0 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::Scalar **)&_swig_go_3; 
  
  result = (cv::Mat *)new cv::Mat(arg1,arg2,arg3,(cv::Scalar const &)*arg4);
  *(cv::Mat **)&_swig_go_result = (cv::Mat *)result; 
  return _swig_go_result;
}


cv::Mat *_wrap_new_Mat__SWIG_4_cv_dbcbba478e71899d(cv::Size_< int > *_swig_go_0, intgo _swig_go_1, cv::Scalar_< double > *_swig_go_2) {
  SwigValueWrapper< cv::Size_< int > > arg1 ;
  int arg2 ;
  cv::Scalar *arg3 = 0 ;
  cv::Size *argp1 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  
  argp1 = (cv::Size *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg1 = (cv::Size)*argp1;
  
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::Scalar **)&_swig_go_2; 
  
  result = (cv::Mat *)new cv::Mat(arg1,arg2,(cv::Scalar const &)*arg3);
  *(cv::Mat **)&_swig_go_result = (cv::Mat *)result; 
  return _swig_go_result;
}


cv::Mat *_wrap_new_Mat__SWIG_5_cv_dbcbba478e71899d(intgo _swig_go_0, intgo *_swig_go_1, intgo _swig_go_2) {
  int arg1 ;
  int *arg2 = (int *) 0 ;
  int arg3 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (cv::Mat *)new cv::Mat(arg1,(int const *)arg2,arg3);
  *(cv::Mat **)&_swig_go_result = (cv::Mat *)result; 
  return _swig_go_result;
}


cv::Mat *_wrap_new_Mat__SWIG_6_cv_dbcbba478e71899d(intgo _swig_go_0, intgo *_swig_go_1, intgo _swig_go_2, cv::Scalar_< double > *_swig_go_3) {
  int arg1 ;
  int *arg2 = (int *) 0 ;
  int arg3 ;
  cv::Scalar *arg4 = 0 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::Scalar **)&_swig_go_3; 
  
  result = (cv::Mat *)new cv::Mat(arg1,(int const *)arg2,arg3,(cv::Scalar const &)*arg4);
  *(cv::Mat **)&_swig_go_result = (cv::Mat *)result; 
  return _swig_go_result;
}


cv::Mat *_wrap_new_Mat__SWIG_7_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = 0 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = (cv::Mat *)new cv::Mat((cv::Mat const &)*arg1);
  *(cv::Mat **)&_swig_go_result = (cv::Mat *)result; 
  return _swig_go_result;
}


cv::Mat *_wrap_new_Mat__SWIG_8_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, intgo _swig_go_2, void *_swig_go_3, long long _swig_go_4) {
  int arg1 ;
  int arg2 ;
  int arg3 ;
  void *arg4 = (void *) 0 ;
  size_t arg5 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(void **)&_swig_go_3; 
  arg5 = (size_t)_swig_go_4; 
  
  result = (cv::Mat *)new cv::Mat(arg1,arg2,arg3,arg4,arg5);
  *(cv::Mat **)&_swig_go_result = (cv::Mat *)result; 
  return _swig_go_result;
}


cv::Mat *_wrap_new_Mat__SWIG_9_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, intgo _swig_go_2, void *_swig_go_3) {
  int arg1 ;
  int arg2 ;
  int arg3 ;
  void *arg4 = (void *) 0 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(void **)&_swig_go_3; 
  
  result = (cv::Mat *)new cv::Mat(arg1,arg2,arg3,arg4);
  *(cv::Mat **)&_swig_go_result = (cv::Mat *)result; 
  return _swig_go_result;
}


cv::Mat *_wrap_new_Mat__SWIG_10_cv_dbcbba478e71899d(cv::Size_< int > *_swig_go_0, intgo _swig_go_1, void *_swig_go_2, long long _swig_go_3) {
  SwigValueWrapper< cv::Size_< int > > arg1 ;
  int arg2 ;
  void *arg3 = (void *) 0 ;
  size_t arg4 ;
  cv::Size *argp1 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  
  argp1 = (cv::Size *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg1 = (cv::Size)*argp1;
  
  arg2 = (int)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (size_t)_swig_go_3; 
  
  result = (cv::Mat *)new cv::Mat(arg1,arg2,arg3,arg4);
  *(cv::Mat **)&_swig_go_result = (cv::Mat *)result; 
  return _swig_go_result;
}


cv::Mat *_wrap_new_Mat__SWIG_11_cv_dbcbba478e71899d(cv::Size_< int > *_swig_go_0, intgo _swig_go_1, void *_swig_go_2) {
  SwigValueWrapper< cv::Size_< int > > arg1 ;
  int arg2 ;
  void *arg3 = (void *) 0 ;
  cv::Size *argp1 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  
  argp1 = (cv::Size *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg1 = (cv::Size)*argp1;
  
  arg2 = (int)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  
  result = (cv::Mat *)new cv::Mat(arg1,arg2,arg3);
  *(cv::Mat **)&_swig_go_result = (cv::Mat *)result; 
  return _swig_go_result;
}


cv::Mat *_wrap_new_Mat__SWIG_12_cv_dbcbba478e71899d(intgo _swig_go_0, intgo *_swig_go_1, intgo _swig_go_2, void *_swig_go_3, long long *_swig_go_4) {
  int arg1 ;
  int *arg2 = (int *) 0 ;
  int arg3 ;
  void *arg4 = (void *) 0 ;
  size_t *arg5 = (size_t *) 0 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(void **)&_swig_go_3; 
  arg5 = *(size_t **)&_swig_go_4; 
  
  result = (cv::Mat *)new cv::Mat(arg1,(int const *)arg2,arg3,arg4,(size_t const *)arg5);
  *(cv::Mat **)&_swig_go_result = (cv::Mat *)result; 
  return _swig_go_result;
}


cv::Mat *_wrap_new_Mat__SWIG_13_cv_dbcbba478e71899d(intgo _swig_go_0, intgo *_swig_go_1, intgo _swig_go_2, void *_swig_go_3) {
  int arg1 ;
  int *arg2 = (int *) 0 ;
  int arg3 ;
  void *arg4 = (void *) 0 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(void **)&_swig_go_3; 
  
  result = (cv::Mat *)new cv::Mat(arg1,(int const *)arg2,arg3,arg4);
  *(cv::Mat **)&_swig_go_result = (cv::Mat *)result; 
  return _swig_go_result;
}


cv::Mat *_wrap_new_Mat__SWIG_14_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Range *_swig_go_1, cv::Range *_swig_go_2) {
  cv::Mat *arg1 = 0 ;
  cv::Range *arg2 = 0 ;
  cv::Range *arg3 = 0 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::Range **)&_swig_go_1; 
  arg3 = *(cv::Range **)&_swig_go_2; 
  
  result = (cv::Mat *)new cv::Mat((cv::Mat const &)*arg1,(cv::Range const &)*arg2,(cv::Range const &)*arg3);
  *(cv::Mat **)&_swig_go_result = (cv::Mat *)result; 
  return _swig_go_result;
}


cv::Mat *_wrap_new_Mat__SWIG_15_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Range *_swig_go_1) {
  cv::Mat *arg1 = 0 ;
  cv::Range *arg2 = 0 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::Range **)&_swig_go_1; 
  
  result = (cv::Mat *)new cv::Mat((cv::Mat const &)*arg1,(cv::Range const &)*arg2);
  *(cv::Mat **)&_swig_go_result = (cv::Mat *)result; 
  return _swig_go_result;
}


cv::Mat *_wrap_new_Mat__SWIG_16_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Rect_< int > *_swig_go_1) {
  cv::Mat *arg1 = 0 ;
  cv::Rect *arg2 = 0 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::Rect **)&_swig_go_1; 
  
  result = (cv::Mat *)new cv::Mat((cv::Mat const &)*arg1,(cv::Rect const &)*arg2);
  *(cv::Mat **)&_swig_go_result = (cv::Mat *)result; 
  return _swig_go_result;
}


cv::Mat *_wrap_new_Mat__SWIG_17_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Range *_swig_go_1) {
  cv::Mat *arg1 = 0 ;
  cv::Range *arg2 = (cv::Range *) 0 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::Range **)&_swig_go_1; 
  
  result = (cv::Mat *)new cv::Mat((cv::Mat const &)*arg1,(cv::Range const *)arg2);
  *(cv::Mat **)&_swig_go_result = (cv::Mat *)result; 
  return _swig_go_result;
}


cv::Mat *_wrap_new_Mat__SWIG_18_cv_dbcbba478e71899d(CvMat *_swig_go_0, bool _swig_go_1) {
  CvMat *arg1 = (CvMat *) 0 ;
  bool arg2 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  arg1 = *(CvMat **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = (cv::Mat *)new cv::Mat((CvMat const *)arg1,arg2);
  *(cv::Mat **)&_swig_go_result = (cv::Mat *)result; 
  return _swig_go_result;
}


cv::Mat *_wrap_new_Mat__SWIG_19_cv_dbcbba478e71899d(CvMat *_swig_go_0) {
  CvMat *arg1 = (CvMat *) 0 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  arg1 = *(CvMat **)&_swig_go_0; 
  
  result = (cv::Mat *)new cv::Mat((CvMat const *)arg1);
  *(cv::Mat **)&_swig_go_result = (cv::Mat *)result; 
  return _swig_go_result;
}


cv::Mat *_wrap_new_Mat__SWIG_20_cv_dbcbba478e71899d(CvMatND *_swig_go_0, bool _swig_go_1) {
  CvMatND *arg1 = (CvMatND *) 0 ;
  bool arg2 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  arg1 = *(CvMatND **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = (cv::Mat *)new cv::Mat((CvMatND const *)arg1,arg2);
  *(cv::Mat **)&_swig_go_result = (cv::Mat *)result; 
  return _swig_go_result;
}


cv::Mat *_wrap_new_Mat__SWIG_21_cv_dbcbba478e71899d(CvMatND *_swig_go_0) {
  CvMatND *arg1 = (CvMatND *) 0 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  arg1 = *(CvMatND **)&_swig_go_0; 
  
  result = (cv::Mat *)new cv::Mat((CvMatND const *)arg1);
  *(cv::Mat **)&_swig_go_result = (cv::Mat *)result; 
  return _swig_go_result;
}


cv::Mat *_wrap_new_Mat__SWIG_22_cv_dbcbba478e71899d(_IplImage *_swig_go_0, bool _swig_go_1) {
  IplImage *arg1 = (IplImage *) 0 ;
  bool arg2 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  arg1 = *(IplImage **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = (cv::Mat *)new cv::Mat((IplImage const *)arg1,arg2);
  *(cv::Mat **)&_swig_go_result = (cv::Mat *)result; 
  return _swig_go_result;
}


cv::Mat *_wrap_new_Mat__SWIG_23_cv_dbcbba478e71899d(_IplImage *_swig_go_0) {
  IplImage *arg1 = (IplImage *) 0 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  arg1 = *(IplImage **)&_swig_go_0; 
  
  result = (cv::Mat *)new cv::Mat((IplImage const *)arg1);
  *(cv::Mat **)&_swig_go_result = (cv::Mat *)result; 
  return _swig_go_result;
}


cv::Mat *_wrap_new_Mat__SWIG_35_cv_dbcbba478e71899d(cv::gpu::GpuMat *_swig_go_0) {
  cv::gpu::GpuMat *arg1 = 0 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::gpu::GpuMat **)&_swig_go_0; 
  
  result = (cv::Mat *)new cv::Mat((cv::gpu::GpuMat const &)*arg1);
  *(cv::Mat **)&_swig_go_result = (cv::Mat *)result; 
  return _swig_go_result;
}


void _wrap_delete_Mat_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  delete arg1;
  
}


cv::Mat *_wrap_Mat_row_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = ((cv::Mat const *)arg1)->row(arg2);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


cv::Mat *_wrap_Mat_col_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = ((cv::Mat const *)arg1)->col(arg2);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


cv::Mat *_wrap_Mat_rowRange__SWIG_0_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  int arg3 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = ((cv::Mat const *)arg1)->rowRange(arg2,arg3);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


cv::Mat *_wrap_Mat_rowRange__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Range *_swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  cv::Range *arg2 = 0 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::Range **)&_swig_go_1; 
  
  result = ((cv::Mat const *)arg1)->rowRange((cv::Range const &)*arg2);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


cv::Mat *_wrap_Mat_colRange__SWIG_0_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  int arg3 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = ((cv::Mat const *)arg1)->colRange(arg2,arg3);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


cv::Mat *_wrap_Mat_colRange__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Range *_swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  cv::Range *arg2 = 0 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::Range **)&_swig_go_1; 
  
  result = ((cv::Mat const *)arg1)->colRange((cv::Range const &)*arg2);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


cv::Mat *_wrap_Mat_diag__SWIG_0_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = ((cv::Mat const *)arg1)->diag(arg2);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


cv::Mat *_wrap_Mat_diag__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = ((cv::Mat const *)arg1)->diag();
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


cv::Mat *_wrap_Mat_diag__SWIG_2_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = 0 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = cv::Mat::diag((cv::Mat const &)*arg1);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


cv::Mat *_wrap_Mat_clone_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = ((cv::Mat const *)arg1)->clone();
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


void _wrap_Mat_copyTo__SWIG_0_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  cv::_OutputArray *arg2 = 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  ((cv::Mat const *)arg1)->copyTo((cv::_OutputArray const &)*arg2);
  
}


void _wrap_Mat_copyTo__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_InputArray *_swig_go_2) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  ((cv::Mat const *)arg1)->copyTo((cv::_OutputArray const &)*arg2,(cv::_InputArray const &)*arg3);
  
}


void _wrap_Mat_convertTo__SWIG_0_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, double _swig_go_3, double _swig_go_4) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  double arg5 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  ((cv::Mat const *)arg1)->convertTo((cv::_OutputArray const &)*arg2,arg3,arg4,arg5);
  
}


void _wrap_Mat_convertTo__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, double _swig_go_3) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  ((cv::Mat const *)arg1)->convertTo((cv::_OutputArray const &)*arg2,arg3,arg4);
  
}


void _wrap_Mat_convertTo__SWIG_2_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  ((cv::Mat const *)arg1)->convertTo((cv::_OutputArray const &)*arg2,arg3);
  
}


void _wrap_Mat_assignTo__SWIG_0_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Mat *_swig_go_1, intgo _swig_go_2) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  cv::Mat *arg2 = 0 ;
  int arg3 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  ((cv::Mat const *)arg1)->assignTo(*arg2,arg3);
  
}


void _wrap_Mat_assignTo__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Mat *_swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  cv::Mat *arg2 = 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  
  ((cv::Mat const *)arg1)->assignTo(*arg2);
  
}


cv::Mat *_wrap_Mat_setTo__SWIG_0_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_InputArray *_swig_go_2) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  result = (cv::Mat *) &(arg1)->setTo((cv::_InputArray const &)*arg2,(cv::_InputArray const &)*arg3);
  *(cv::Mat **)&_swig_go_result = result; 
  return _swig_go_result;
}


cv::Mat *_wrap_Mat_setTo__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::_InputArray *_swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  
  result = (cv::Mat *) &(arg1)->setTo((cv::_InputArray const &)*arg2);
  *(cv::Mat **)&_swig_go_result = result; 
  return _swig_go_result;
}


cv::Mat *_wrap_Mat_reshape__SWIG_0_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  int arg3 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = ((cv::Mat const *)arg1)->reshape(arg2,arg3);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


cv::Mat *_wrap_Mat_reshape__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = ((cv::Mat const *)arg1)->reshape(arg2);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


cv::Mat *_wrap_Mat_reshape__SWIG_2_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo *_swig_go_3) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  int arg3 ;
  int *arg4 = (int *) 0 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(int **)&_swig_go_3; 
  
  result = ((cv::Mat const *)arg1)->reshape(arg2,arg3,(int const *)arg4);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


cv::MatExpr *_wrap_Mat_t_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  cv::MatExpr result;
  cv::MatExpr *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = ((cv::Mat const *)arg1)->t();
  *(cv::MatExpr **)&_swig_go_result = new cv::MatExpr(result); 
  return _swig_go_result;
}


cv::MatExpr *_wrap_Mat_inv__SWIG_0_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  cv::MatExpr result;
  cv::MatExpr *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = ((cv::Mat const *)arg1)->inv(arg2);
  *(cv::MatExpr **)&_swig_go_result = new cv::MatExpr(result); 
  return _swig_go_result;
}


cv::MatExpr *_wrap_Mat_inv__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  cv::MatExpr result;
  cv::MatExpr *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = ((cv::Mat const *)arg1)->inv();
  *(cv::MatExpr **)&_swig_go_result = new cv::MatExpr(result); 
  return _swig_go_result;
}


cv::MatExpr *_wrap_Mat_mul__SWIG_0_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::_InputArray *_swig_go_1, double _swig_go_2) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  double arg3 ;
  cv::MatExpr result;
  cv::MatExpr *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  result = ((cv::Mat const *)arg1)->mul((cv::_InputArray const &)*arg2,arg3);
  *(cv::MatExpr **)&_swig_go_result = new cv::MatExpr(result); 
  return _swig_go_result;
}


cv::MatExpr *_wrap_Mat_mul__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::_InputArray *_swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::MatExpr result;
  cv::MatExpr *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  
  result = ((cv::Mat const *)arg1)->mul((cv::_InputArray const &)*arg2);
  *(cv::MatExpr **)&_swig_go_result = new cv::MatExpr(result); 
  return _swig_go_result;
}


cv::Mat *_wrap_Mat_cross_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::_InputArray *_swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  
  result = ((cv::Mat const *)arg1)->cross((cv::_InputArray const &)*arg2);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


double _wrap_Mat_dot_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::_InputArray *_swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  
  result = (double)((cv::Mat const *)arg1)->dot((cv::_InputArray const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


cv::MatExpr *_wrap_Mat_zeros__SWIG_0_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  int arg1 ;
  int arg2 ;
  int arg3 ;
  cv::MatExpr result;
  cv::MatExpr *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = cv::Mat::zeros(arg1,arg2,arg3);
  *(cv::MatExpr **)&_swig_go_result = new cv::MatExpr(result); 
  return _swig_go_result;
}


cv::MatExpr *_wrap_Mat_zeros__SWIG_1_cv_dbcbba478e71899d(cv::Size_< int > *_swig_go_0, intgo _swig_go_1) {
  SwigValueWrapper< cv::Size_< int > > arg1 ;
  int arg2 ;
  cv::Size *argp1 ;
  cv::MatExpr result;
  cv::MatExpr *_swig_go_result;
  
  
  argp1 = (cv::Size *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg1 = (cv::Size)*argp1;
  
  arg2 = (int)_swig_go_1; 
  
  result = cv::Mat::zeros(arg1,arg2);
  *(cv::MatExpr **)&_swig_go_result = new cv::MatExpr(result); 
  return _swig_go_result;
}


cv::MatExpr *_wrap_Mat_zeros__SWIG_2_cv_dbcbba478e71899d(intgo _swig_go_0, intgo *_swig_go_1, intgo _swig_go_2) {
  int arg1 ;
  int *arg2 = (int *) 0 ;
  int arg3 ;
  cv::MatExpr result;
  cv::MatExpr *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = cv::Mat::zeros(arg1,(int const *)arg2,arg3);
  *(cv::MatExpr **)&_swig_go_result = new cv::MatExpr(result); 
  return _swig_go_result;
}


cv::MatExpr *_wrap_Mat_ones__SWIG_0_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  int arg1 ;
  int arg2 ;
  int arg3 ;
  cv::MatExpr result;
  cv::MatExpr *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = cv::Mat::ones(arg1,arg2,arg3);
  *(cv::MatExpr **)&_swig_go_result = new cv::MatExpr(result); 
  return _swig_go_result;
}


cv::MatExpr *_wrap_Mat_ones__SWIG_1_cv_dbcbba478e71899d(cv::Size_< int > *_swig_go_0, intgo _swig_go_1) {
  SwigValueWrapper< cv::Size_< int > > arg1 ;
  int arg2 ;
  cv::Size *argp1 ;
  cv::MatExpr result;
  cv::MatExpr *_swig_go_result;
  
  
  argp1 = (cv::Size *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg1 = (cv::Size)*argp1;
  
  arg2 = (int)_swig_go_1; 
  
  result = cv::Mat::ones(arg1,arg2);
  *(cv::MatExpr **)&_swig_go_result = new cv::MatExpr(result); 
  return _swig_go_result;
}


cv::MatExpr *_wrap_Mat_ones__SWIG_2_cv_dbcbba478e71899d(intgo _swig_go_0, intgo *_swig_go_1, intgo _swig_go_2) {
  int arg1 ;
  int *arg2 = (int *) 0 ;
  int arg3 ;
  cv::MatExpr result;
  cv::MatExpr *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = cv::Mat::ones(arg1,(int const *)arg2,arg3);
  *(cv::MatExpr **)&_swig_go_result = new cv::MatExpr(result); 
  return _swig_go_result;
}


cv::MatExpr *_wrap_Mat_eye__SWIG_0_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  int arg1 ;
  int arg2 ;
  int arg3 ;
  cv::MatExpr result;
  cv::MatExpr *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = cv::Mat::eye(arg1,arg2,arg3);
  *(cv::MatExpr **)&_swig_go_result = new cv::MatExpr(result); 
  return _swig_go_result;
}


cv::MatExpr *_wrap_Mat_eye__SWIG_1_cv_dbcbba478e71899d(cv::Size_< int > *_swig_go_0, intgo _swig_go_1) {
  SwigValueWrapper< cv::Size_< int > > arg1 ;
  int arg2 ;
  cv::Size *argp1 ;
  cv::MatExpr result;
  cv::MatExpr *_swig_go_result;
  
  
  argp1 = (cv::Size *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg1 = (cv::Size)*argp1;
  
  arg2 = (int)_swig_go_1; 
  
  result = cv::Mat::eye(arg1,arg2);
  *(cv::MatExpr **)&_swig_go_result = new cv::MatExpr(result); 
  return _swig_go_result;
}


void _wrap_Mat_create__SWIG_0_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  (arg1)->create(arg2,arg3,arg4);
  
}


void _wrap_Mat_create__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Size_< int > *_swig_go_1, intgo _swig_go_2) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  SwigValueWrapper< cv::Size_< int > > arg2 ;
  int arg3 ;
  cv::Size *argp2 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  argp2 = (cv::Size *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg2 = (cv::Size)*argp2;
  
  arg3 = (int)_swig_go_2; 
  
  (arg1)->create(arg2,arg3);
  
}


void _wrap_Mat_create__SWIG_2_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1, intgo *_swig_go_2, intgo _swig_go_3) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  int *arg3 = (int *) 0 ;
  int arg4 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  (arg1)->create(arg2,(int const *)arg3,arg4);
  
}


void _wrap_Mat_addref_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  (arg1)->addref();
  
}


void _wrap_Mat_release_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  (arg1)->release();
  
}


void _wrap_Mat_deallocate_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  (arg1)->deallocate();
  
}


void _wrap_Mat_copySize_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Mat *_swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  cv::Mat *arg2 = 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  
  (arg1)->copySize((cv::Mat const &)*arg2);
  
}


void _wrap_Mat_reserve_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, long long _swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  size_t arg2 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  
  (arg1)->reserve(arg2);
  
}


void _wrap_Mat_resize__SWIG_0_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, long long _swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  size_t arg2 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  
  (arg1)->resize(arg2);
  
}


void _wrap_Mat_resize__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, long long _swig_go_1, cv::Scalar_< double > *_swig_go_2) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  size_t arg2 ;
  cv::Scalar *arg3 = 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  arg3 = *(cv::Scalar **)&_swig_go_2; 
  
  (arg1)->resize(arg2,(cv::Scalar const &)*arg3);
  
}


void _wrap_Mat_push_back__cv_dbcbba478e71899d(cv::Mat *_swig_go_0, void *_swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  (arg1)->push_back_((void const *)arg2);
  
}


void _wrap_Mat_push_back_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Mat *_swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  cv::Mat *arg2 = 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  
  (arg1)->push_back((cv::Mat const &)*arg2);
  
}


void _wrap_Mat_pop_back__SWIG_0_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, long long _swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  size_t arg2 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  
  (arg1)->pop_back(arg2);
  
}


void _wrap_Mat_pop_back__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  (arg1)->pop_back();
  
}


void _wrap_Mat_locateROI_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Size_< int > *_swig_go_1, cv::Point_< int > *_swig_go_2) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  cv::Size *arg2 = 0 ;
  cv::Point *arg3 = 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::Size **)&_swig_go_1; 
  arg3 = *(cv::Point **)&_swig_go_2; 
  
  ((cv::Mat const *)arg1)->locateROI(*arg2,*arg3);
  
}


cv::Mat *_wrap_Mat_adjustROI_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  result = (cv::Mat *) &(arg1)->adjustROI(arg2,arg3,arg4,arg5);
  *(cv::Mat **)&_swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_Mat_isContinuous_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = (bool)((cv::Mat const *)arg1)->isContinuous();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_Mat_isSubmatrix_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = (bool)((cv::Mat const *)arg1)->isSubmatrix();
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_Mat_elemSize_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = ((cv::Mat const *)arg1)->elemSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_Mat_elemSize1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = ((cv::Mat const *)arg1)->elemSize1();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_Mat_Xtype_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = (int)((cv::Mat const *)arg1)->type();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_Mat_depth_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = (int)((cv::Mat const *)arg1)->depth();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_Mat_channels_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = (int)((cv::Mat const *)arg1)->channels();
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_Mat_step1__SWIG_0_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = ((cv::Mat const *)arg1)->step1(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_Mat_step1__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = ((cv::Mat const *)arg1)->step1();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_Mat_empty_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = (bool)((cv::Mat const *)arg1)->empty();
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_Mat_total_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = ((cv::Mat const *)arg1)->total();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_Mat_checkVector__SWIG_0_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, bool _swig_go_3) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  int arg3 ;
  bool arg4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (bool)_swig_go_3; 
  
  result = (int)((cv::Mat const *)arg1)->checkVector(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_Mat_checkVector__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)((cv::Mat const *)arg1)->checkVector(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_Mat_checkVector__SWIG_2_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (int)((cv::Mat const *)arg1)->checkVector(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_Mat_ptr__SWIG_0_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  uchar *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (uchar *)(arg1)->ptr(arg2);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_Mat_ptr__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  uchar *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = (uchar *)(arg1)->ptr();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_Mat_ptr__SWIG_2_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  uchar *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (uchar *)((cv::Mat const *)arg1)->ptr(arg2);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_Mat_ptr__SWIG_3_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  uchar *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = (uchar *)((cv::Mat const *)arg1)->ptr();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_Mat_ptr__SWIG_4_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  int arg3 ;
  uchar *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (uchar *)(arg1)->ptr(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_Mat_ptr__SWIG_5_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  int arg3 ;
  uchar *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (uchar *)((cv::Mat const *)arg1)->ptr(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_Mat_ptr__SWIG_6_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  uchar *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = (uchar *)(arg1)->ptr(arg2,arg3,arg4);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_Mat_ptr__SWIG_7_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  uchar *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = (uchar *)((cv::Mat const *)arg1)->ptr(arg2,arg3,arg4);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_Mat_ptr__SWIG_8_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo *_swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int *arg2 = (int *) 0 ;
  uchar *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  result = (uchar *)(arg1)->ptr((int const *)arg2);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_Mat_ptr__SWIG_9_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo *_swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int *arg2 = (int *) 0 ;
  uchar *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  result = (uchar *)((cv::Mat const *)arg1)->ptr((int const *)arg2);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_MAGIC_VAL_Mat_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::Mat::MAGIC_VAL;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_AUTO_STEP_Mat_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::Mat::AUTO_STEP;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CONTINUOUS_FLAG_Mat_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::Mat::CONTINUOUS_FLAG;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_SUBMATRIX_FLAG_Mat_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::Mat::SUBMATRIX_FLAG;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_Mat_flags_set_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->flags = arg2;
  
}


intgo _wrap_Mat_flags_get_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = (int) ((arg1)->flags);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Mat_dims_set_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->dims = arg2;
  
}


intgo _wrap_Mat_dims_get_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = (int) ((arg1)->dims);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Mat_rows_set_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->rows = arg2;
  
}


intgo _wrap_Mat_rows_get_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = (int) ((arg1)->rows);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Mat_cols_set_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->cols = arg2;
  
}


intgo _wrap_Mat_cols_get_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = (int) ((arg1)->cols);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Mat_data_set_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, _gostring_ _swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  uchar *arg2 = (uchar *) 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (uchar *)_swig_go_1.p; 
  
  if (arg1) (arg1)->data = arg2;
  
}


_gostring_ _wrap_Mat_data_get_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  uchar *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = (uchar *) ((arg1)->data);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_Mat_refcount_set_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, _Atomic_word *_swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  _Atomic_word *arg2 = (_Atomic_word *) 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(_Atomic_word **)&_swig_go_1; 
  
  if (arg1) (arg1)->refcount = arg2;
  
}


_Atomic_word *_wrap_Mat_refcount_get_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  _Atomic_word *result = 0 ;
  _Atomic_word *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = (_Atomic_word *) ((arg1)->refcount);
  *(_Atomic_word **)&_swig_go_result = (_Atomic_word *)result; 
  return _swig_go_result;
}


void _wrap_Mat_datastart_set_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, _gostring_ _swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  uchar *arg2 = (uchar *) 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (uchar *)_swig_go_1.p; 
  
  if (arg1) (arg1)->datastart = arg2;
  
}


_gostring_ _wrap_Mat_datastart_get_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  uchar *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = (uchar *) ((arg1)->datastart);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_Mat_dataend_set_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, _gostring_ _swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  uchar *arg2 = (uchar *) 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (uchar *)_swig_go_1.p; 
  
  if (arg1) (arg1)->dataend = arg2;
  
}


_gostring_ _wrap_Mat_dataend_get_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  uchar *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = (uchar *) ((arg1)->dataend);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_Mat_datalimit_set_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, _gostring_ _swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  uchar *arg2 = (uchar *) 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (uchar *)_swig_go_1.p; 
  
  if (arg1) (arg1)->datalimit = arg2;
  
}


_gostring_ _wrap_Mat_datalimit_get_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  uchar *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = (uchar *) ((arg1)->datalimit);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_Mat_allocator_set_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::MatAllocator *_swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  cv::MatAllocator *arg2 = (cv::MatAllocator *) 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::MatAllocator **)&_swig_go_1; 
  
  if (arg1) (arg1)->allocator = arg2;
  
}


cv::MatAllocator *_wrap_Mat_allocator_get_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  cv::MatAllocator *result = 0 ;
  cv::MatAllocator *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = (cv::MatAllocator *) ((arg1)->allocator);
  *(cv::MatAllocator **)&_swig_go_result = (cv::MatAllocator *)result; 
  return _swig_go_result;
}


void _wrap_Mat_size_set_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Mat::MSize *_swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  cv::Mat::MSize *arg2 = (cv::Mat::MSize *) 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::Mat::MSize **)&_swig_go_1; 
  
  if (arg1) (arg1)->size = *arg2;
  
}


cv::Mat::MSize *_wrap_Mat_size_get_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  cv::Mat::MSize *result = 0 ;
  cv::Mat::MSize *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = (cv::Mat::MSize *)& ((arg1)->size);
  *(cv::Mat::MSize **)&_swig_go_result = (cv::Mat::MSize *)result; 
  return _swig_go_result;
}


void _wrap_Mat_step_set_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Mat::MStep *_swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  cv::Mat::MStep *arg2 = (cv::Mat::MStep *) 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::Mat::MStep **)&_swig_go_1; 
  
  if (arg1) (arg1)->step = *arg2;
  
}


cv::Mat::MStep *_wrap_Mat_step_get_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  cv::Mat::MStep *result = 0 ;
  cv::Mat::MStep *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = (cv::Mat::MStep *)& ((arg1)->step);
  *(cv::Mat::MStep **)&_swig_go_result = (cv::Mat::MStep *)result; 
  return _swig_go_result;
}


intgo _wrap_UNIFORM_RNG_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::RNG::UNIFORM;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_NORMAL_RNG_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::RNG::NORMAL;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


cv::RNG *_wrap_new_RNG__SWIG_0_cv_dbcbba478e71899d() {
  cv::RNG *result = 0 ;
  cv::RNG *_swig_go_result;
  
  
  result = (cv::RNG *)new cv::RNG();
  *(cv::RNG **)&_swig_go_result = (cv::RNG *)result; 
  return _swig_go_result;
}


cv::RNG *_wrap_new_RNG__SWIG_1_cv_dbcbba478e71899d(uint64_t *_swig_go_0) {
  uint64 arg1 ;
  uint64 *argp1 ;
  cv::RNG *result = 0 ;
  cv::RNG *_swig_go_result;
  
  
  argp1 = (uint64 *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null uint64");
  }
  arg1 = (uint64)*argp1;
  
  
  result = (cv::RNG *)new cv::RNG(arg1);
  *(cv::RNG **)&_swig_go_result = (cv::RNG *)result; 
  return _swig_go_result;
}


intgo _wrap_RNG_next_cv_dbcbba478e71899d(cv::RNG *_swig_go_0) {
  cv::RNG *arg1 = (cv::RNG *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::RNG **)&_swig_go_0; 
  
  result = (unsigned int)(arg1)->next();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_RNG_uniform__SWIG_0_cv_dbcbba478e71899d(cv::RNG *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  cv::RNG *arg1 = (cv::RNG *) 0 ;
  int arg2 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::RNG **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->uniform(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_RNG_uniform__SWIG_1_cv_dbcbba478e71899d(cv::RNG *_swig_go_0, float _swig_go_1, float _swig_go_2) {
  cv::RNG *arg1 = (cv::RNG *) 0 ;
  float arg2 ;
  float arg3 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(cv::RNG **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  result = (float)(arg1)->uniform(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_RNG_uniform__SWIG_2_cv_dbcbba478e71899d(cv::RNG *_swig_go_0, double _swig_go_1, double _swig_go_2) {
  cv::RNG *arg1 = (cv::RNG *) 0 ;
  double arg2 ;
  double arg3 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::RNG **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  result = (double)(arg1)->uniform(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RNG_fill__SWIG_0_cv_dbcbba478e71899d(cv::RNG *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, cv::_InputArray *_swig_go_3, cv::_InputArray *_swig_go_4, bool _swig_go_5) {
  cv::RNG *arg1 = (cv::RNG *) 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  cv::_InputArray *arg4 = 0 ;
  cv::_InputArray *arg5 = 0 ;
  bool arg6 ;
  
  arg1 = *(cv::RNG **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  arg5 = *(cv::_InputArray **)&_swig_go_4; 
  arg6 = (bool)_swig_go_5; 
  
  (arg1)->fill(arg2,arg3,(cv::_InputArray const &)*arg4,(cv::_InputArray const &)*arg5,arg6);
  
}


void _wrap_RNG_fill__SWIG_1_cv_dbcbba478e71899d(cv::RNG *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, cv::_InputArray *_swig_go_3, cv::_InputArray *_swig_go_4) {
  cv::RNG *arg1 = (cv::RNG *) 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  cv::_InputArray *arg4 = 0 ;
  cv::_InputArray *arg5 = 0 ;
  
  arg1 = *(cv::RNG **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  arg5 = *(cv::_InputArray **)&_swig_go_4; 
  
  (arg1)->fill(arg2,arg3,(cv::_InputArray const &)*arg4,(cv::_InputArray const &)*arg5);
  
}


double _wrap_RNG_gaussian_cv_dbcbba478e71899d(cv::RNG *_swig_go_0, double _swig_go_1) {
  cv::RNG *arg1 = (cv::RNG *) 0 ;
  double arg2 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::RNG **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  result = (double)(arg1)->gaussian(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_RNG_state_set_cv_dbcbba478e71899d(cv::RNG *_swig_go_0, uint64_t *_swig_go_1) {
  cv::RNG *arg1 = (cv::RNG *) 0 ;
  uint64 arg2 ;
  uint64 *argp2 ;
  
  arg1 = *(cv::RNG **)&_swig_go_0; 
  
  argp2 = (uint64 *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint64");
  }
  arg2 = (uint64)*argp2;
  
  
  if (arg1) (arg1)->state = arg2;
  
}


uint64_t *_wrap_RNG_state_get_cv_dbcbba478e71899d(cv::RNG *_swig_go_0) {
  cv::RNG *arg1 = (cv::RNG *) 0 ;
  uint64 result;
  uint64_t *_swig_go_result;
  
  arg1 = *(cv::RNG **)&_swig_go_0; 
  
  result =  ((arg1)->state);
  *(uint64 **)&_swig_go_result = new uint64(result); 
  return _swig_go_result;
}


void _wrap_delete_RNG_cv_dbcbba478e71899d(cv::RNG *_swig_go_0) {
  cv::RNG *arg1 = (cv::RNG *) 0 ;
  
  arg1 = *(cv::RNG **)&_swig_go_0; 
  
  delete arg1;
  
}


cv::RNG_MT19937 *_wrap_new_RNG_MT19937__SWIG_0_cv_dbcbba478e71899d() {
  cv::RNG_MT19937 *result = 0 ;
  cv::RNG_MT19937 *_swig_go_result;
  
  
  result = (cv::RNG_MT19937 *)new cv::RNG_MT19937();
  *(cv::RNG_MT19937 **)&_swig_go_result = (cv::RNG_MT19937 *)result; 
  return _swig_go_result;
}


cv::RNG_MT19937 *_wrap_new_RNG_MT19937__SWIG_1_cv_dbcbba478e71899d(intgo _swig_go_0) {
  unsigned int arg1 ;
  cv::RNG_MT19937 *result = 0 ;
  cv::RNG_MT19937 *_swig_go_result;
  
  arg1 = (unsigned int)_swig_go_0; 
  
  result = (cv::RNG_MT19937 *)new cv::RNG_MT19937(arg1);
  *(cv::RNG_MT19937 **)&_swig_go_result = (cv::RNG_MT19937 *)result; 
  return _swig_go_result;
}


void _wrap_RNG_MT19937_seed_cv_dbcbba478e71899d(cv::RNG_MT19937 *_swig_go_0, intgo _swig_go_1) {
  cv::RNG_MT19937 *arg1 = (cv::RNG_MT19937 *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(cv::RNG_MT19937 **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  (arg1)->seed(arg2);
  
}


intgo _wrap_RNG_MT19937_next_cv_dbcbba478e71899d(cv::RNG_MT19937 *_swig_go_0) {
  cv::RNG_MT19937 *arg1 = (cv::RNG_MT19937 *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::RNG_MT19937 **)&_swig_go_0; 
  
  result = (unsigned int)(arg1)->next();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_RNG_MT19937_uniform__SWIG_0_cv_dbcbba478e71899d(cv::RNG_MT19937 *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  cv::RNG_MT19937 *arg1 = (cv::RNG_MT19937 *) 0 ;
  int arg2 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::RNG_MT19937 **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->uniform(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_RNG_MT19937_uniform__SWIG_1_cv_dbcbba478e71899d(cv::RNG_MT19937 *_swig_go_0, float _swig_go_1, float _swig_go_2) {
  cv::RNG_MT19937 *arg1 = (cv::RNG_MT19937 *) 0 ;
  float arg2 ;
  float arg3 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(cv::RNG_MT19937 **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  result = (float)(arg1)->uniform(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_RNG_MT19937_uniform__SWIG_2_cv_dbcbba478e71899d(cv::RNG_MT19937 *_swig_go_0, double _swig_go_1, double _swig_go_2) {
  cv::RNG_MT19937 *arg1 = (cv::RNG_MT19937 *) 0 ;
  double arg2 ;
  double arg3 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::RNG_MT19937 **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  result = (double)(arg1)->uniform(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_RNG_MT19937_cv_dbcbba478e71899d(cv::RNG_MT19937 *_swig_go_0) {
  cv::RNG_MT19937 *arg1 = (cv::RNG_MT19937 *) 0 ;
  
  arg1 = *(cv::RNG_MT19937 **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_COUNT_TermCriteria_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::TermCriteria::COUNT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_MAX_ITER_TermCriteria_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::TermCriteria::MAX_ITER;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_EPS_TermCriteria_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::TermCriteria::EPS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


cv::TermCriteria *_wrap_new_TermCriteria__SWIG_0_cv_dbcbba478e71899d() {
  cv::TermCriteria *result = 0 ;
  cv::TermCriteria *_swig_go_result;
  
  
  result = (cv::TermCriteria *)new cv::TermCriteria();
  *(cv::TermCriteria **)&_swig_go_result = (cv::TermCriteria *)result; 
  return _swig_go_result;
}


cv::TermCriteria *_wrap_new_TermCriteria__SWIG_1_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, double _swig_go_2) {
  int arg1 ;
  int arg2 ;
  double arg3 ;
  cv::TermCriteria *result = 0 ;
  cv::TermCriteria *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  result = (cv::TermCriteria *)new cv::TermCriteria(arg1,arg2,arg3);
  *(cv::TermCriteria **)&_swig_go_result = (cv::TermCriteria *)result; 
  return _swig_go_result;
}


cv::TermCriteria *_wrap_new_TermCriteria__SWIG_2_cv_dbcbba478e71899d(CvTermCriteria *_swig_go_0) {
  CvTermCriteria *arg1 = 0 ;
  cv::TermCriteria *result = 0 ;
  cv::TermCriteria *_swig_go_result;
  
  arg1 = *(CvTermCriteria **)&_swig_go_0; 
  
  result = (cv::TermCriteria *)new cv::TermCriteria((CvTermCriteria const &)*arg1);
  *(cv::TermCriteria **)&_swig_go_result = (cv::TermCriteria *)result; 
  return _swig_go_result;
}


void _wrap_TermCriteria_Xtype_set_cv_dbcbba478e71899d(cv::TermCriteria *_swig_go_0, intgo _swig_go_1) {
  cv::TermCriteria *arg1 = (cv::TermCriteria *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::TermCriteria **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->type = arg2;
  
}


intgo _wrap_TermCriteria_Xtype_get_cv_dbcbba478e71899d(cv::TermCriteria *_swig_go_0) {
  cv::TermCriteria *arg1 = (cv::TermCriteria *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::TermCriteria **)&_swig_go_0; 
  
  result = (int) ((arg1)->type);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_TermCriteria_maxCount_set_cv_dbcbba478e71899d(cv::TermCriteria *_swig_go_0, intgo _swig_go_1) {
  cv::TermCriteria *arg1 = (cv::TermCriteria *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::TermCriteria **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->maxCount = arg2;
  
}


intgo _wrap_TermCriteria_maxCount_get_cv_dbcbba478e71899d(cv::TermCriteria *_swig_go_0) {
  cv::TermCriteria *arg1 = (cv::TermCriteria *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::TermCriteria **)&_swig_go_0; 
  
  result = (int) ((arg1)->maxCount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_TermCriteria_epsilon_set_cv_dbcbba478e71899d(cv::TermCriteria *_swig_go_0, double _swig_go_1) {
  cv::TermCriteria *arg1 = (cv::TermCriteria *) 0 ;
  double arg2 ;
  
  arg1 = *(cv::TermCriteria **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->epsilon = arg2;
  
}


double _wrap_TermCriteria_epsilon_get_cv_dbcbba478e71899d(cv::TermCriteria *_swig_go_0) {
  cv::TermCriteria *arg1 = (cv::TermCriteria *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::TermCriteria **)&_swig_go_0; 
  
  result = (double) ((arg1)->epsilon);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_TermCriteria_cv_dbcbba478e71899d(cv::TermCriteria *_swig_go_0) {
  cv::TermCriteria *arg1 = (cv::TermCriteria *) 0 ;
  
  arg1 = *(cv::TermCriteria **)&_swig_go_0; 
  
  delete arg1;
  
}


void** _wrap_getConvertFunc_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1) {
  int arg1 ;
  int arg2 ;
  cv::BinaryFunc result;
  void** _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (cv::BinaryFunc)cv::getConvertFunc(arg1,arg2);
  *(cv::BinaryFunc *)&_swig_go_result = (cv::BinaryFunc)result; 
  return _swig_go_result;
}


void** _wrap_getConvertScaleFunc_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1) {
  int arg1 ;
  int arg2 ;
  cv::BinaryFunc result;
  void** _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (cv::BinaryFunc)cv::getConvertScaleFunc(arg1,arg2);
  *(cv::BinaryFunc *)&_swig_go_result = (cv::BinaryFunc)result; 
  return _swig_go_result;
}


void** _wrap_getCopyMaskFunc_cv_dbcbba478e71899d(long long _swig_go_0) {
  size_t arg1 ;
  cv::BinaryFunc result;
  void** _swig_go_result;
  
  arg1 = (size_t)_swig_go_0; 
  
  result = (cv::BinaryFunc)cv::getCopyMaskFunc(arg1);
  *(cv::BinaryFunc *)&_swig_go_result = (cv::BinaryFunc)result; 
  return _swig_go_result;
}


void _wrap_swap_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Mat *_swig_go_1) {
  cv::Mat *arg1 = 0 ;
  cv::Mat *arg2 = 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  
  cv::swap(*arg1,*arg2);
  
}


cv::Mat *_wrap_cvarrToMat__SWIG_0_cv_dbcbba478e71899d(CvArr *_swig_go_0, bool _swig_go_1, bool _swig_go_2, intgo _swig_go_3) {
  CvArr *arg1 = (CvArr *) 0 ;
  bool arg2 ;
  bool arg3 ;
  int arg4 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = *(CvArr **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = cv::cvarrToMat((void const *)arg1,arg2,arg3,arg4);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


cv::Mat *_wrap_cvarrToMat__SWIG_1_cv_dbcbba478e71899d(CvArr *_swig_go_0, bool _swig_go_1, bool _swig_go_2) {
  CvArr *arg1 = (CvArr *) 0 ;
  bool arg2 ;
  bool arg3 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = *(CvArr **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  result = cv::cvarrToMat((void const *)arg1,arg2,arg3);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


cv::Mat *_wrap_cvarrToMat__SWIG_2_cv_dbcbba478e71899d(CvArr *_swig_go_0, bool _swig_go_1) {
  CvArr *arg1 = (CvArr *) 0 ;
  bool arg2 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = *(CvArr **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = cv::cvarrToMat((void const *)arg1,arg2);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


cv::Mat *_wrap_cvarrToMat__SWIG_3_cv_dbcbba478e71899d(CvArr *_swig_go_0) {
  CvArr *arg1 = (CvArr *) 0 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = *(CvArr **)&_swig_go_0; 
  
  result = cv::cvarrToMat((void const *)arg1);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


void _wrap_extractImageCOI__SWIG_0_cv_dbcbba478e71899d(CvArr *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2) {
  CvArr *arg1 = (CvArr *) 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  
  arg1 = *(CvArr **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  cv::extractImageCOI((void const *)arg1,(cv::_OutputArray const &)*arg2,arg3);
  
}


void _wrap_extractImageCOI__SWIG_1_cv_dbcbba478e71899d(CvArr *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  CvArr *arg1 = (CvArr *) 0 ;
  cv::_OutputArray *arg2 = 0 ;
  
  arg1 = *(CvArr **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  cv::extractImageCOI((void const *)arg1,(cv::_OutputArray const &)*arg2);
  
}


void _wrap_insertImageCOI__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, CvArr *_swig_go_1, intgo _swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  CvArr *arg2 = (CvArr *) 0 ;
  int arg3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(CvArr **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  cv::insertImageCOI((cv::_InputArray const &)*arg1,arg2,arg3);
  
}


void _wrap_insertImageCOI__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, CvArr *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  CvArr *arg2 = (CvArr *) 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(CvArr **)&_swig_go_1; 
  
  cv::insertImageCOI((cv::_InputArray const &)*arg1,arg2);
  
}


void _wrap_add__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, cv::_InputArray *_swig_go_3, intgo _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  cv::_InputArray *arg4 = 0 ;
  int arg5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::add((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,(cv::_InputArray const &)*arg4,arg5);
  
}


void _wrap_add__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, cv::_InputArray *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  cv::_InputArray *arg4 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  
  cv::add((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,(cv::_InputArray const &)*arg4);
  
}


void _wrap_add__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  cv::add((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3);
  
}


void _wrap_subtract__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, cv::_InputArray *_swig_go_3, intgo _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  cv::_InputArray *arg4 = 0 ;
  int arg5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::subtract((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,(cv::_InputArray const &)*arg4,arg5);
  
}


void _wrap_subtract__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, cv::_InputArray *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  cv::_InputArray *arg4 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  
  cv::subtract((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,(cv::_InputArray const &)*arg4);
  
}


void _wrap_subtract__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  cv::subtract((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3);
  
}


void _wrap_multiply__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, double _swig_go_3, intgo _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::multiply((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,arg4,arg5);
  
}


void _wrap_multiply__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, double _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  double arg4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  cv::multiply((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,arg4);
  
}


void _wrap_multiply__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  cv::multiply((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3);
  
}


void _wrap_divide__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, double _swig_go_3, intgo _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::divide((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,arg4,arg5);
  
}


void _wrap_divide__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, double _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  double arg4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  cv::divide((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,arg4);
  
}


void _wrap_divide__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  cv::divide((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3);
  
}


void _wrap_divide__SWIG_3_cv_dbcbba478e71899d(double _swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, intgo _swig_go_3) {
  double arg1 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  int arg4 ;
  
  arg1 = (double)_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  cv::divide(arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,arg4);
  
}


void _wrap_divide__SWIG_4_cv_dbcbba478e71899d(double _swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2) {
  double arg1 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  
  arg1 = (double)_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  cv::divide(arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3);
  
}


void _wrap_scaleAdd_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, double _swig_go_1, cv::_InputArray *_swig_go_2, cv::_OutputArray *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  double arg2 ;
  cv::_InputArray *arg3 = 0 ;
  cv::_OutputArray *arg4 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = *(cv::_OutputArray **)&_swig_go_3; 
  
  cv::scaleAdd((cv::_InputArray const &)*arg1,arg2,(cv::_InputArray const &)*arg3,(cv::_OutputArray const &)*arg4);
  
}


void _wrap_addWeighted__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, double _swig_go_1, cv::_InputArray *_swig_go_2, double _swig_go_3, double _swig_go_4, cv::_OutputArray *_swig_go_5, intgo _swig_go_6) {
  cv::_InputArray *arg1 = 0 ;
  double arg2 ;
  cv::_InputArray *arg3 = 0 ;
  double arg4 ;
  double arg5 ;
  cv::_OutputArray *arg6 = 0 ;
  int arg7 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = *(cv::_OutputArray **)&_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  
  cv::addWeighted((cv::_InputArray const &)*arg1,arg2,(cv::_InputArray const &)*arg3,arg4,arg5,(cv::_OutputArray const &)*arg6,arg7);
  
}


void _wrap_addWeighted__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, double _swig_go_1, cv::_InputArray *_swig_go_2, double _swig_go_3, double _swig_go_4, cv::_OutputArray *_swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  double arg2 ;
  cv::_InputArray *arg3 = 0 ;
  double arg4 ;
  double arg5 ;
  cv::_OutputArray *arg6 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = *(cv::_OutputArray **)&_swig_go_5; 
  
  cv::addWeighted((cv::_InputArray const &)*arg1,arg2,(cv::_InputArray const &)*arg3,arg4,arg5,(cv::_OutputArray const &)*arg6);
  
}


void _wrap_convertScaleAbs__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, double _swig_go_2, double _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  cv::convertScaleAbs((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4);
  
}


void _wrap_convertScaleAbs__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, double _swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  double arg3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  cv::convertScaleAbs((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3);
  
}


void _wrap_convertScaleAbs__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  cv::convertScaleAbs((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2);
  
}


void _wrap_LUT__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, intgo _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  int arg4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  cv::LUT((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,arg4);
  
}


void _wrap_LUT__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  cv::LUT((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3);
  
}


cv::Scalar_< double > *_wrap_sum_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0) {
  cv::_InputArray *arg1 = 0 ;
  SwigValueWrapper< cv::Scalar_< double > > result;
  cv::Scalar_< double > *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  result = cv::sum((cv::_InputArray const &)*arg1);
  *(cv::Scalar **)&_swig_go_result = new cv::Scalar(result); 
  return _swig_go_result;
}


intgo _wrap_countNonZero_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0) {
  cv::_InputArray *arg1 = 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  result = (int)cv::countNonZero((cv::_InputArray const &)*arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_findNonZero_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  cv::findNonZero((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2);
  
}


cv::Scalar_< double > *_wrap_mean__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  SwigValueWrapper< cv::Scalar_< double > > result;
  cv::Scalar_< double > *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  
  result = cv::mean((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2);
  *(cv::Scalar **)&_swig_go_result = new cv::Scalar(result); 
  return _swig_go_result;
}


cv::Scalar_< double > *_wrap_mean__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0) {
  cv::_InputArray *arg1 = 0 ;
  SwigValueWrapper< cv::Scalar_< double > > result;
  cv::Scalar_< double > *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  result = cv::mean((cv::_InputArray const &)*arg1);
  *(cv::Scalar **)&_swig_go_result = new cv::Scalar(result); 
  return _swig_go_result;
}


void _wrap_meanStdDev__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, cv::_InputArray *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  cv::_InputArray *arg4 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  
  cv::meanStdDev((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_OutputArray const &)*arg3,(cv::_InputArray const &)*arg4);
  
}


void _wrap_meanStdDev__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_OutputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  cv::meanStdDev((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_OutputArray const &)*arg3);
  
}


double _wrap_norm__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, intgo _swig_go_1, cv::_InputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  int arg2 ;
  cv::_InputArray *arg3 = 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  result = (double)cv::norm((cv::_InputArray const &)*arg1,arg2,(cv::_InputArray const &)*arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_norm__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, intgo _swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  int arg2 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (double)cv::norm((cv::_InputArray const &)*arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_norm__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0) {
  cv::_InputArray *arg1 = 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  result = (double)cv::norm((cv::_InputArray const &)*arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_norm__SWIG_3_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, intgo _swig_go_2, cv::_InputArray *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  int arg3 ;
  cv::_InputArray *arg4 = 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  
  result = (double)cv::norm((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,arg3,(cv::_InputArray const &)*arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_norm__SWIG_4_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, intgo _swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  int arg3 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (double)cv::norm((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_norm__SWIG_5_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  
  result = (double)cv::norm((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_batchDistance__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, intgo _swig_go_3, cv::_OutputArray *_swig_go_4, intgo _swig_go_5, intgo _swig_go_6, cv::_InputArray *_swig_go_7, intgo _swig_go_8, bool _swig_go_9) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  int arg4 ;
  cv::_OutputArray *arg5 = 0 ;
  int arg6 ;
  int arg7 ;
  cv::_InputArray *arg8 = 0 ;
  int arg9 ;
  bool arg10 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(cv::_OutputArray **)&_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  arg8 = *(cv::_InputArray **)&_swig_go_7; 
  arg9 = (int)_swig_go_8; 
  arg10 = (bool)_swig_go_9; 
  
  cv::batchDistance((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,arg4,(cv::_OutputArray const &)*arg5,arg6,arg7,(cv::_InputArray const &)*arg8,arg9,arg10);
  
}


void _wrap_batchDistance__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, intgo _swig_go_3, cv::_OutputArray *_swig_go_4, intgo _swig_go_5, intgo _swig_go_6, cv::_InputArray *_swig_go_7, intgo _swig_go_8) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  int arg4 ;
  cv::_OutputArray *arg5 = 0 ;
  int arg6 ;
  int arg7 ;
  cv::_InputArray *arg8 = 0 ;
  int arg9 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(cv::_OutputArray **)&_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  arg8 = *(cv::_InputArray **)&_swig_go_7; 
  arg9 = (int)_swig_go_8; 
  
  cv::batchDistance((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,arg4,(cv::_OutputArray const &)*arg5,arg6,arg7,(cv::_InputArray const &)*arg8,arg9);
  
}


void _wrap_batchDistance__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, intgo _swig_go_3, cv::_OutputArray *_swig_go_4, intgo _swig_go_5, intgo _swig_go_6, cv::_InputArray *_swig_go_7) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  int arg4 ;
  cv::_OutputArray *arg5 = 0 ;
  int arg6 ;
  int arg7 ;
  cv::_InputArray *arg8 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(cv::_OutputArray **)&_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  arg8 = *(cv::_InputArray **)&_swig_go_7; 
  
  cv::batchDistance((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,arg4,(cv::_OutputArray const &)*arg5,arg6,arg7,(cv::_InputArray const &)*arg8);
  
}


void _wrap_batchDistance__SWIG_3_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, intgo _swig_go_3, cv::_OutputArray *_swig_go_4, intgo _swig_go_5, intgo _swig_go_6) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  int arg4 ;
  cv::_OutputArray *arg5 = 0 ;
  int arg6 ;
  int arg7 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(cv::_OutputArray **)&_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  
  cv::batchDistance((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,arg4,(cv::_OutputArray const &)*arg5,arg6,arg7);
  
}


void _wrap_batchDistance__SWIG_4_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, intgo _swig_go_3, cv::_OutputArray *_swig_go_4, intgo _swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  int arg4 ;
  cv::_OutputArray *arg5 = 0 ;
  int arg6 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(cv::_OutputArray **)&_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  cv::batchDistance((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,arg4,(cv::_OutputArray const &)*arg5,arg6);
  
}


void _wrap_batchDistance__SWIG_5_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, intgo _swig_go_3, cv::_OutputArray *_swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  int arg4 ;
  cv::_OutputArray *arg5 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(cv::_OutputArray **)&_swig_go_4; 
  
  cv::batchDistance((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,arg4,(cv::_OutputArray const &)*arg5);
  
}


void _wrap_normalize__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, double _swig_go_2, double _swig_go_3, intgo _swig_go_4, intgo _swig_go_5, cv::_InputArray *_swig_go_6) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  int arg5 ;
  int arg6 ;
  cv::_InputArray *arg7 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = *(cv::_InputArray **)&_swig_go_6; 
  
  cv::normalize((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6,(cv::_InputArray const &)*arg7);
  
}


void _wrap_normalize__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, double _swig_go_2, double _swig_go_3, intgo _swig_go_4, intgo _swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  int arg5 ;
  int arg6 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  cv::normalize((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6);
  
}


void _wrap_normalize__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, double _swig_go_2, double _swig_go_3, intgo _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  int arg5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::normalize((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5);
  
}


void _wrap_normalize__SWIG_3_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, double _swig_go_2, double _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  cv::normalize((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4);
  
}


void _wrap_normalize__SWIG_4_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, double _swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  double arg3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  cv::normalize((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3);
  
}


void _wrap_normalize__SWIG_5_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  cv::normalize((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2);
  
}


void _wrap_minMaxLoc__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, double *_swig_go_1, double *_swig_go_2, cv::Point_< int > *_swig_go_3, cv::Point_< int > *_swig_go_4, cv::_InputArray *_swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  double *arg2 = (double *) 0 ;
  double *arg3 = (double *) 0 ;
  cv::Point *arg4 = (cv::Point *) 0 ;
  cv::Point *arg5 = (cv::Point *) 0 ;
  cv::_InputArray *arg6 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  arg3 = *(double **)&_swig_go_2; 
  arg4 = *(cv::Point **)&_swig_go_3; 
  arg5 = *(cv::Point **)&_swig_go_4; 
  arg6 = *(cv::_InputArray **)&_swig_go_5; 
  
  cv::minMaxLoc((cv::_InputArray const &)*arg1,arg2,arg3,arg4,arg5,(cv::_InputArray const &)*arg6);
  
}


void _wrap_minMaxLoc__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, double *_swig_go_1, double *_swig_go_2, cv::Point_< int > *_swig_go_3, cv::Point_< int > *_swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  double *arg2 = (double *) 0 ;
  double *arg3 = (double *) 0 ;
  cv::Point *arg4 = (cv::Point *) 0 ;
  cv::Point *arg5 = (cv::Point *) 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  arg3 = *(double **)&_swig_go_2; 
  arg4 = *(cv::Point **)&_swig_go_3; 
  arg5 = *(cv::Point **)&_swig_go_4; 
  
  cv::minMaxLoc((cv::_InputArray const &)*arg1,arg2,arg3,arg4,arg5);
  
}


void _wrap_minMaxLoc__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, double *_swig_go_1, double *_swig_go_2, cv::Point_< int > *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  double *arg2 = (double *) 0 ;
  double *arg3 = (double *) 0 ;
  cv::Point *arg4 = (cv::Point *) 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  arg3 = *(double **)&_swig_go_2; 
  arg4 = *(cv::Point **)&_swig_go_3; 
  
  cv::minMaxLoc((cv::_InputArray const &)*arg1,arg2,arg3,arg4);
  
}


void _wrap_minMaxLoc__SWIG_3_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, double *_swig_go_1, double *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  double *arg2 = (double *) 0 ;
  double *arg3 = (double *) 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  arg3 = *(double **)&_swig_go_2; 
  
  cv::minMaxLoc((cv::_InputArray const &)*arg1,arg2,arg3);
  
}


void _wrap_minMaxLoc__SWIG_4_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, double *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  double *arg2 = (double *) 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  
  cv::minMaxLoc((cv::_InputArray const &)*arg1,arg2);
  
}


void _wrap_minMaxIdx__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, double *_swig_go_1, double *_swig_go_2, intgo *_swig_go_3, intgo *_swig_go_4, cv::_InputArray *_swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  double *arg2 = (double *) 0 ;
  double *arg3 = (double *) 0 ;
  int *arg4 = (int *) 0 ;
  int *arg5 = (int *) 0 ;
  cv::_InputArray *arg6 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  arg3 = *(double **)&_swig_go_2; 
  arg4 = *(int **)&_swig_go_3; 
  arg5 = *(int **)&_swig_go_4; 
  arg6 = *(cv::_InputArray **)&_swig_go_5; 
  
  cv::minMaxIdx((cv::_InputArray const &)*arg1,arg2,arg3,arg4,arg5,(cv::_InputArray const &)*arg6);
  
}


void _wrap_minMaxIdx__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, double *_swig_go_1, double *_swig_go_2, intgo *_swig_go_3, intgo *_swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  double *arg2 = (double *) 0 ;
  double *arg3 = (double *) 0 ;
  int *arg4 = (int *) 0 ;
  int *arg5 = (int *) 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  arg3 = *(double **)&_swig_go_2; 
  arg4 = *(int **)&_swig_go_3; 
  arg5 = *(int **)&_swig_go_4; 
  
  cv::minMaxIdx((cv::_InputArray const &)*arg1,arg2,arg3,arg4,arg5);
  
}


void _wrap_minMaxIdx__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, double *_swig_go_1, double *_swig_go_2, intgo *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  double *arg2 = (double *) 0 ;
  double *arg3 = (double *) 0 ;
  int *arg4 = (int *) 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  arg3 = *(double **)&_swig_go_2; 
  arg4 = *(int **)&_swig_go_3; 
  
  cv::minMaxIdx((cv::_InputArray const &)*arg1,arg2,arg3,arg4);
  
}


void _wrap_minMaxIdx__SWIG_3_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, double *_swig_go_1, double *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  double *arg2 = (double *) 0 ;
  double *arg3 = (double *) 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  arg3 = *(double **)&_swig_go_2; 
  
  cv::minMaxIdx((cv::_InputArray const &)*arg1,arg2,arg3);
  
}


void _wrap_reduce__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::reduce((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5);
  
}


void _wrap_reduce__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  cv::reduce((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4);
  
}


void _wrap_merge__SWIG_0_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, long long _swig_go_1, cv::_OutputArray *_swig_go_2) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  size_t arg2 ;
  cv::_OutputArray *arg3 = 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  cv::merge((cv::Mat const *)arg1,arg2,(cv::_OutputArray const &)*arg3);
  
}


void _wrap_merge__SWIG_1_cv_dbcbba478e71899d(std::vector< cv::Mat > *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  std::vector< cv::Mat > *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  
  arg1 = *(std::vector< cv::Mat > **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  cv::merge((std::vector< cv::Mat > const &)*arg1,(cv::_OutputArray const &)*arg2);
  
}


void _wrap_merge__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  cv::merge((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2);
  
}


void _wrap_split__SWIG_0_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Mat *_swig_go_1) {
  cv::Mat *arg1 = 0 ;
  cv::Mat *arg2 = (cv::Mat *) 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  
  cv::split((cv::Mat const &)*arg1,arg2);
  
}


void _wrap_split__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, std::vector< cv::Mat > *_swig_go_1) {
  cv::Mat *arg1 = 0 ;
  std::vector< cv::Mat > *arg2 = 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(std::vector< cv::Mat > **)&_swig_go_1; 
  
  cv::split((cv::Mat const &)*arg1,*arg2);
  
}


void _wrap_split__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  cv::split((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2);
  
}


void _wrap_mixChannels__SWIG_0_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, long long _swig_go_1, cv::Mat *_swig_go_2, long long _swig_go_3, intgo *_swig_go_4, long long _swig_go_5) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  size_t arg2 ;
  cv::Mat *arg3 = (cv::Mat *) 0 ;
  size_t arg4 ;
  int *arg5 = (int *) 0 ;
  size_t arg6 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  arg3 = *(cv::Mat **)&_swig_go_2; 
  arg4 = (size_t)_swig_go_3; 
  arg5 = *(int **)&_swig_go_4; 
  arg6 = (size_t)_swig_go_5; 
  
  cv::mixChannels((cv::Mat const *)arg1,arg2,arg3,arg4,(int const *)arg5,arg6);
  
}


void _wrap_mixChannels__SWIG_1_cv_dbcbba478e71899d(std::vector< cv::Mat > *_swig_go_0, std::vector< cv::Mat > *_swig_go_1, intgo *_swig_go_2, long long _swig_go_3) {
  std::vector< cv::Mat > *arg1 = 0 ;
  std::vector< cv::Mat > *arg2 = 0 ;
  int *arg3 = (int *) 0 ;
  size_t arg4 ;
  
  arg1 = *(std::vector< cv::Mat > **)&_swig_go_0; 
  arg2 = *(std::vector< cv::Mat > **)&_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = (size_t)_swig_go_3; 
  
  cv::mixChannels((std::vector< cv::Mat > const &)*arg1,*arg2,(int const *)arg3,arg4);
  
}


void _wrap_mixChannels__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, std::vector< int > *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  std::vector< int > *arg3 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(std::vector< int > **)&_swig_go_2; 
  
  cv::mixChannels((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(std::vector< int > const &)*arg3);
  
}


void _wrap_extractChannel_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  cv::extractChannel((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3);
  
}


void _wrap_insertChannel_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  cv::insertChannel((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3);
  
}


void _wrap_flip_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  cv::flip((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3);
  
}


void _wrap_repeat__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, cv::_OutputArray *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  int arg2 ;
  int arg3 ;
  cv::_OutputArray *arg4 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::_OutputArray **)&_swig_go_3; 
  
  cv::repeat((cv::_InputArray const &)*arg1,arg2,arg3,(cv::_OutputArray const &)*arg4);
  
}


cv::Mat *_wrap_repeat__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  cv::Mat *arg1 = 0 ;
  int arg2 ;
  int arg3 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = cv::repeat((cv::Mat const &)*arg1,arg2,arg3);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


void _wrap_hconcat__SWIG_0_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, long long _swig_go_1, cv::_OutputArray *_swig_go_2) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  size_t arg2 ;
  cv::_OutputArray *arg3 = 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  cv::hconcat((cv::Mat const *)arg1,arg2,(cv::_OutputArray const &)*arg3);
  
}


void _wrap_hconcat__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  cv::hconcat((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3);
  
}


void _wrap_hconcat__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  cv::hconcat((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2);
  
}


void _wrap_vconcat__SWIG_0_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, long long _swig_go_1, cv::_OutputArray *_swig_go_2) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  size_t arg2 ;
  cv::_OutputArray *arg3 = 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  cv::vconcat((cv::Mat const *)arg1,arg2,(cv::_OutputArray const &)*arg3);
  
}


void _wrap_vconcat__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  cv::vconcat((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3);
  
}


void _wrap_vconcat__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  cv::vconcat((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2);
  
}


void _wrap_bitwise_and__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, cv::_InputArray *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  cv::_InputArray *arg4 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  
  cv::bitwise_and((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,(cv::_InputArray const &)*arg4);
  
}


void _wrap_bitwise_and__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  cv::bitwise_and((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3);
  
}


void _wrap_bitwise_or__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, cv::_InputArray *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  cv::_InputArray *arg4 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  
  cv::bitwise_or((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,(cv::_InputArray const &)*arg4);
  
}


void _wrap_bitwise_or__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  cv::bitwise_or((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3);
  
}


void _wrap_bitwise_xor__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, cv::_InputArray *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  cv::_InputArray *arg4 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  
  cv::bitwise_xor((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,(cv::_InputArray const &)*arg4);
  
}


void _wrap_bitwise_xor__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  cv::bitwise_xor((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3);
  
}


void _wrap_bitwise_not__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_InputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  cv::bitwise_not((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_InputArray const &)*arg3);
  
}


void _wrap_bitwise_not__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  cv::bitwise_not((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2);
  
}


void _wrap_absdiff_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  cv::absdiff((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3);
  
}


void _wrap_inRange_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::_OutputArray *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  cv::_OutputArray *arg4 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = *(cv::_OutputArray **)&_swig_go_3; 
  
  cv::inRange((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_InputArray const &)*arg3,(cv::_OutputArray const &)*arg4);
  
}


void _wrap_compare_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, intgo _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  int arg4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  cv::compare((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,arg4);
  
}


void _wrap_min__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  cv::min((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3);
  
}


void _wrap_max__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  cv::max((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3);
  
}


void _wrap_min__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Mat *_swig_go_1, cv::Mat *_swig_go_2) {
  cv::Mat *arg1 = 0 ;
  cv::Mat *arg2 = 0 ;
  cv::Mat *arg3 = 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(cv::Mat **)&_swig_go_2; 
  
  cv::min((cv::Mat const &)*arg1,(cv::Mat const &)*arg2,*arg3);
  
}


void _wrap_min__SWIG_2_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, double _swig_go_1, cv::Mat *_swig_go_2) {
  cv::Mat *arg1 = 0 ;
  double arg2 ;
  cv::Mat *arg3 = 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = *(cv::Mat **)&_swig_go_2; 
  
  cv::min((cv::Mat const &)*arg1,arg2,*arg3);
  
}


void _wrap_max__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Mat *_swig_go_1, cv::Mat *_swig_go_2) {
  cv::Mat *arg1 = 0 ;
  cv::Mat *arg2 = 0 ;
  cv::Mat *arg3 = 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(cv::Mat **)&_swig_go_2; 
  
  cv::max((cv::Mat const &)*arg1,(cv::Mat const &)*arg2,*arg3);
  
}


void _wrap_max__SWIG_2_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, double _swig_go_1, cv::Mat *_swig_go_2) {
  cv::Mat *arg1 = 0 ;
  double arg2 ;
  cv::Mat *arg3 = 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = *(cv::Mat **)&_swig_go_2; 
  
  cv::max((cv::Mat const &)*arg1,arg2,*arg3);
  
}


void _wrap_sqrt_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  cv::sqrt((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2);
  
}


void _wrap_pow_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, double _swig_go_1, cv::_OutputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  double arg2 ;
  cv::_OutputArray *arg3 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  cv::pow((cv::_InputArray const &)*arg1,arg2,(cv::_OutputArray const &)*arg3);
  
}


void _wrap_exp__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  cv::exp((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2);
  
}


void _wrap_log__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  cv::log((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2);
  
}


float _wrap_cubeRoot_cv_dbcbba478e71899d(float _swig_go_0) {
  float arg1 ;
  float result;
  float _swig_go_result;
  
  arg1 = (float)_swig_go_0; 
  
  result = (float)cv::cubeRoot(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_fastAtan2__SWIG_0_cv_dbcbba478e71899d(float _swig_go_0, float _swig_go_1) {
  float arg1 ;
  float arg2 ;
  float result;
  float _swig_go_result;
  
  arg1 = (float)_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  result = (float)cv::fastAtan2(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_exp__SWIG_1_cv_dbcbba478e71899d(float *_swig_go_0, float *_swig_go_1, intgo _swig_go_2) {
  float *arg1 = (float *) 0 ;
  float *arg2 = (float *) 0 ;
  int arg3 ;
  
  arg1 = *(float **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  cv::exp((float const *)arg1,arg2,arg3);
  
}


void _wrap_log__SWIG_1_cv_dbcbba478e71899d(float *_swig_go_0, float *_swig_go_1, intgo _swig_go_2) {
  float *arg1 = (float *) 0 ;
  float *arg2 = (float *) 0 ;
  int arg3 ;
  
  arg1 = *(float **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  cv::log((float const *)arg1,arg2,arg3);
  
}


void _wrap_fastAtan2__SWIG_1_cv_dbcbba478e71899d(float *_swig_go_0, float *_swig_go_1, float *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  float *arg1 = (float *) 0 ;
  float *arg2 = (float *) 0 ;
  float *arg3 = (float *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(float **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  arg3 = *(float **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  cv::fastAtan2((float const *)arg1,(float const *)arg2,arg3,arg4,arg5);
  
}


void _wrap_magnitude__SWIG_0_cv_dbcbba478e71899d(float *_swig_go_0, float *_swig_go_1, float *_swig_go_2, intgo _swig_go_3) {
  float *arg1 = (float *) 0 ;
  float *arg2 = (float *) 0 ;
  float *arg3 = (float *) 0 ;
  int arg4 ;
  
  arg1 = *(float **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  arg3 = *(float **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  cv::magnitude((float const *)arg1,(float const *)arg2,arg3,arg4);
  
}


void _wrap_polarToCart__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, cv::_OutputArray *_swig_go_3, bool _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  cv::_OutputArray *arg4 = 0 ;
  bool arg5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = *(cv::_OutputArray **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  cv::polarToCart((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,(cv::_OutputArray const &)*arg4,arg5);
  
}


void _wrap_polarToCart__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, cv::_OutputArray *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  cv::_OutputArray *arg4 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = *(cv::_OutputArray **)&_swig_go_3; 
  
  cv::polarToCart((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,(cv::_OutputArray const &)*arg4);
  
}


void _wrap_cartToPolar__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, cv::_OutputArray *_swig_go_3, bool _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  cv::_OutputArray *arg4 = 0 ;
  bool arg5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = *(cv::_OutputArray **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  cv::cartToPolar((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,(cv::_OutputArray const &)*arg4,arg5);
  
}


void _wrap_cartToPolar__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, cv::_OutputArray *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  cv::_OutputArray *arg4 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = *(cv::_OutputArray **)&_swig_go_3; 
  
  cv::cartToPolar((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,(cv::_OutputArray const &)*arg4);
  
}


void _wrap_phase__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, bool _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  bool arg4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = (bool)_swig_go_3; 
  
  cv::phase((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,arg4);
  
}


void _wrap_phase__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  cv::phase((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3);
  
}


void _wrap_magnitude__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  cv::magnitude((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3);
  
}


bool _wrap_checkRange__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, bool _swig_go_1, cv::Point_< int > *_swig_go_2, double _swig_go_3, double _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  bool arg2 ;
  cv::Point *arg3 = (cv::Point *) 0 ;
  double arg4 ;
  double arg5 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  arg3 = *(cv::Point **)&_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  result = (bool)cv::checkRange((cv::_InputArray const &)*arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_checkRange__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, bool _swig_go_1, cv::Point_< int > *_swig_go_2, double _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  bool arg2 ;
  cv::Point *arg3 = (cv::Point *) 0 ;
  double arg4 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  arg3 = *(cv::Point **)&_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  result = (bool)cv::checkRange((cv::_InputArray const &)*arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_checkRange__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, bool _swig_go_1, cv::Point_< int > *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  bool arg2 ;
  cv::Point *arg3 = (cv::Point *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  arg3 = *(cv::Point **)&_swig_go_2; 
  
  result = (bool)cv::checkRange((cv::_InputArray const &)*arg1,arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_checkRange__SWIG_3_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, bool _swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  bool arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = (bool)cv::checkRange((cv::_InputArray const &)*arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_checkRange__SWIG_4_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0) {
  cv::_InputArray *arg1 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  result = (bool)cv::checkRange((cv::_InputArray const &)*arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_patchNaNs__SWIG_0_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, double _swig_go_1) {
  cv::_OutputArray *arg1 = 0 ;
  double arg2 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  cv::patchNaNs((cv::_OutputArray const &)*arg1,arg2);
  
}


void _wrap_patchNaNs__SWIG_1_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0) {
  cv::_OutputArray *arg1 = 0 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  cv::patchNaNs((cv::_OutputArray const &)*arg1);
  
}


void _wrap_gemm__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, double _swig_go_2, cv::_InputArray *_swig_go_3, double _swig_go_4, cv::_OutputArray *_swig_go_5, intgo _swig_go_6) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  double arg3 ;
  cv::_InputArray *arg4 = 0 ;
  double arg5 ;
  cv::_OutputArray *arg6 = 0 ;
  int arg7 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = *(cv::_OutputArray **)&_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  
  cv::gemm((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,arg3,(cv::_InputArray const &)*arg4,arg5,(cv::_OutputArray const &)*arg6,arg7);
  
}


void _wrap_gemm__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, double _swig_go_2, cv::_InputArray *_swig_go_3, double _swig_go_4, cv::_OutputArray *_swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  double arg3 ;
  cv::_InputArray *arg4 = 0 ;
  double arg5 ;
  cv::_OutputArray *arg6 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = *(cv::_OutputArray **)&_swig_go_5; 
  
  cv::gemm((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,arg3,(cv::_InputArray const &)*arg4,arg5,(cv::_OutputArray const &)*arg6);
  
}


void _wrap_mulTransposed__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, bool _swig_go_2, cv::_InputArray *_swig_go_3, double _swig_go_4, intgo _swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  bool arg3 ;
  cv::_InputArray *arg4 = 0 ;
  double arg5 ;
  int arg6 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  cv::mulTransposed((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,(cv::_InputArray const &)*arg4,arg5,arg6);
  
}


void _wrap_mulTransposed__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, bool _swig_go_2, cv::_InputArray *_swig_go_3, double _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  bool arg3 ;
  cv::_InputArray *arg4 = 0 ;
  double arg5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  cv::mulTransposed((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,(cv::_InputArray const &)*arg4,arg5);
  
}


void _wrap_mulTransposed__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, bool _swig_go_2, cv::_InputArray *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  bool arg3 ;
  cv::_InputArray *arg4 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  
  cv::mulTransposed((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,(cv::_InputArray const &)*arg4);
  
}


void _wrap_mulTransposed__SWIG_3_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, bool _swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  bool arg3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  cv::mulTransposed((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3);
  
}


void _wrap_transpose_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  cv::transpose((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2);
  
}


void _wrap_transform_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_InputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  cv::transform((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_InputArray const &)*arg3);
  
}


void _wrap_perspectiveTransform_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_InputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  cv::perspectiveTransform((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_InputArray const &)*arg3);
  
}


void _wrap_completeSymm__SWIG_0_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, bool _swig_go_1) {
  cv::_OutputArray *arg1 = 0 ;
  bool arg2 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  cv::completeSymm((cv::_OutputArray const &)*arg1,arg2);
  
}


void _wrap_completeSymm__SWIG_1_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0) {
  cv::_OutputArray *arg1 = 0 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  cv::completeSymm((cv::_OutputArray const &)*arg1);
  
}


void _wrap_setIdentity__SWIG_0_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::Scalar_< double > *_swig_go_1) {
  cv::_OutputArray *arg1 = 0 ;
  cv::Scalar *arg2 = 0 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(cv::Scalar **)&_swig_go_1; 
  
  cv::setIdentity((cv::_OutputArray const &)*arg1,(cv::Scalar_< double > const &)*arg2);
  
}


void _wrap_setIdentity__SWIG_1_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0) {
  cv::_OutputArray *arg1 = 0 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  cv::setIdentity((cv::_OutputArray const &)*arg1);
  
}


double _wrap_determinant_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0) {
  cv::_InputArray *arg1 = 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  result = (double)cv::determinant((cv::_InputArray const &)*arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


cv::Scalar_< double > *_wrap_trace_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0) {
  cv::_InputArray *arg1 = 0 ;
  SwigValueWrapper< cv::Scalar_< double > > result;
  cv::Scalar_< double > *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  result = cv::trace((cv::_InputArray const &)*arg1);
  *(cv::Scalar **)&_swig_go_result = new cv::Scalar(result); 
  return _swig_go_result;
}


double _wrap_invert__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (double)cv::invert((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_invert__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  result = (double)cv::invert((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_solve__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, intgo _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  int arg4 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = (bool)cv::solve((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_solve__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  result = (bool)cv::solve((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SORT_EVERY_ROW_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::SORT_EVERY_ROW;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_SORT_EVERY_COLUMN_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::SORT_EVERY_COLUMN;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_SORT_ASCENDING_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::SORT_ASCENDING;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_SORT_DESCENDING_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::SORT_DESCENDING;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_sort_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  cv::sort((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3);
  
}


void _wrap_sortIdx_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  cv::sortIdx((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3);
  
}


intgo _wrap_solveCubic_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  result = (int)cv::solveCubic((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_solvePoly__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (double)cv::solvePoly((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_solvePoly__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  result = (double)cv::solvePoly((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_eigen__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = (bool)cv::eigen((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_eigen__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (bool)cv::eigen((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_eigen__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  result = (bool)cv::eigen((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_eigen__SWIG_3_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  int arg4 ;
  int arg5 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  result = (bool)cv::eigen((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_OutputArray const &)*arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_eigen__SWIG_4_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, intgo _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  int arg4 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = (bool)cv::eigen((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_OutputArray const &)*arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_eigen__SWIG_5_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_OutputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  result = (bool)cv::eigen((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_OutputArray const &)*arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_eigen__SWIG_6_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, bool _swig_go_1, cv::_OutputArray *_swig_go_2, cv::_OutputArray *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  bool arg2 ;
  cv::_OutputArray *arg3 = 0 ;
  cv::_OutputArray *arg4 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = *(cv::_OutputArray **)&_swig_go_3; 
  
  result = (bool)cv::eigen((cv::_InputArray const &)*arg1,arg2,(cv::_OutputArray const &)*arg3,(cv::_OutputArray const &)*arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_COVAR_SCRAMBLED_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COVAR_SCRAMBLED;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COVAR_NORMAL_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COVAR_NORMAL;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COVAR_USE_AVG_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COVAR_USE_AVG;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COVAR_SCALE_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COVAR_SCALE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COVAR_ROWS_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COVAR_ROWS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COVAR_COLS_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COVAR_COLS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_calcCovarMatrix__SWIG_0_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1, cv::Mat *_swig_go_2, cv::Mat *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  cv::Mat *arg3 = 0 ;
  cv::Mat *arg4 = 0 ;
  int arg5 ;
  int arg6 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::Mat **)&_swig_go_2; 
  arg4 = *(cv::Mat **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  cv::calcCovarMatrix((cv::Mat const *)arg1,arg2,*arg3,*arg4,arg5,arg6);
  
}


void _wrap_calcCovarMatrix__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1, cv::Mat *_swig_go_2, cv::Mat *_swig_go_3, intgo _swig_go_4) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  cv::Mat *arg3 = 0 ;
  cv::Mat *arg4 = 0 ;
  int arg5 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::Mat **)&_swig_go_2; 
  arg4 = *(cv::Mat **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::calcCovarMatrix((cv::Mat const *)arg1,arg2,*arg3,*arg4,arg5);
  
}


void _wrap_calcCovarMatrix__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  int arg4 ;
  int arg5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::calcCovarMatrix((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_OutputArray const &)*arg3,arg4,arg5);
  
}


void _wrap_calcCovarMatrix__SWIG_3_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, intgo _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  int arg4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  cv::calcCovarMatrix((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_OutputArray const &)*arg3,arg4);
  
}


cv::PCA *_wrap_new_PCA__SWIG_0_cv_dbcbba478e71899d() {
  cv::PCA *result = 0 ;
  cv::PCA *_swig_go_result;
  
  
  result = (cv::PCA *)new cv::PCA();
  *(cv::PCA **)&_swig_go_result = (cv::PCA *)result; 
  return _swig_go_result;
}


cv::PCA *_wrap_new_PCA__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  cv::PCA *result = 0 ;
  cv::PCA *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = (cv::PCA *)new cv::PCA((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,arg3,arg4);
  *(cv::PCA **)&_swig_go_result = (cv::PCA *)result; 
  return _swig_go_result;
}


cv::PCA *_wrap_new_PCA__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, intgo _swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  int arg3 ;
  cv::PCA *result = 0 ;
  cv::PCA *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (cv::PCA *)new cv::PCA((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,arg3);
  *(cv::PCA **)&_swig_go_result = (cv::PCA *)result; 
  return _swig_go_result;
}


cv::PCA *_wrap_new_PCA__SWIG_3_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, intgo _swig_go_2, double _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  cv::PCA *result = 0 ;
  cv::PCA *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  result = (cv::PCA *)new cv::PCA((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,arg3,arg4);
  *(cv::PCA **)&_swig_go_result = (cv::PCA *)result; 
  return _swig_go_result;
}


cv::PCA *_wrap_PCA_computeVar_cv_dbcbba478e71899d(cv::PCA *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_InputArray *_swig_go_2, intgo _swig_go_3, double _swig_go_4) {
  cv::PCA *arg1 = (cv::PCA *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  int arg4 ;
  double arg5 ;
  cv::PCA *result = 0 ;
  cv::PCA *_swig_go_result;
  
  arg1 = *(cv::PCA **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  result = (cv::PCA *) &(arg1)->computeVar((cv::_InputArray const &)*arg2,(cv::_InputArray const &)*arg3,arg4,arg5);
  *(cv::PCA **)&_swig_go_result = result; 
  return _swig_go_result;
}


cv::Mat *_wrap_PCA_project__SWIG_0_cv_dbcbba478e71899d(cv::PCA *_swig_go_0, cv::_InputArray *_swig_go_1) {
  cv::PCA *arg1 = (cv::PCA *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::PCA **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  
  result = ((cv::PCA const *)arg1)->project((cv::_InputArray const &)*arg2);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


void _wrap_PCA_project__SWIG_1_cv_dbcbba478e71899d(cv::PCA *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2) {
  cv::PCA *arg1 = (cv::PCA *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  
  arg1 = *(cv::PCA **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  ((cv::PCA const *)arg1)->project((cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3);
  
}


cv::Mat *_wrap_PCA_backProject__SWIG_0_cv_dbcbba478e71899d(cv::PCA *_swig_go_0, cv::_InputArray *_swig_go_1) {
  cv::PCA *arg1 = (cv::PCA *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::PCA **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  
  result = ((cv::PCA const *)arg1)->backProject((cv::_InputArray const &)*arg2);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


void _wrap_PCA_backProject__SWIG_1_cv_dbcbba478e71899d(cv::PCA *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2) {
  cv::PCA *arg1 = (cv::PCA *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  
  arg1 = *(cv::PCA **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  ((cv::PCA const *)arg1)->backProject((cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3);
  
}


void _wrap_PCA_eigenvectors_set_cv_dbcbba478e71899d(cv::PCA *_swig_go_0, cv::Mat *_swig_go_1) {
  cv::PCA *arg1 = (cv::PCA *) 0 ;
  cv::Mat *arg2 = (cv::Mat *) 0 ;
  
  arg1 = *(cv::PCA **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  
  if (arg1) (arg1)->eigenvectors = *arg2;
  
}


cv::Mat *_wrap_PCA_eigenvectors_get_cv_dbcbba478e71899d(cv::PCA *_swig_go_0) {
  cv::PCA *arg1 = (cv::PCA *) 0 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::PCA **)&_swig_go_0; 
  
  result = (cv::Mat *)& ((arg1)->eigenvectors);
  *(cv::Mat **)&_swig_go_result = (cv::Mat *)result; 
  return _swig_go_result;
}


void _wrap_PCA_eigenvalues_set_cv_dbcbba478e71899d(cv::PCA *_swig_go_0, cv::Mat *_swig_go_1) {
  cv::PCA *arg1 = (cv::PCA *) 0 ;
  cv::Mat *arg2 = (cv::Mat *) 0 ;
  
  arg1 = *(cv::PCA **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  
  if (arg1) (arg1)->eigenvalues = *arg2;
  
}


cv::Mat *_wrap_PCA_eigenvalues_get_cv_dbcbba478e71899d(cv::PCA *_swig_go_0) {
  cv::PCA *arg1 = (cv::PCA *) 0 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::PCA **)&_swig_go_0; 
  
  result = (cv::Mat *)& ((arg1)->eigenvalues);
  *(cv::Mat **)&_swig_go_result = (cv::Mat *)result; 
  return _swig_go_result;
}


void _wrap_PCA_mean_set_cv_dbcbba478e71899d(cv::PCA *_swig_go_0, cv::Mat *_swig_go_1) {
  cv::PCA *arg1 = (cv::PCA *) 0 ;
  cv::Mat *arg2 = (cv::Mat *) 0 ;
  
  arg1 = *(cv::PCA **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  
  if (arg1) (arg1)->mean = *arg2;
  
}


cv::Mat *_wrap_PCA_mean_get_cv_dbcbba478e71899d(cv::PCA *_swig_go_0) {
  cv::PCA *arg1 = (cv::PCA *) 0 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::PCA **)&_swig_go_0; 
  
  result = (cv::Mat *)& ((arg1)->mean);
  *(cv::Mat **)&_swig_go_result = (cv::Mat *)result; 
  return _swig_go_result;
}


void _wrap_delete_PCA_cv_dbcbba478e71899d(cv::PCA *_swig_go_0) {
  cv::PCA *arg1 = (cv::PCA *) 0 ;
  
  arg1 = *(cv::PCA **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_PCACompute__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, intgo _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  int arg4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  cv::PCACompute((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_OutputArray const &)*arg3,arg4);
  
}


void _wrap_PCACompute__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_OutputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  cv::PCACompute((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_OutputArray const &)*arg3);
  
}


void _wrap_PCAComputeVar_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, double _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  double arg4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  cv::PCAComputeVar((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_OutputArray const &)*arg3,arg4);
  
}


void _wrap_PCAProject_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::_OutputArray *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  cv::_OutputArray *arg4 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = *(cv::_OutputArray **)&_swig_go_3; 
  
  cv::PCAProject((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_InputArray const &)*arg3,(cv::_OutputArray const &)*arg4);
  
}


void _wrap_PCABackProject_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::_OutputArray *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  cv::_OutputArray *arg4 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = *(cv::_OutputArray **)&_swig_go_3; 
  
  cv::PCABackProject((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_InputArray const &)*arg3,(cv::_OutputArray const &)*arg4);
  
}


intgo _wrap_MODIFY_A_SVD_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::SVD::MODIFY_A;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_NO_UV_SVD_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::SVD::NO_UV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_FULL_UV_SVD_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::SVD::FULL_UV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


cv::SVD *_wrap_new_SVD__SWIG_0_cv_dbcbba478e71899d() {
  cv::SVD *result = 0 ;
  cv::SVD *_swig_go_result;
  
  
  result = (cv::SVD *)new cv::SVD();
  *(cv::SVD **)&_swig_go_result = (cv::SVD *)result; 
  return _swig_go_result;
}


cv::SVD *_wrap_new_SVD__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, intgo _swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  int arg2 ;
  cv::SVD *result = 0 ;
  cv::SVD *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (cv::SVD *)new cv::SVD((cv::_InputArray const &)*arg1,arg2);
  *(cv::SVD **)&_swig_go_result = (cv::SVD *)result; 
  return _swig_go_result;
}


cv::SVD *_wrap_new_SVD__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0) {
  cv::_InputArray *arg1 = 0 ;
  cv::SVD *result = 0 ;
  cv::SVD *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  result = (cv::SVD *)new cv::SVD((cv::_InputArray const &)*arg1);
  *(cv::SVD **)&_swig_go_result = (cv::SVD *)result; 
  return _swig_go_result;
}


void _wrap_SVD_compute__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, cv::_OutputArray *_swig_go_3, intgo _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  cv::_OutputArray *arg4 = 0 ;
  int arg5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = *(cv::_OutputArray **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::SVD::compute((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_OutputArray const &)*arg3,(cv::_OutputArray const &)*arg4,arg5);
  
}


void _wrap_SVD_compute__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, cv::_OutputArray *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  cv::_OutputArray *arg4 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = *(cv::_OutputArray **)&_swig_go_3; 
  
  cv::SVD::compute((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_OutputArray const &)*arg3,(cv::_OutputArray const &)*arg4);
  
}


void _wrap_SVD_compute__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  cv::SVD::compute((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3);
  
}


void _wrap_SVD_compute__SWIG_3_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  cv::SVD::compute((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2);
  
}


void _wrap_SVD_backSubst__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::_InputArray *_swig_go_3, cv::_OutputArray *_swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  cv::_InputArray *arg4 = 0 ;
  cv::_OutputArray *arg5 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  arg5 = *(cv::_OutputArray **)&_swig_go_4; 
  
  cv::SVD::backSubst((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_InputArray const &)*arg3,(cv::_InputArray const &)*arg4,(cv::_OutputArray const &)*arg5);
  
}


void _wrap_SVD_solveZ_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  cv::SVD::solveZ((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2);
  
}


void _wrap_SVD_backSubst__SWIG_2_cv_dbcbba478e71899d(cv::SVD *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2) {
  cv::SVD *arg1 = (cv::SVD *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  
  arg1 = *(cv::SVD **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  ((cv::SVD const *)arg1)->backSubst((cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3);
  
}


void _wrap_SVD_u_set_cv_dbcbba478e71899d(cv::SVD *_swig_go_0, cv::Mat *_swig_go_1) {
  cv::SVD *arg1 = (cv::SVD *) 0 ;
  cv::Mat *arg2 = (cv::Mat *) 0 ;
  
  arg1 = *(cv::SVD **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  
  if (arg1) (arg1)->u = *arg2;
  
}


cv::Mat *_wrap_SVD_u_get_cv_dbcbba478e71899d(cv::SVD *_swig_go_0) {
  cv::SVD *arg1 = (cv::SVD *) 0 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::SVD **)&_swig_go_0; 
  
  result = (cv::Mat *)& ((arg1)->u);
  *(cv::Mat **)&_swig_go_result = (cv::Mat *)result; 
  return _swig_go_result;
}


void _wrap_SVD_w_set_cv_dbcbba478e71899d(cv::SVD *_swig_go_0, cv::Mat *_swig_go_1) {
  cv::SVD *arg1 = (cv::SVD *) 0 ;
  cv::Mat *arg2 = (cv::Mat *) 0 ;
  
  arg1 = *(cv::SVD **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  
  if (arg1) (arg1)->w = *arg2;
  
}


cv::Mat *_wrap_SVD_w_get_cv_dbcbba478e71899d(cv::SVD *_swig_go_0) {
  cv::SVD *arg1 = (cv::SVD *) 0 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::SVD **)&_swig_go_0; 
  
  result = (cv::Mat *)& ((arg1)->w);
  *(cv::Mat **)&_swig_go_result = (cv::Mat *)result; 
  return _swig_go_result;
}


void _wrap_SVD_vt_set_cv_dbcbba478e71899d(cv::SVD *_swig_go_0, cv::Mat *_swig_go_1) {
  cv::SVD *arg1 = (cv::SVD *) 0 ;
  cv::Mat *arg2 = (cv::Mat *) 0 ;
  
  arg1 = *(cv::SVD **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  
  if (arg1) (arg1)->vt = *arg2;
  
}


cv::Mat *_wrap_SVD_vt_get_cv_dbcbba478e71899d(cv::SVD *_swig_go_0) {
  cv::SVD *arg1 = (cv::SVD *) 0 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::SVD **)&_swig_go_0; 
  
  result = (cv::Mat *)& ((arg1)->vt);
  *(cv::Mat **)&_swig_go_result = (cv::Mat *)result; 
  return _swig_go_result;
}


void _wrap_delete_SVD_cv_dbcbba478e71899d(cv::SVD *_swig_go_0) {
  cv::SVD *arg1 = (cv::SVD *) 0 ;
  
  arg1 = *(cv::SVD **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_SVDecomp__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, cv::_OutputArray *_swig_go_3, intgo _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  cv::_OutputArray *arg4 = 0 ;
  int arg5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = *(cv::_OutputArray **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::SVDecomp((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_OutputArray const &)*arg3,(cv::_OutputArray const &)*arg4,arg5);
  
}


void _wrap_SVDecomp__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, cv::_OutputArray *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  cv::_OutputArray *arg4 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = *(cv::_OutputArray **)&_swig_go_3; 
  
  cv::SVDecomp((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_OutputArray const &)*arg3,(cv::_OutputArray const &)*arg4);
  
}


void _wrap_SVBackSubst_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::_InputArray *_swig_go_3, cv::_OutputArray *_swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  cv::_InputArray *arg4 = 0 ;
  cv::_OutputArray *arg5 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  arg5 = *(cv::_OutputArray **)&_swig_go_4; 
  
  cv::SVBackSubst((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_InputArray const &)*arg3,(cv::_InputArray const &)*arg4,(cv::_OutputArray const &)*arg5);
  
}


double _wrap_Mahalanobis_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_InputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  result = (double)cv::Mahalanobis((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_InputArray const &)*arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_Mahalonobis_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_InputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  result = (double)cv::Mahalonobis((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_InputArray const &)*arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_dft__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  cv::dft((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4);
  
}


void _wrap_dft__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  cv::dft((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3);
  
}


void _wrap_dft__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  cv::dft((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2);
  
}


void _wrap_idft__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  cv::idft((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4);
  
}


void _wrap_idft__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  cv::idft((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3);
  
}


void _wrap_idft__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  cv::idft((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2);
  
}


void _wrap_dct__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  cv::dct((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3);
  
}


void _wrap_dct__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  cv::dct((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2);
  
}


void _wrap_idct__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  cv::idct((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3);
  
}


void _wrap_idct__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  cv::idct((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2);
  
}


void _wrap_mulSpectrums__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  cv::mulSpectrums((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,arg4,arg5);
  
}


void _wrap_mulSpectrums__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, intgo _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  int arg4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  cv::mulSpectrums((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,arg4);
  
}


intgo _wrap_getOptimalDFTSize_cv_dbcbba478e71899d(intgo _swig_go_0) {
  int arg1 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (int)cv::getOptimalDFTSize(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_KMEANS_RANDOM_CENTERS_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::KMEANS_RANDOM_CENTERS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_KMEANS_PP_CENTERS_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::KMEANS_PP_CENTERS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_KMEANS_USE_INITIAL_LABELS_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::KMEANS_USE_INITIAL_LABELS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


double _wrap_kmeans__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, intgo _swig_go_1, cv::_OutputArray *_swig_go_2, cv::TermCriteria *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5, cv::_OutputArray *_swig_go_6) {
  cv::_InputArray *arg1 = 0 ;
  int arg2 ;
  cv::_OutputArray *arg3 = 0 ;
  cv::TermCriteria arg4 ;
  int arg5 ;
  int arg6 ;
  cv::_OutputArray *arg7 = 0 ;
  cv::TermCriteria *argp4 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  argp4 = (cv::TermCriteria *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::TermCriteria");
  }
  arg4 = (cv::TermCriteria)*argp4;
  
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = *(cv::_OutputArray **)&_swig_go_6; 
  
  result = (double)cv::kmeans((cv::_InputArray const &)*arg1,arg2,(cv::_OutputArray const &)*arg3,arg4,arg5,arg6,(cv::_OutputArray const &)*arg7);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_kmeans__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, intgo _swig_go_1, cv::_OutputArray *_swig_go_2, cv::TermCriteria *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  int arg2 ;
  cv::_OutputArray *arg3 = 0 ;
  cv::TermCriteria arg4 ;
  int arg5 ;
  int arg6 ;
  cv::TermCriteria *argp4 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  argp4 = (cv::TermCriteria *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::TermCriteria");
  }
  arg4 = (cv::TermCriteria)*argp4;
  
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  result = (double)cv::kmeans((cv::_InputArray const &)*arg1,arg2,(cv::_OutputArray const &)*arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


cv::RNG *_wrap_theRNG_cv_dbcbba478e71899d() {
  cv::RNG *result = 0 ;
  cv::RNG *_swig_go_result;
  
  
  result = (cv::RNG *) &cv::theRNG();
  *(cv::RNG **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_randu_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_InputArray *_swig_go_2) {
  cv::_OutputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  cv::randu((cv::_OutputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_InputArray const &)*arg3);
  
}


void _wrap_randn_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_InputArray *_swig_go_2) {
  cv::_OutputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  cv::randn((cv::_OutputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_InputArray const &)*arg3);
  
}


void _wrap_randShuffle__SWIG_0_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, double _swig_go_1, cv::RNG *_swig_go_2) {
  cv::_OutputArray *arg1 = 0 ;
  double arg2 ;
  cv::RNG *arg3 = (cv::RNG *) 0 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = *(cv::RNG **)&_swig_go_2; 
  
  cv::randShuffle((cv::_OutputArray const &)*arg1,arg2,arg3);
  
}


void _wrap_randShuffle__SWIG_1_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, double _swig_go_1) {
  cv::_OutputArray *arg1 = 0 ;
  double arg2 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  cv::randShuffle((cv::_OutputArray const &)*arg1,arg2);
  
}


void _wrap_randShuffle__SWIG_2_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0) {
  cv::_OutputArray *arg1 = 0 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  cv::randShuffle((cv::_OutputArray const &)*arg1);
  
}


void _wrap_randShuffle___SWIG_0_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, double _swig_go_1) {
  cv::_OutputArray *arg1 = 0 ;
  double arg2 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  cv::randShuffle_((cv::_OutputArray const &)*arg1,arg2);
  
}


void _wrap_randShuffle___SWIG_1_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0) {
  cv::_OutputArray *arg1 = 0 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  cv::randShuffle_((cv::_OutputArray const &)*arg1);
  
}


void _wrap_line__SWIG_0_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Point_< int > *_swig_go_1, cv::Point_< int > *_swig_go_2, cv::Scalar_< double > *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5, intgo _swig_go_6) {
  cv::Mat *arg1 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg2 ;
  SwigValueWrapper< cv::Point_< int > > arg3 ;
  cv::Scalar *arg4 = 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  cv::Point *argp2 ;
  cv::Point *argp3 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  argp2 = (cv::Point *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg2 = (cv::Point)*argp2;
  
  
  argp3 = (cv::Point *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg3 = (cv::Point)*argp3;
  
  arg4 = *(cv::Scalar **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  
  cv::line(*arg1,arg2,arg3,(cv::Scalar_< double > const &)*arg4,arg5,arg6,arg7);
  
}


void _wrap_line__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Point_< int > *_swig_go_1, cv::Point_< int > *_swig_go_2, cv::Scalar_< double > *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5) {
  cv::Mat *arg1 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg2 ;
  SwigValueWrapper< cv::Point_< int > > arg3 ;
  cv::Scalar *arg4 = 0 ;
  int arg5 ;
  int arg6 ;
  cv::Point *argp2 ;
  cv::Point *argp3 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  argp2 = (cv::Point *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg2 = (cv::Point)*argp2;
  
  
  argp3 = (cv::Point *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg3 = (cv::Point)*argp3;
  
  arg4 = *(cv::Scalar **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  cv::line(*arg1,arg2,arg3,(cv::Scalar_< double > const &)*arg4,arg5,arg6);
  
}


void _wrap_line__SWIG_2_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Point_< int > *_swig_go_1, cv::Point_< int > *_swig_go_2, cv::Scalar_< double > *_swig_go_3, intgo _swig_go_4) {
  cv::Mat *arg1 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg2 ;
  SwigValueWrapper< cv::Point_< int > > arg3 ;
  cv::Scalar *arg4 = 0 ;
  int arg5 ;
  cv::Point *argp2 ;
  cv::Point *argp3 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  argp2 = (cv::Point *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg2 = (cv::Point)*argp2;
  
  
  argp3 = (cv::Point *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg3 = (cv::Point)*argp3;
  
  arg4 = *(cv::Scalar **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::line(*arg1,arg2,arg3,(cv::Scalar_< double > const &)*arg4,arg5);
  
}


void _wrap_line__SWIG_3_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Point_< int > *_swig_go_1, cv::Point_< int > *_swig_go_2, cv::Scalar_< double > *_swig_go_3) {
  cv::Mat *arg1 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg2 ;
  SwigValueWrapper< cv::Point_< int > > arg3 ;
  cv::Scalar *arg4 = 0 ;
  cv::Point *argp2 ;
  cv::Point *argp3 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  argp2 = (cv::Point *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg2 = (cv::Point)*argp2;
  
  
  argp3 = (cv::Point *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg3 = (cv::Point)*argp3;
  
  arg4 = *(cv::Scalar **)&_swig_go_3; 
  
  cv::line(*arg1,arg2,arg3,(cv::Scalar_< double > const &)*arg4);
  
}


void _wrap_rectangle__SWIG_0_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Point_< int > *_swig_go_1, cv::Point_< int > *_swig_go_2, cv::Scalar_< double > *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5, intgo _swig_go_6) {
  cv::Mat *arg1 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg2 ;
  SwigValueWrapper< cv::Point_< int > > arg3 ;
  cv::Scalar *arg4 = 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  cv::Point *argp2 ;
  cv::Point *argp3 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  argp2 = (cv::Point *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg2 = (cv::Point)*argp2;
  
  
  argp3 = (cv::Point *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg3 = (cv::Point)*argp3;
  
  arg4 = *(cv::Scalar **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  
  cv::rectangle(*arg1,arg2,arg3,(cv::Scalar_< double > const &)*arg4,arg5,arg6,arg7);
  
}


void _wrap_rectangle__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Point_< int > *_swig_go_1, cv::Point_< int > *_swig_go_2, cv::Scalar_< double > *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5) {
  cv::Mat *arg1 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg2 ;
  SwigValueWrapper< cv::Point_< int > > arg3 ;
  cv::Scalar *arg4 = 0 ;
  int arg5 ;
  int arg6 ;
  cv::Point *argp2 ;
  cv::Point *argp3 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  argp2 = (cv::Point *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg2 = (cv::Point)*argp2;
  
  
  argp3 = (cv::Point *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg3 = (cv::Point)*argp3;
  
  arg4 = *(cv::Scalar **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  cv::rectangle(*arg1,arg2,arg3,(cv::Scalar_< double > const &)*arg4,arg5,arg6);
  
}


void _wrap_rectangle__SWIG_2_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Point_< int > *_swig_go_1, cv::Point_< int > *_swig_go_2, cv::Scalar_< double > *_swig_go_3, intgo _swig_go_4) {
  cv::Mat *arg1 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg2 ;
  SwigValueWrapper< cv::Point_< int > > arg3 ;
  cv::Scalar *arg4 = 0 ;
  int arg5 ;
  cv::Point *argp2 ;
  cv::Point *argp3 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  argp2 = (cv::Point *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg2 = (cv::Point)*argp2;
  
  
  argp3 = (cv::Point *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg3 = (cv::Point)*argp3;
  
  arg4 = *(cv::Scalar **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::rectangle(*arg1,arg2,arg3,(cv::Scalar_< double > const &)*arg4,arg5);
  
}


void _wrap_rectangle__SWIG_3_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Point_< int > *_swig_go_1, cv::Point_< int > *_swig_go_2, cv::Scalar_< double > *_swig_go_3) {
  cv::Mat *arg1 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg2 ;
  SwigValueWrapper< cv::Point_< int > > arg3 ;
  cv::Scalar *arg4 = 0 ;
  cv::Point *argp2 ;
  cv::Point *argp3 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  argp2 = (cv::Point *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg2 = (cv::Point)*argp2;
  
  
  argp3 = (cv::Point *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg3 = (cv::Point)*argp3;
  
  arg4 = *(cv::Scalar **)&_swig_go_3; 
  
  cv::rectangle(*arg1,arg2,arg3,(cv::Scalar_< double > const &)*arg4);
  
}


void _wrap_rectangle__SWIG_4_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Rect_< int > *_swig_go_1, cv::Scalar_< double > *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4, intgo _swig_go_5) {
  cv::Mat *arg1 = 0 ;
  SwigValueWrapper< cv::Rect_< int > > arg2 ;
  cv::Scalar *arg3 = 0 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  cv::Rect *argp2 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  argp2 = (cv::Rect *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Rect");
  }
  arg2 = (cv::Rect)*argp2;
  
  arg3 = *(cv::Scalar **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  cv::rectangle(*arg1,arg2,(cv::Scalar_< double > const &)*arg3,arg4,arg5,arg6);
  
}


void _wrap_rectangle__SWIG_5_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Rect_< int > *_swig_go_1, cv::Scalar_< double > *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  cv::Mat *arg1 = 0 ;
  SwigValueWrapper< cv::Rect_< int > > arg2 ;
  cv::Scalar *arg3 = 0 ;
  int arg4 ;
  int arg5 ;
  cv::Rect *argp2 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  argp2 = (cv::Rect *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Rect");
  }
  arg2 = (cv::Rect)*argp2;
  
  arg3 = *(cv::Scalar **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::rectangle(*arg1,arg2,(cv::Scalar_< double > const &)*arg3,arg4,arg5);
  
}


void _wrap_rectangle__SWIG_6_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Rect_< int > *_swig_go_1, cv::Scalar_< double > *_swig_go_2, intgo _swig_go_3) {
  cv::Mat *arg1 = 0 ;
  SwigValueWrapper< cv::Rect_< int > > arg2 ;
  cv::Scalar *arg3 = 0 ;
  int arg4 ;
  cv::Rect *argp2 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  argp2 = (cv::Rect *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Rect");
  }
  arg2 = (cv::Rect)*argp2;
  
  arg3 = *(cv::Scalar **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  cv::rectangle(*arg1,arg2,(cv::Scalar_< double > const &)*arg3,arg4);
  
}


void _wrap_rectangle__SWIG_7_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Rect_< int > *_swig_go_1, cv::Scalar_< double > *_swig_go_2) {
  cv::Mat *arg1 = 0 ;
  SwigValueWrapper< cv::Rect_< int > > arg2 ;
  cv::Scalar *arg3 = 0 ;
  cv::Rect *argp2 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  argp2 = (cv::Rect *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Rect");
  }
  arg2 = (cv::Rect)*argp2;
  
  arg3 = *(cv::Scalar **)&_swig_go_2; 
  
  cv::rectangle(*arg1,arg2,(cv::Scalar_< double > const &)*arg3);
  
}


void _wrap_circle__SWIG_0_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Point_< int > *_swig_go_1, intgo _swig_go_2, cv::Scalar_< double > *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5, intgo _swig_go_6) {
  cv::Mat *arg1 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg2 ;
  int arg3 ;
  cv::Scalar *arg4 = 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  cv::Point *argp2 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  argp2 = (cv::Point *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg2 = (cv::Point)*argp2;
  
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::Scalar **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  
  cv::circle(*arg1,arg2,arg3,(cv::Scalar_< double > const &)*arg4,arg5,arg6,arg7);
  
}


void _wrap_circle__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Point_< int > *_swig_go_1, intgo _swig_go_2, cv::Scalar_< double > *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5) {
  cv::Mat *arg1 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg2 ;
  int arg3 ;
  cv::Scalar *arg4 = 0 ;
  int arg5 ;
  int arg6 ;
  cv::Point *argp2 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  argp2 = (cv::Point *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg2 = (cv::Point)*argp2;
  
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::Scalar **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  cv::circle(*arg1,arg2,arg3,(cv::Scalar_< double > const &)*arg4,arg5,arg6);
  
}


void _wrap_circle__SWIG_2_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Point_< int > *_swig_go_1, intgo _swig_go_2, cv::Scalar_< double > *_swig_go_3, intgo _swig_go_4) {
  cv::Mat *arg1 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg2 ;
  int arg3 ;
  cv::Scalar *arg4 = 0 ;
  int arg5 ;
  cv::Point *argp2 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  argp2 = (cv::Point *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg2 = (cv::Point)*argp2;
  
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::Scalar **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::circle(*arg1,arg2,arg3,(cv::Scalar_< double > const &)*arg4,arg5);
  
}


void _wrap_circle__SWIG_3_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Point_< int > *_swig_go_1, intgo _swig_go_2, cv::Scalar_< double > *_swig_go_3) {
  cv::Mat *arg1 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg2 ;
  int arg3 ;
  cv::Scalar *arg4 = 0 ;
  cv::Point *argp2 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  argp2 = (cv::Point *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg2 = (cv::Point)*argp2;
  
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::Scalar **)&_swig_go_3; 
  
  cv::circle(*arg1,arg2,arg3,(cv::Scalar_< double > const &)*arg4);
  
}


void _wrap_ellipse__SWIG_0_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Point_< int > *_swig_go_1, cv::Size_< int > *_swig_go_2, double _swig_go_3, double _swig_go_4, double _swig_go_5, cv::Scalar_< double > *_swig_go_6, intgo _swig_go_7, intgo _swig_go_8, intgo _swig_go_9) {
  cv::Mat *arg1 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg2 ;
  SwigValueWrapper< cv::Size_< int > > arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  cv::Scalar *arg7 = 0 ;
  int arg8 ;
  int arg9 ;
  int arg10 ;
  cv::Point *argp2 ;
  cv::Size *argp3 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  argp2 = (cv::Point *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg2 = (cv::Point)*argp2;
  
  
  argp3 = (cv::Size *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg3 = (cv::Size)*argp3;
  
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  arg7 = *(cv::Scalar **)&_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  arg9 = (int)_swig_go_8; 
  arg10 = (int)_swig_go_9; 
  
  cv::ellipse(*arg1,arg2,arg3,arg4,arg5,arg6,(cv::Scalar_< double > const &)*arg7,arg8,arg9,arg10);
  
}


void _wrap_ellipse__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Point_< int > *_swig_go_1, cv::Size_< int > *_swig_go_2, double _swig_go_3, double _swig_go_4, double _swig_go_5, cv::Scalar_< double > *_swig_go_6, intgo _swig_go_7, intgo _swig_go_8) {
  cv::Mat *arg1 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg2 ;
  SwigValueWrapper< cv::Size_< int > > arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  cv::Scalar *arg7 = 0 ;
  int arg8 ;
  int arg9 ;
  cv::Point *argp2 ;
  cv::Size *argp3 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  argp2 = (cv::Point *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg2 = (cv::Point)*argp2;
  
  
  argp3 = (cv::Size *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg3 = (cv::Size)*argp3;
  
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  arg7 = *(cv::Scalar **)&_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  arg9 = (int)_swig_go_8; 
  
  cv::ellipse(*arg1,arg2,arg3,arg4,arg5,arg6,(cv::Scalar_< double > const &)*arg7,arg8,arg9);
  
}


void _wrap_ellipse__SWIG_2_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Point_< int > *_swig_go_1, cv::Size_< int > *_swig_go_2, double _swig_go_3, double _swig_go_4, double _swig_go_5, cv::Scalar_< double > *_swig_go_6, intgo _swig_go_7) {
  cv::Mat *arg1 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg2 ;
  SwigValueWrapper< cv::Size_< int > > arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  cv::Scalar *arg7 = 0 ;
  int arg8 ;
  cv::Point *argp2 ;
  cv::Size *argp3 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  argp2 = (cv::Point *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg2 = (cv::Point)*argp2;
  
  
  argp3 = (cv::Size *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg3 = (cv::Size)*argp3;
  
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  arg7 = *(cv::Scalar **)&_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  
  cv::ellipse(*arg1,arg2,arg3,arg4,arg5,arg6,(cv::Scalar_< double > const &)*arg7,arg8);
  
}


void _wrap_ellipse__SWIG_3_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Point_< int > *_swig_go_1, cv::Size_< int > *_swig_go_2, double _swig_go_3, double _swig_go_4, double _swig_go_5, cv::Scalar_< double > *_swig_go_6) {
  cv::Mat *arg1 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg2 ;
  SwigValueWrapper< cv::Size_< int > > arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  cv::Scalar *arg7 = 0 ;
  cv::Point *argp2 ;
  cv::Size *argp3 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  argp2 = (cv::Point *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg2 = (cv::Point)*argp2;
  
  
  argp3 = (cv::Size *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg3 = (cv::Size)*argp3;
  
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  arg7 = *(cv::Scalar **)&_swig_go_6; 
  
  cv::ellipse(*arg1,arg2,arg3,arg4,arg5,arg6,(cv::Scalar_< double > const &)*arg7);
  
}


void _wrap_ellipse__SWIG_4_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::RotatedRect *_swig_go_1, cv::Scalar_< double > *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  cv::Mat *arg1 = 0 ;
  cv::RotatedRect *arg2 = 0 ;
  cv::Scalar *arg3 = 0 ;
  int arg4 ;
  int arg5 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::RotatedRect **)&_swig_go_1; 
  arg3 = *(cv::Scalar **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::ellipse(*arg1,(cv::RotatedRect const &)*arg2,(cv::Scalar_< double > const &)*arg3,arg4,arg5);
  
}


void _wrap_ellipse__SWIG_5_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::RotatedRect *_swig_go_1, cv::Scalar_< double > *_swig_go_2, intgo _swig_go_3) {
  cv::Mat *arg1 = 0 ;
  cv::RotatedRect *arg2 = 0 ;
  cv::Scalar *arg3 = 0 ;
  int arg4 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::RotatedRect **)&_swig_go_1; 
  arg3 = *(cv::Scalar **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  cv::ellipse(*arg1,(cv::RotatedRect const &)*arg2,(cv::Scalar_< double > const &)*arg3,arg4);
  
}


void _wrap_ellipse__SWIG_6_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::RotatedRect *_swig_go_1, cv::Scalar_< double > *_swig_go_2) {
  cv::Mat *arg1 = 0 ;
  cv::RotatedRect *arg2 = 0 ;
  cv::Scalar *arg3 = 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::RotatedRect **)&_swig_go_1; 
  arg3 = *(cv::Scalar **)&_swig_go_2; 
  
  cv::ellipse(*arg1,(cv::RotatedRect const &)*arg2,(cv::Scalar_< double > const &)*arg3);
  
}


void _wrap_fillConvexPoly__SWIG_0_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Point_< int > *_swig_go_1, intgo _swig_go_2, cv::Scalar_< double > *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5) {
  cv::Mat *arg1 = 0 ;
  cv::Point *arg2 = (cv::Point *) 0 ;
  int arg3 ;
  cv::Scalar *arg4 = 0 ;
  int arg5 ;
  int arg6 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::Point **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::Scalar **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  cv::fillConvexPoly(*arg1,(cv::Point_< int > const *)arg2,arg3,(cv::Scalar_< double > const &)*arg4,arg5,arg6);
  
}


void _wrap_fillConvexPoly__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Point_< int > *_swig_go_1, intgo _swig_go_2, cv::Scalar_< double > *_swig_go_3, intgo _swig_go_4) {
  cv::Mat *arg1 = 0 ;
  cv::Point *arg2 = (cv::Point *) 0 ;
  int arg3 ;
  cv::Scalar *arg4 = 0 ;
  int arg5 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::Point **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::Scalar **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::fillConvexPoly(*arg1,(cv::Point_< int > const *)arg2,arg3,(cv::Scalar_< double > const &)*arg4,arg5);
  
}


void _wrap_fillConvexPoly__SWIG_2_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Point_< int > *_swig_go_1, intgo _swig_go_2, cv::Scalar_< double > *_swig_go_3) {
  cv::Mat *arg1 = 0 ;
  cv::Point *arg2 = (cv::Point *) 0 ;
  int arg3 ;
  cv::Scalar *arg4 = 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::Point **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::Scalar **)&_swig_go_3; 
  
  cv::fillConvexPoly(*arg1,(cv::Point_< int > const *)arg2,arg3,(cv::Scalar_< double > const &)*arg4);
  
}


void _wrap_fillConvexPoly__SWIG_3_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::Scalar_< double > *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  cv::_OutputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::Scalar *arg3 = 0 ;
  int arg4 ;
  int arg5 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::Scalar **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::fillConvexPoly((cv::_OutputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::Scalar_< double > const &)*arg3,arg4,arg5);
  
}


void _wrap_fillConvexPoly__SWIG_4_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::Scalar_< double > *_swig_go_2, intgo _swig_go_3) {
  cv::_OutputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::Scalar *arg3 = 0 ;
  int arg4 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::Scalar **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  cv::fillConvexPoly((cv::_OutputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::Scalar_< double > const &)*arg3,arg4);
  
}


void _wrap_fillConvexPoly__SWIG_5_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::Scalar_< double > *_swig_go_2) {
  cv::_OutputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::Scalar *arg3 = 0 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::Scalar **)&_swig_go_2; 
  
  cv::fillConvexPoly((cv::_OutputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::Scalar_< double > const &)*arg3);
  
}


void _wrap_fillPoly__SWIG_0_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Point_< int > **_swig_go_1, intgo *_swig_go_2, intgo _swig_go_3, cv::Scalar_< double > *_swig_go_4, intgo _swig_go_5, intgo _swig_go_6, cv::Point_< int > *_swig_go_7) {
  cv::Mat *arg1 = 0 ;
  cv::Point **arg2 = (cv::Point **) 0 ;
  int *arg3 = (int *) 0 ;
  int arg4 ;
  cv::Scalar *arg5 = 0 ;
  int arg6 ;
  int arg7 ;
  SwigValueWrapper< cv::Point_< int > > arg8 ;
  cv::Point *argp8 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::Point ***)&_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(cv::Scalar **)&_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  
  argp8 = (cv::Point *)_swig_go_7;
  if (argp8 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg8 = (cv::Point)*argp8;
  
  
  cv::fillPoly(*arg1,(cv::Point_< int > const **)arg2,(int const *)arg3,arg4,(cv::Scalar_< double > const &)*arg5,arg6,arg7,arg8);
  
}


void _wrap_fillPoly__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Point_< int > **_swig_go_1, intgo *_swig_go_2, intgo _swig_go_3, cv::Scalar_< double > *_swig_go_4, intgo _swig_go_5, intgo _swig_go_6) {
  cv::Mat *arg1 = 0 ;
  cv::Point **arg2 = (cv::Point **) 0 ;
  int *arg3 = (int *) 0 ;
  int arg4 ;
  cv::Scalar *arg5 = 0 ;
  int arg6 ;
  int arg7 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::Point ***)&_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(cv::Scalar **)&_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  
  cv::fillPoly(*arg1,(cv::Point_< int > const **)arg2,(int const *)arg3,arg4,(cv::Scalar_< double > const &)*arg5,arg6,arg7);
  
}


void _wrap_fillPoly__SWIG_2_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Point_< int > **_swig_go_1, intgo *_swig_go_2, intgo _swig_go_3, cv::Scalar_< double > *_swig_go_4, intgo _swig_go_5) {
  cv::Mat *arg1 = 0 ;
  cv::Point **arg2 = (cv::Point **) 0 ;
  int *arg3 = (int *) 0 ;
  int arg4 ;
  cv::Scalar *arg5 = 0 ;
  int arg6 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::Point ***)&_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(cv::Scalar **)&_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  cv::fillPoly(*arg1,(cv::Point_< int > const **)arg2,(int const *)arg3,arg4,(cv::Scalar_< double > const &)*arg5,arg6);
  
}


void _wrap_fillPoly__SWIG_3_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Point_< int > **_swig_go_1, intgo *_swig_go_2, intgo _swig_go_3, cv::Scalar_< double > *_swig_go_4) {
  cv::Mat *arg1 = 0 ;
  cv::Point **arg2 = (cv::Point **) 0 ;
  int *arg3 = (int *) 0 ;
  int arg4 ;
  cv::Scalar *arg5 = 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::Point ***)&_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(cv::Scalar **)&_swig_go_4; 
  
  cv::fillPoly(*arg1,(cv::Point_< int > const **)arg2,(int const *)arg3,arg4,(cv::Scalar_< double > const &)*arg5);
  
}


void _wrap_fillPoly__SWIG_4_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::Scalar_< double > *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4, cv::Point_< int > *_swig_go_5) {
  cv::_OutputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::Scalar *arg3 = 0 ;
  int arg4 ;
  int arg5 ;
  SwigValueWrapper< cv::Point_< int > > arg6 ;
  cv::Point *argp6 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::Scalar **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  argp6 = (cv::Point *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg6 = (cv::Point)*argp6;
  
  
  cv::fillPoly((cv::_OutputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::Scalar_< double > const &)*arg3,arg4,arg5,arg6);
  
}


void _wrap_fillPoly__SWIG_5_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::Scalar_< double > *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  cv::_OutputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::Scalar *arg3 = 0 ;
  int arg4 ;
  int arg5 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::Scalar **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::fillPoly((cv::_OutputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::Scalar_< double > const &)*arg3,arg4,arg5);
  
}


void _wrap_fillPoly__SWIG_6_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::Scalar_< double > *_swig_go_2, intgo _swig_go_3) {
  cv::_OutputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::Scalar *arg3 = 0 ;
  int arg4 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::Scalar **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  cv::fillPoly((cv::_OutputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::Scalar_< double > const &)*arg3,arg4);
  
}


void _wrap_fillPoly__SWIG_7_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::Scalar_< double > *_swig_go_2) {
  cv::_OutputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::Scalar *arg3 = 0 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::Scalar **)&_swig_go_2; 
  
  cv::fillPoly((cv::_OutputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::Scalar_< double > const &)*arg3);
  
}


void _wrap_polylines__SWIG_0_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Point_< int > **_swig_go_1, intgo *_swig_go_2, intgo _swig_go_3, bool _swig_go_4, cv::Scalar_< double > *_swig_go_5, intgo _swig_go_6, intgo _swig_go_7, intgo _swig_go_8) {
  cv::Mat *arg1 = 0 ;
  cv::Point **arg2 = (cv::Point **) 0 ;
  int *arg3 = (int *) 0 ;
  int arg4 ;
  bool arg5 ;
  cv::Scalar *arg6 = 0 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::Point ***)&_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(cv::Scalar **)&_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  arg9 = (int)_swig_go_8; 
  
  cv::polylines(*arg1,(cv::Point_< int > const **)arg2,(int const *)arg3,arg4,arg5,(cv::Scalar_< double > const &)*arg6,arg7,arg8,arg9);
  
}


void _wrap_polylines__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Point_< int > **_swig_go_1, intgo *_swig_go_2, intgo _swig_go_3, bool _swig_go_4, cv::Scalar_< double > *_swig_go_5, intgo _swig_go_6, intgo _swig_go_7) {
  cv::Mat *arg1 = 0 ;
  cv::Point **arg2 = (cv::Point **) 0 ;
  int *arg3 = (int *) 0 ;
  int arg4 ;
  bool arg5 ;
  cv::Scalar *arg6 = 0 ;
  int arg7 ;
  int arg8 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::Point ***)&_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(cv::Scalar **)&_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  
  cv::polylines(*arg1,(cv::Point_< int > const **)arg2,(int const *)arg3,arg4,arg5,(cv::Scalar_< double > const &)*arg6,arg7,arg8);
  
}


void _wrap_polylines__SWIG_2_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Point_< int > **_swig_go_1, intgo *_swig_go_2, intgo _swig_go_3, bool _swig_go_4, cv::Scalar_< double > *_swig_go_5, intgo _swig_go_6) {
  cv::Mat *arg1 = 0 ;
  cv::Point **arg2 = (cv::Point **) 0 ;
  int *arg3 = (int *) 0 ;
  int arg4 ;
  bool arg5 ;
  cv::Scalar *arg6 = 0 ;
  int arg7 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::Point ***)&_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(cv::Scalar **)&_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  
  cv::polylines(*arg1,(cv::Point_< int > const **)arg2,(int const *)arg3,arg4,arg5,(cv::Scalar_< double > const &)*arg6,arg7);
  
}


void _wrap_polylines__SWIG_3_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Point_< int > **_swig_go_1, intgo *_swig_go_2, intgo _swig_go_3, bool _swig_go_4, cv::Scalar_< double > *_swig_go_5) {
  cv::Mat *arg1 = 0 ;
  cv::Point **arg2 = (cv::Point **) 0 ;
  int *arg3 = (int *) 0 ;
  int arg4 ;
  bool arg5 ;
  cv::Scalar *arg6 = 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(cv::Point ***)&_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(cv::Scalar **)&_swig_go_5; 
  
  cv::polylines(*arg1,(cv::Point_< int > const **)arg2,(int const *)arg3,arg4,arg5,(cv::Scalar_< double > const &)*arg6);
  
}


void _wrap_polylines__SWIG_4_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::_InputArray *_swig_go_1, bool _swig_go_2, cv::Scalar_< double > *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5, intgo _swig_go_6) {
  cv::_OutputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  bool arg3 ;
  cv::Scalar *arg4 = 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  arg4 = *(cv::Scalar **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  
  cv::polylines((cv::_OutputArray const &)*arg1,(cv::_InputArray const &)*arg2,arg3,(cv::Scalar_< double > const &)*arg4,arg5,arg6,arg7);
  
}


void _wrap_polylines__SWIG_5_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::_InputArray *_swig_go_1, bool _swig_go_2, cv::Scalar_< double > *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5) {
  cv::_OutputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  bool arg3 ;
  cv::Scalar *arg4 = 0 ;
  int arg5 ;
  int arg6 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  arg4 = *(cv::Scalar **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  cv::polylines((cv::_OutputArray const &)*arg1,(cv::_InputArray const &)*arg2,arg3,(cv::Scalar_< double > const &)*arg4,arg5,arg6);
  
}


void _wrap_polylines__SWIG_6_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::_InputArray *_swig_go_1, bool _swig_go_2, cv::Scalar_< double > *_swig_go_3, intgo _swig_go_4) {
  cv::_OutputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  bool arg3 ;
  cv::Scalar *arg4 = 0 ;
  int arg5 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  arg4 = *(cv::Scalar **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::polylines((cv::_OutputArray const &)*arg1,(cv::_InputArray const &)*arg2,arg3,(cv::Scalar_< double > const &)*arg4,arg5);
  
}


void _wrap_polylines__SWIG_7_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::_InputArray *_swig_go_1, bool _swig_go_2, cv::Scalar_< double > *_swig_go_3) {
  cv::_OutputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  bool arg3 ;
  cv::Scalar *arg4 = 0 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  arg4 = *(cv::Scalar **)&_swig_go_3; 
  
  cv::polylines((cv::_OutputArray const &)*arg1,(cv::_InputArray const &)*arg2,arg3,(cv::Scalar_< double > const &)*arg4);
  
}


bool _wrap_clipLine__SWIG_0_cv_dbcbba478e71899d(cv::Size_< int > *_swig_go_0, cv::Point_< int > *_swig_go_1, cv::Point_< int > *_swig_go_2) {
  SwigValueWrapper< cv::Size_< int > > arg1 ;
  cv::Point *arg2 = 0 ;
  cv::Point *arg3 = 0 ;
  cv::Size *argp1 ;
  bool result;
  bool _swig_go_result;
  
  
  argp1 = (cv::Size *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg1 = (cv::Size)*argp1;
  
  arg2 = *(cv::Point **)&_swig_go_1; 
  arg3 = *(cv::Point **)&_swig_go_2; 
  
  result = (bool)cv::clipLine(arg1,*arg2,*arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_clipLine__SWIG_1_cv_dbcbba478e71899d(cv::Rect_< int > *_swig_go_0, cv::Point_< int > *_swig_go_1, cv::Point_< int > *_swig_go_2) {
  SwigValueWrapper< cv::Rect_< int > > arg1 ;
  cv::Point *arg2 = 0 ;
  cv::Point *arg3 = 0 ;
  cv::Rect *argp1 ;
  bool result;
  bool _swig_go_result;
  
  
  argp1 = (cv::Rect *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Rect");
  }
  arg1 = (cv::Rect)*argp1;
  
  arg2 = *(cv::Point **)&_swig_go_1; 
  arg3 = *(cv::Point **)&_swig_go_2; 
  
  result = (bool)cv::clipLine(arg1,*arg2,*arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


cv::LineIterator *_wrap_new_LineIterator__SWIG_0_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Point_< int > *_swig_go_1, cv::Point_< int > *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  cv::Mat *arg1 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg2 ;
  SwigValueWrapper< cv::Point_< int > > arg3 ;
  int arg4 ;
  bool arg5 ;
  cv::Point *argp2 ;
  cv::Point *argp3 ;
  cv::LineIterator *result = 0 ;
  cv::LineIterator *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  argp2 = (cv::Point *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg2 = (cv::Point)*argp2;
  
  
  argp3 = (cv::Point *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg3 = (cv::Point)*argp3;
  
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  result = (cv::LineIterator *)new cv::LineIterator((cv::Mat const &)*arg1,arg2,arg3,arg4,arg5);
  *(cv::LineIterator **)&_swig_go_result = (cv::LineIterator *)result; 
  return _swig_go_result;
}


cv::LineIterator *_wrap_new_LineIterator__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Point_< int > *_swig_go_1, cv::Point_< int > *_swig_go_2, intgo _swig_go_3) {
  cv::Mat *arg1 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg2 ;
  SwigValueWrapper< cv::Point_< int > > arg3 ;
  int arg4 ;
  cv::Point *argp2 ;
  cv::Point *argp3 ;
  cv::LineIterator *result = 0 ;
  cv::LineIterator *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  argp2 = (cv::Point *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg2 = (cv::Point)*argp2;
  
  
  argp3 = (cv::Point *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg3 = (cv::Point)*argp3;
  
  arg4 = (int)_swig_go_3; 
  
  result = (cv::LineIterator *)new cv::LineIterator((cv::Mat const &)*arg1,arg2,arg3,arg4);
  *(cv::LineIterator **)&_swig_go_result = (cv::LineIterator *)result; 
  return _swig_go_result;
}


cv::LineIterator *_wrap_new_LineIterator__SWIG_2_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Point_< int > *_swig_go_1, cv::Point_< int > *_swig_go_2) {
  cv::Mat *arg1 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg2 ;
  SwigValueWrapper< cv::Point_< int > > arg3 ;
  cv::Point *argp2 ;
  cv::Point *argp3 ;
  cv::LineIterator *result = 0 ;
  cv::LineIterator *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  argp2 = (cv::Point *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg2 = (cv::Point)*argp2;
  
  
  argp3 = (cv::Point *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg3 = (cv::Point)*argp3;
  
  
  result = (cv::LineIterator *)new cv::LineIterator((cv::Mat const &)*arg1,arg2,arg3);
  *(cv::LineIterator **)&_swig_go_result = (cv::LineIterator *)result; 
  return _swig_go_result;
}


_gostring_ _wrap_LineIterator___ref___cv_dbcbba478e71899d(cv::LineIterator *_swig_go_0) {
  cv::LineIterator *arg1 = (cv::LineIterator *) 0 ;
  uchar *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::LineIterator **)&_swig_go_0; 
  
  result = (uchar *)(arg1)->operator *();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


cv::Point_< int > *_wrap_LineIterator_pos_cv_dbcbba478e71899d(cv::LineIterator *_swig_go_0) {
  cv::LineIterator *arg1 = (cv::LineIterator *) 0 ;
  SwigValueWrapper< cv::Point_< int > > result;
  cv::Point_< int > *_swig_go_result;
  
  arg1 = *(cv::LineIterator **)&_swig_go_0; 
  
  result = ((cv::LineIterator const *)arg1)->pos();
  *(cv::Point **)&_swig_go_result = new cv::Point(result); 
  return _swig_go_result;
}


void _wrap_LineIterator_ptr_set_cv_dbcbba478e71899d(cv::LineIterator *_swig_go_0, _gostring_ _swig_go_1) {
  cv::LineIterator *arg1 = (cv::LineIterator *) 0 ;
  uchar *arg2 = (uchar *) 0 ;
  
  arg1 = *(cv::LineIterator **)&_swig_go_0; 
  arg2 = (uchar *)_swig_go_1.p; 
  
  if (arg1) (arg1)->ptr = arg2;
  
}


_gostring_ _wrap_LineIterator_ptr_get_cv_dbcbba478e71899d(cv::LineIterator *_swig_go_0) {
  cv::LineIterator *arg1 = (cv::LineIterator *) 0 ;
  uchar *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::LineIterator **)&_swig_go_0; 
  
  result = (uchar *) ((arg1)->ptr);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_LineIterator_ptr0_set_cv_dbcbba478e71899d(cv::LineIterator *_swig_go_0, _gostring_ _swig_go_1) {
  cv::LineIterator *arg1 = (cv::LineIterator *) 0 ;
  uchar *arg2 = (uchar *) 0 ;
  
  arg1 = *(cv::LineIterator **)&_swig_go_0; 
  arg2 = (uchar *)_swig_go_1.p; 
  
  if (arg1) (arg1)->ptr0 = (uchar const *)arg2;
  
}


_gostring_ _wrap_LineIterator_ptr0_get_cv_dbcbba478e71899d(cv::LineIterator *_swig_go_0) {
  cv::LineIterator *arg1 = (cv::LineIterator *) 0 ;
  uchar *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::LineIterator **)&_swig_go_0; 
  
  result = (uchar *) ((arg1)->ptr0);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_LineIterator_step_set_cv_dbcbba478e71899d(cv::LineIterator *_swig_go_0, intgo _swig_go_1) {
  cv::LineIterator *arg1 = (cv::LineIterator *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::LineIterator **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->step = arg2;
  
}


intgo _wrap_LineIterator_step_get_cv_dbcbba478e71899d(cv::LineIterator *_swig_go_0) {
  cv::LineIterator *arg1 = (cv::LineIterator *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::LineIterator **)&_swig_go_0; 
  
  result = (int) ((arg1)->step);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LineIterator_elemSize_set_cv_dbcbba478e71899d(cv::LineIterator *_swig_go_0, intgo _swig_go_1) {
  cv::LineIterator *arg1 = (cv::LineIterator *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::LineIterator **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->elemSize = arg2;
  
}


intgo _wrap_LineIterator_elemSize_get_cv_dbcbba478e71899d(cv::LineIterator *_swig_go_0) {
  cv::LineIterator *arg1 = (cv::LineIterator *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::LineIterator **)&_swig_go_0; 
  
  result = (int) ((arg1)->elemSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LineIterator_err_set_cv_dbcbba478e71899d(cv::LineIterator *_swig_go_0, intgo _swig_go_1) {
  cv::LineIterator *arg1 = (cv::LineIterator *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::LineIterator **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->err = arg2;
  
}


intgo _wrap_LineIterator_err_get_cv_dbcbba478e71899d(cv::LineIterator *_swig_go_0) {
  cv::LineIterator *arg1 = (cv::LineIterator *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::LineIterator **)&_swig_go_0; 
  
  result = (int) ((arg1)->err);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LineIterator_count_set_cv_dbcbba478e71899d(cv::LineIterator *_swig_go_0, intgo _swig_go_1) {
  cv::LineIterator *arg1 = (cv::LineIterator *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::LineIterator **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->count = arg2;
  
}


intgo _wrap_LineIterator_count_get_cv_dbcbba478e71899d(cv::LineIterator *_swig_go_0) {
  cv::LineIterator *arg1 = (cv::LineIterator *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::LineIterator **)&_swig_go_0; 
  
  result = (int) ((arg1)->count);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LineIterator_minusDelta_set_cv_dbcbba478e71899d(cv::LineIterator *_swig_go_0, intgo _swig_go_1) {
  cv::LineIterator *arg1 = (cv::LineIterator *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::LineIterator **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->minusDelta = arg2;
  
}


intgo _wrap_LineIterator_minusDelta_get_cv_dbcbba478e71899d(cv::LineIterator *_swig_go_0) {
  cv::LineIterator *arg1 = (cv::LineIterator *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::LineIterator **)&_swig_go_0; 
  
  result = (int) ((arg1)->minusDelta);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LineIterator_plusDelta_set_cv_dbcbba478e71899d(cv::LineIterator *_swig_go_0, intgo _swig_go_1) {
  cv::LineIterator *arg1 = (cv::LineIterator *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::LineIterator **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->plusDelta = arg2;
  
}


intgo _wrap_LineIterator_plusDelta_get_cv_dbcbba478e71899d(cv::LineIterator *_swig_go_0) {
  cv::LineIterator *arg1 = (cv::LineIterator *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::LineIterator **)&_swig_go_0; 
  
  result = (int) ((arg1)->plusDelta);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LineIterator_minusStep_set_cv_dbcbba478e71899d(cv::LineIterator *_swig_go_0, intgo _swig_go_1) {
  cv::LineIterator *arg1 = (cv::LineIterator *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::LineIterator **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->minusStep = arg2;
  
}


intgo _wrap_LineIterator_minusStep_get_cv_dbcbba478e71899d(cv::LineIterator *_swig_go_0) {
  cv::LineIterator *arg1 = (cv::LineIterator *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::LineIterator **)&_swig_go_0; 
  
  result = (int) ((arg1)->minusStep);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LineIterator_plusStep_set_cv_dbcbba478e71899d(cv::LineIterator *_swig_go_0, intgo _swig_go_1) {
  cv::LineIterator *arg1 = (cv::LineIterator *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::LineIterator **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->plusStep = arg2;
  
}


intgo _wrap_LineIterator_plusStep_get_cv_dbcbba478e71899d(cv::LineIterator *_swig_go_0) {
  cv::LineIterator *arg1 = (cv::LineIterator *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::LineIterator **)&_swig_go_0; 
  
  result = (int) ((arg1)->plusStep);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_LineIterator_cv_dbcbba478e71899d(cv::LineIterator *_swig_go_0) {
  cv::LineIterator *arg1 = (cv::LineIterator *) 0 ;
  
  arg1 = *(cv::LineIterator **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ellipse2Poly_cv_dbcbba478e71899d(cv::Point_< int > *_swig_go_0, cv::Size_< int > *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, intgo _swig_go_5, std::vector< cv::Point_< int > > *_swig_go_6) {
  SwigValueWrapper< cv::Point_< int > > arg1 ;
  SwigValueWrapper< cv::Size_< int > > arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  std::vector< cv::Point > *arg7 = 0 ;
  cv::Point *argp1 ;
  cv::Size *argp2 ;
  
  
  argp1 = (cv::Point *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg1 = (cv::Point)*argp1;
  
  
  argp2 = (cv::Size *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg2 = (cv::Size)*argp2;
  
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = *(std::vector< cv::Point > **)&_swig_go_6; 
  
  cv::ellipse2Poly(arg1,arg2,arg3,arg4,arg5,arg6,*arg7);
  
}


intgo _wrap_FONT_HERSHEY_SIMPLEX_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FONT_HERSHEY_SIMPLEX;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_FONT_HERSHEY_PLAIN_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FONT_HERSHEY_PLAIN;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_FONT_HERSHEY_DUPLEX_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FONT_HERSHEY_DUPLEX;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_FONT_HERSHEY_COMPLEX_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FONT_HERSHEY_COMPLEX;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_FONT_HERSHEY_TRIPLEX_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FONT_HERSHEY_TRIPLEX;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_FONT_HERSHEY_COMPLEX_SMALL_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FONT_HERSHEY_COMPLEX_SMALL;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_FONT_HERSHEY_SCRIPT_SIMPLEX_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FONT_HERSHEY_SCRIPT_SIMPLEX;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_FONT_HERSHEY_SCRIPT_COMPLEX_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FONT_HERSHEY_SCRIPT_COMPLEX;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_FONT_ITALIC_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FONT_ITALIC;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_putText__SWIG_0_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, _gostring_ _swig_go_1, cv::Point_< int > *_swig_go_2, intgo _swig_go_3, double _swig_go_4, cv::Scalar_< double > *_swig_go_5, intgo _swig_go_6, intgo _swig_go_7, bool _swig_go_8) {
  cv::Mat *arg1 = 0 ;
  cv::string *arg2 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg3 ;
  int arg4 ;
  double arg5 ;
  SwigValueWrapper< cv::Scalar_< double > > arg6 ;
  int arg7 ;
  int arg8 ;
  bool arg9 ;
  cv::Point *argp3 ;
  cv::Scalar *argp6 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  cv::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  argp3 = (cv::Point *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg3 = (cv::Point)*argp3;
  
  arg4 = (int)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  argp6 = (cv::Scalar *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Scalar");
  }
  arg6 = (cv::Scalar)*argp6;
  
  arg7 = (int)_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  arg9 = (bool)_swig_go_8; 
  
  cv::putText(*arg1,(std::string const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  
}


void _wrap_putText__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, _gostring_ _swig_go_1, cv::Point_< int > *_swig_go_2, intgo _swig_go_3, double _swig_go_4, cv::Scalar_< double > *_swig_go_5, intgo _swig_go_6, intgo _swig_go_7) {
  cv::Mat *arg1 = 0 ;
  cv::string *arg2 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg3 ;
  int arg4 ;
  double arg5 ;
  SwigValueWrapper< cv::Scalar_< double > > arg6 ;
  int arg7 ;
  int arg8 ;
  cv::Point *argp3 ;
  cv::Scalar *argp6 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  cv::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  argp3 = (cv::Point *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg3 = (cv::Point)*argp3;
  
  arg4 = (int)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  argp6 = (cv::Scalar *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Scalar");
  }
  arg6 = (cv::Scalar)*argp6;
  
  arg7 = (int)_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  
  cv::putText(*arg1,(std::string const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  
}


void _wrap_putText__SWIG_2_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, _gostring_ _swig_go_1, cv::Point_< int > *_swig_go_2, intgo _swig_go_3, double _swig_go_4, cv::Scalar_< double > *_swig_go_5, intgo _swig_go_6) {
  cv::Mat *arg1 = 0 ;
  cv::string *arg2 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg3 ;
  int arg4 ;
  double arg5 ;
  SwigValueWrapper< cv::Scalar_< double > > arg6 ;
  int arg7 ;
  cv::Point *argp3 ;
  cv::Scalar *argp6 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  cv::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  argp3 = (cv::Point *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg3 = (cv::Point)*argp3;
  
  arg4 = (int)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  argp6 = (cv::Scalar *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Scalar");
  }
  arg6 = (cv::Scalar)*argp6;
  
  arg7 = (int)_swig_go_6; 
  
  cv::putText(*arg1,(std::string const &)*arg2,arg3,arg4,arg5,arg6,arg7);
  
}


void _wrap_putText__SWIG_3_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, _gostring_ _swig_go_1, cv::Point_< int > *_swig_go_2, intgo _swig_go_3, double _swig_go_4, cv::Scalar_< double > *_swig_go_5) {
  cv::Mat *arg1 = 0 ;
  cv::string *arg2 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg3 ;
  int arg4 ;
  double arg5 ;
  SwigValueWrapper< cv::Scalar_< double > > arg6 ;
  cv::Point *argp3 ;
  cv::Scalar *argp6 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  cv::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  argp3 = (cv::Point *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg3 = (cv::Point)*argp3;
  
  arg4 = (int)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  argp6 = (cv::Scalar *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Scalar");
  }
  arg6 = (cv::Scalar)*argp6;
  
  
  cv::putText(*arg1,(std::string const &)*arg2,arg3,arg4,arg5,arg6);
  
}


cv::Size_< int > *_wrap_getTextSize_cv_dbcbba478e71899d(_gostring_ _swig_go_0, intgo _swig_go_1, double _swig_go_2, intgo _swig_go_3, intgo *_swig_go_4) {
  cv::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  int arg4 ;
  int *arg5 = (int *) 0 ;
  SwigValueWrapper< cv::Size_< int > > result;
  cv::Size_< int > *_swig_go_result;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  arg2 = (int)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(int **)&_swig_go_4; 
  
  result = cv::getTextSize((std::string const &)*arg1,arg2,arg3,arg4,arg5);
  *(cv::Size **)&_swig_go_result = new cv::Size(result); 
  return _swig_go_result;
}


cv::MatConstIterator *_wrap_new_MatConstIterator__SWIG_0_cv_dbcbba478e71899d() {
  cv::MatConstIterator *result = 0 ;
  cv::MatConstIterator *_swig_go_result;
  
  
  result = (cv::MatConstIterator *)new cv::MatConstIterator();
  *(cv::MatConstIterator **)&_swig_go_result = (cv::MatConstIterator *)result; 
  return _swig_go_result;
}


cv::MatConstIterator *_wrap_new_MatConstIterator__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  cv::MatConstIterator *result = 0 ;
  cv::MatConstIterator *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = (cv::MatConstIterator *)new cv::MatConstIterator((cv::Mat const *)arg1);
  *(cv::MatConstIterator **)&_swig_go_result = (cv::MatConstIterator *)result; 
  return _swig_go_result;
}


cv::MatConstIterator *_wrap_new_MatConstIterator__SWIG_2_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  int arg3 ;
  cv::MatConstIterator *result = 0 ;
  cv::MatConstIterator *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (cv::MatConstIterator *)new cv::MatConstIterator((cv::Mat const *)arg1,arg2,arg3);
  *(cv::MatConstIterator **)&_swig_go_result = (cv::MatConstIterator *)result; 
  return _swig_go_result;
}


cv::MatConstIterator *_wrap_new_MatConstIterator__SWIG_3_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  cv::MatConstIterator *result = 0 ;
  cv::MatConstIterator *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (cv::MatConstIterator *)new cv::MatConstIterator((cv::Mat const *)arg1,arg2);
  *(cv::MatConstIterator **)&_swig_go_result = (cv::MatConstIterator *)result; 
  return _swig_go_result;
}


cv::MatConstIterator *_wrap_new_MatConstIterator__SWIG_4_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Point_< int > *_swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  SwigValueWrapper< cv::Point_< int > > arg2 ;
  cv::Point *argp2 ;
  cv::MatConstIterator *result = 0 ;
  cv::MatConstIterator *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  argp2 = (cv::Point *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg2 = (cv::Point)*argp2;
  
  
  result = (cv::MatConstIterator *)new cv::MatConstIterator((cv::Mat const *)arg1,arg2);
  *(cv::MatConstIterator **)&_swig_go_result = (cv::MatConstIterator *)result; 
  return _swig_go_result;
}


cv::MatConstIterator *_wrap_new_MatConstIterator__SWIG_5_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo *_swig_go_1) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int *arg2 = (int *) 0 ;
  cv::MatConstIterator *result = 0 ;
  cv::MatConstIterator *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  result = (cv::MatConstIterator *)new cv::MatConstIterator((cv::Mat const *)arg1,(int const *)arg2);
  *(cv::MatConstIterator **)&_swig_go_result = (cv::MatConstIterator *)result; 
  return _swig_go_result;
}


cv::MatConstIterator *_wrap_new_MatConstIterator__SWIG_6_cv_dbcbba478e71899d(cv::MatConstIterator *_swig_go_0) {
  cv::MatConstIterator *arg1 = 0 ;
  cv::MatConstIterator *result = 0 ;
  cv::MatConstIterator *_swig_go_result;
  
  arg1 = *(cv::MatConstIterator **)&_swig_go_0; 
  
  result = (cv::MatConstIterator *)new cv::MatConstIterator((cv::MatConstIterator const &)*arg1);
  *(cv::MatConstIterator **)&_swig_go_result = (cv::MatConstIterator *)result; 
  return _swig_go_result;
}


_gostring_ _wrap_MatConstIterator___ref___cv_dbcbba478e71899d(cv::MatConstIterator *_swig_go_0) {
  cv::MatConstIterator *arg1 = (cv::MatConstIterator *) 0 ;
  uchar *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::MatConstIterator **)&_swig_go_0; 
  
  result = (uchar *)((cv::MatConstIterator const *)arg1)->operator *();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


cv::Point_< int > *_wrap_MatConstIterator_pos__SWIG_0_cv_dbcbba478e71899d(cv::MatConstIterator *_swig_go_0) {
  cv::MatConstIterator *arg1 = (cv::MatConstIterator *) 0 ;
  SwigValueWrapper< cv::Point_< int > > result;
  cv::Point_< int > *_swig_go_result;
  
  arg1 = *(cv::MatConstIterator **)&_swig_go_0; 
  
  result = ((cv::MatConstIterator const *)arg1)->pos();
  *(cv::Point **)&_swig_go_result = new cv::Point(result); 
  return _swig_go_result;
}


void _wrap_MatConstIterator_pos__SWIG_1_cv_dbcbba478e71899d(cv::MatConstIterator *_swig_go_0, intgo *_swig_go_1) {
  cv::MatConstIterator *arg1 = (cv::MatConstIterator *) 0 ;
  int *arg2 = (int *) 0 ;
  
  arg1 = *(cv::MatConstIterator **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  ((cv::MatConstIterator const *)arg1)->pos(arg2);
  
}


ptrdiff_t *_wrap_MatConstIterator_lpos_cv_dbcbba478e71899d(cv::MatConstIterator *_swig_go_0) {
  cv::MatConstIterator *arg1 = (cv::MatConstIterator *) 0 ;
  ptrdiff_t result;
  ptrdiff_t *_swig_go_result;
  
  arg1 = *(cv::MatConstIterator **)&_swig_go_0; 
  
  result = ((cv::MatConstIterator const *)arg1)->lpos();
  *(ptrdiff_t **)&_swig_go_result = new ptrdiff_t(result); 
  return _swig_go_result;
}


void _wrap_MatConstIterator_seek__SWIG_0_cv_dbcbba478e71899d(cv::MatConstIterator *_swig_go_0, ptrdiff_t *_swig_go_1, bool _swig_go_2) {
  cv::MatConstIterator *arg1 = (cv::MatConstIterator *) 0 ;
  ptrdiff_t arg2 ;
  bool arg3 ;
  ptrdiff_t *argp2 ;
  
  arg1 = *(cv::MatConstIterator **)&_swig_go_0; 
  
  argp2 = (ptrdiff_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null ptrdiff_t");
  }
  arg2 = (ptrdiff_t)*argp2;
  
  arg3 = (bool)_swig_go_2; 
  
  (arg1)->seek(arg2,arg3);
  
}


void _wrap_MatConstIterator_seek__SWIG_1_cv_dbcbba478e71899d(cv::MatConstIterator *_swig_go_0, ptrdiff_t *_swig_go_1) {
  cv::MatConstIterator *arg1 = (cv::MatConstIterator *) 0 ;
  ptrdiff_t arg2 ;
  ptrdiff_t *argp2 ;
  
  arg1 = *(cv::MatConstIterator **)&_swig_go_0; 
  
  argp2 = (ptrdiff_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null ptrdiff_t");
  }
  arg2 = (ptrdiff_t)*argp2;
  
  
  (arg1)->seek(arg2);
  
}


void _wrap_MatConstIterator_seek__SWIG_2_cv_dbcbba478e71899d(cv::MatConstIterator *_swig_go_0, intgo *_swig_go_1, bool _swig_go_2) {
  cv::MatConstIterator *arg1 = (cv::MatConstIterator *) 0 ;
  int *arg2 = (int *) 0 ;
  bool arg3 ;
  
  arg1 = *(cv::MatConstIterator **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  (arg1)->seek((int const *)arg2,arg3);
  
}


void _wrap_MatConstIterator_seek__SWIG_3_cv_dbcbba478e71899d(cv::MatConstIterator *_swig_go_0, intgo *_swig_go_1) {
  cv::MatConstIterator *arg1 = (cv::MatConstIterator *) 0 ;
  int *arg2 = (int *) 0 ;
  
  arg1 = *(cv::MatConstIterator **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  (arg1)->seek((int const *)arg2);
  
}


void _wrap_MatConstIterator_m_set_cv_dbcbba478e71899d(cv::MatConstIterator *_swig_go_0, cv::Mat *_swig_go_1) {
  cv::MatConstIterator *arg1 = (cv::MatConstIterator *) 0 ;
  cv::Mat *arg2 = (cv::Mat *) 0 ;
  
  arg1 = *(cv::MatConstIterator **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  
  if (arg1) (arg1)->m = (cv::Mat const *)arg2;
  
}


cv::Mat *_wrap_MatConstIterator_m_get_cv_dbcbba478e71899d(cv::MatConstIterator *_swig_go_0) {
  cv::MatConstIterator *arg1 = (cv::MatConstIterator *) 0 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::MatConstIterator **)&_swig_go_0; 
  
  result = (cv::Mat *) ((arg1)->m);
  *(cv::Mat **)&_swig_go_result = (cv::Mat *)result; 
  return _swig_go_result;
}


void _wrap_MatConstIterator_elemSize_set_cv_dbcbba478e71899d(cv::MatConstIterator *_swig_go_0, long long _swig_go_1) {
  cv::MatConstIterator *arg1 = (cv::MatConstIterator *) 0 ;
  size_t arg2 ;
  
  arg1 = *(cv::MatConstIterator **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  
  if (arg1) (arg1)->elemSize = arg2;
  
}


long long _wrap_MatConstIterator_elemSize_get_cv_dbcbba478e71899d(cv::MatConstIterator *_swig_go_0) {
  cv::MatConstIterator *arg1 = (cv::MatConstIterator *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(cv::MatConstIterator **)&_swig_go_0; 
  
  result =  ((arg1)->elemSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_MatConstIterator_ptr_set_cv_dbcbba478e71899d(cv::MatConstIterator *_swig_go_0, _gostring_ _swig_go_1) {
  cv::MatConstIterator *arg1 = (cv::MatConstIterator *) 0 ;
  uchar *arg2 = (uchar *) 0 ;
  
  arg1 = *(cv::MatConstIterator **)&_swig_go_0; 
  arg2 = (uchar *)_swig_go_1.p; 
  
  if (arg1) (arg1)->ptr = arg2;
  
}


_gostring_ _wrap_MatConstIterator_ptr_get_cv_dbcbba478e71899d(cv::MatConstIterator *_swig_go_0) {
  cv::MatConstIterator *arg1 = (cv::MatConstIterator *) 0 ;
  uchar *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::MatConstIterator **)&_swig_go_0; 
  
  result = (uchar *) ((arg1)->ptr);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_MatConstIterator_sliceStart_set_cv_dbcbba478e71899d(cv::MatConstIterator *_swig_go_0, _gostring_ _swig_go_1) {
  cv::MatConstIterator *arg1 = (cv::MatConstIterator *) 0 ;
  uchar *arg2 = (uchar *) 0 ;
  
  arg1 = *(cv::MatConstIterator **)&_swig_go_0; 
  arg2 = (uchar *)_swig_go_1.p; 
  
  if (arg1) (arg1)->sliceStart = arg2;
  
}


_gostring_ _wrap_MatConstIterator_sliceStart_get_cv_dbcbba478e71899d(cv::MatConstIterator *_swig_go_0) {
  cv::MatConstIterator *arg1 = (cv::MatConstIterator *) 0 ;
  uchar *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::MatConstIterator **)&_swig_go_0; 
  
  result = (uchar *) ((arg1)->sliceStart);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_MatConstIterator_sliceEnd_set_cv_dbcbba478e71899d(cv::MatConstIterator *_swig_go_0, _gostring_ _swig_go_1) {
  cv::MatConstIterator *arg1 = (cv::MatConstIterator *) 0 ;
  uchar *arg2 = (uchar *) 0 ;
  
  arg1 = *(cv::MatConstIterator **)&_swig_go_0; 
  arg2 = (uchar *)_swig_go_1.p; 
  
  if (arg1) (arg1)->sliceEnd = arg2;
  
}


_gostring_ _wrap_MatConstIterator_sliceEnd_get_cv_dbcbba478e71899d(cv::MatConstIterator *_swig_go_0) {
  cv::MatConstIterator *arg1 = (cv::MatConstIterator *) 0 ;
  uchar *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::MatConstIterator **)&_swig_go_0; 
  
  result = (uchar *) ((arg1)->sliceEnd);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_delete_MatConstIterator_cv_dbcbba478e71899d(cv::MatConstIterator *_swig_go_0) {
  cv::MatConstIterator *arg1 = (cv::MatConstIterator *) 0 ;
  
  arg1 = *(cv::MatConstIterator **)&_swig_go_0; 
  
  delete arg1;
  
}


cv::NAryMatIterator *_wrap_new_NAryMatIterator__SWIG_0_cv_dbcbba478e71899d() {
  cv::NAryMatIterator *result = 0 ;
  cv::NAryMatIterator *_swig_go_result;
  
  
  result = (cv::NAryMatIterator *)new cv::NAryMatIterator();
  *(cv::NAryMatIterator **)&_swig_go_result = (cv::NAryMatIterator *)result; 
  return _swig_go_result;
}


cv::NAryMatIterator *_wrap_new_NAryMatIterator__SWIG_1_cv_dbcbba478e71899d(cv::Mat **_swig_go_0, _gostring_* _swig_go_1, intgo _swig_go_2) {
  cv::Mat **arg1 = (cv::Mat **) 0 ;
  uchar **arg2 = (uchar **) 0 ;
  int arg3 ;
  cv::NAryMatIterator *result = 0 ;
  cv::NAryMatIterator *_swig_go_result;
  
  arg1 = *(cv::Mat ***)&_swig_go_0; 
  arg2 = *(uchar ***)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (cv::NAryMatIterator *)new cv::NAryMatIterator((cv::Mat const **)arg1,arg2,arg3);
  *(cv::NAryMatIterator **)&_swig_go_result = (cv::NAryMatIterator *)result; 
  return _swig_go_result;
}


cv::NAryMatIterator *_wrap_new_NAryMatIterator__SWIG_2_cv_dbcbba478e71899d(cv::Mat **_swig_go_0, _gostring_* _swig_go_1) {
  cv::Mat **arg1 = (cv::Mat **) 0 ;
  uchar **arg2 = (uchar **) 0 ;
  cv::NAryMatIterator *result = 0 ;
  cv::NAryMatIterator *_swig_go_result;
  
  arg1 = *(cv::Mat ***)&_swig_go_0; 
  arg2 = *(uchar ***)&_swig_go_1; 
  
  result = (cv::NAryMatIterator *)new cv::NAryMatIterator((cv::Mat const **)arg1,arg2);
  *(cv::NAryMatIterator **)&_swig_go_result = (cv::NAryMatIterator *)result; 
  return _swig_go_result;
}


cv::NAryMatIterator *_wrap_new_NAryMatIterator__SWIG_3_cv_dbcbba478e71899d(cv::Mat **_swig_go_0, cv::Mat *_swig_go_1, intgo _swig_go_2) {
  cv::Mat **arg1 = (cv::Mat **) 0 ;
  cv::Mat *arg2 = (cv::Mat *) 0 ;
  int arg3 ;
  cv::NAryMatIterator *result = 0 ;
  cv::NAryMatIterator *_swig_go_result;
  
  arg1 = *(cv::Mat ***)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (cv::NAryMatIterator *)new cv::NAryMatIterator((cv::Mat const **)arg1,arg2,arg3);
  *(cv::NAryMatIterator **)&_swig_go_result = (cv::NAryMatIterator *)result; 
  return _swig_go_result;
}


cv::NAryMatIterator *_wrap_new_NAryMatIterator__SWIG_4_cv_dbcbba478e71899d(cv::Mat **_swig_go_0, cv::Mat *_swig_go_1) {
  cv::Mat **arg1 = (cv::Mat **) 0 ;
  cv::Mat *arg2 = (cv::Mat *) 0 ;
  cv::NAryMatIterator *result = 0 ;
  cv::NAryMatIterator *_swig_go_result;
  
  arg1 = *(cv::Mat ***)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  
  result = (cv::NAryMatIterator *)new cv::NAryMatIterator((cv::Mat const **)arg1,arg2);
  *(cv::NAryMatIterator **)&_swig_go_result = (cv::NAryMatIterator *)result; 
  return _swig_go_result;
}


void _wrap_NAryMatIterator_init__SWIG_0_cv_dbcbba478e71899d(cv::NAryMatIterator *_swig_go_0, cv::Mat **_swig_go_1, cv::Mat *_swig_go_2, _gostring_* _swig_go_3, intgo _swig_go_4) {
  cv::NAryMatIterator *arg1 = (cv::NAryMatIterator *) 0 ;
  cv::Mat **arg2 = (cv::Mat **) 0 ;
  cv::Mat *arg3 = (cv::Mat *) 0 ;
  uchar **arg4 = (uchar **) 0 ;
  int arg5 ;
  
  arg1 = *(cv::NAryMatIterator **)&_swig_go_0; 
  arg2 = *(cv::Mat ***)&_swig_go_1; 
  arg3 = *(cv::Mat **)&_swig_go_2; 
  arg4 = *(uchar ***)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  (arg1)->init((cv::Mat const **)arg2,arg3,arg4,arg5);
  
}


void _wrap_NAryMatIterator_init__SWIG_1_cv_dbcbba478e71899d(cv::NAryMatIterator *_swig_go_0, cv::Mat **_swig_go_1, cv::Mat *_swig_go_2, _gostring_* _swig_go_3) {
  cv::NAryMatIterator *arg1 = (cv::NAryMatIterator *) 0 ;
  cv::Mat **arg2 = (cv::Mat **) 0 ;
  cv::Mat *arg3 = (cv::Mat *) 0 ;
  uchar **arg4 = (uchar **) 0 ;
  
  arg1 = *(cv::NAryMatIterator **)&_swig_go_0; 
  arg2 = *(cv::Mat ***)&_swig_go_1; 
  arg3 = *(cv::Mat **)&_swig_go_2; 
  arg4 = *(uchar ***)&_swig_go_3; 
  
  (arg1)->init((cv::Mat const **)arg2,arg3,arg4);
  
}


void _wrap_NAryMatIterator_arrays_set_cv_dbcbba478e71899d(cv::NAryMatIterator *_swig_go_0, cv::Mat **_swig_go_1) {
  cv::NAryMatIterator *arg1 = (cv::NAryMatIterator *) 0 ;
  cv::Mat **arg2 = (cv::Mat **) 0 ;
  
  arg1 = *(cv::NAryMatIterator **)&_swig_go_0; 
  arg2 = *(cv::Mat ***)&_swig_go_1; 
  
  if (arg1) (arg1)->arrays = (cv::Mat const **)arg2;
  
}


cv::Mat **_wrap_NAryMatIterator_arrays_get_cv_dbcbba478e71899d(cv::NAryMatIterator *_swig_go_0) {
  cv::NAryMatIterator *arg1 = (cv::NAryMatIterator *) 0 ;
  cv::Mat **result = 0 ;
  cv::Mat **_swig_go_result;
  
  arg1 = *(cv::NAryMatIterator **)&_swig_go_0; 
  
  result = (cv::Mat **) ((arg1)->arrays);
  *(cv::Mat ***)&_swig_go_result = (cv::Mat **)result; 
  return _swig_go_result;
}


void _wrap_NAryMatIterator_planes_set_cv_dbcbba478e71899d(cv::NAryMatIterator *_swig_go_0, cv::Mat *_swig_go_1) {
  cv::NAryMatIterator *arg1 = (cv::NAryMatIterator *) 0 ;
  cv::Mat *arg2 = (cv::Mat *) 0 ;
  
  arg1 = *(cv::NAryMatIterator **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  
  if (arg1) (arg1)->planes = arg2;
  
}


cv::Mat *_wrap_NAryMatIterator_planes_get_cv_dbcbba478e71899d(cv::NAryMatIterator *_swig_go_0) {
  cv::NAryMatIterator *arg1 = (cv::NAryMatIterator *) 0 ;
  cv::Mat *result = 0 ;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::NAryMatIterator **)&_swig_go_0; 
  
  result = (cv::Mat *) ((arg1)->planes);
  *(cv::Mat **)&_swig_go_result = (cv::Mat *)result; 
  return _swig_go_result;
}


void _wrap_NAryMatIterator_ptrs_set_cv_dbcbba478e71899d(cv::NAryMatIterator *_swig_go_0, _gostring_* _swig_go_1) {
  cv::NAryMatIterator *arg1 = (cv::NAryMatIterator *) 0 ;
  uchar **arg2 = (uchar **) 0 ;
  
  arg1 = *(cv::NAryMatIterator **)&_swig_go_0; 
  arg2 = *(uchar ***)&_swig_go_1; 
  
  if (arg1) (arg1)->ptrs = arg2;
  
}


_gostring_* _wrap_NAryMatIterator_ptrs_get_cv_dbcbba478e71899d(cv::NAryMatIterator *_swig_go_0) {
  cv::NAryMatIterator *arg1 = (cv::NAryMatIterator *) 0 ;
  uchar **result = 0 ;
  _gostring_* _swig_go_result;
  
  arg1 = *(cv::NAryMatIterator **)&_swig_go_0; 
  
  result = (uchar **) ((arg1)->ptrs);
  *(uchar ***)&_swig_go_result = (uchar **)result; 
  return _swig_go_result;
}


void _wrap_NAryMatIterator_narrays_set_cv_dbcbba478e71899d(cv::NAryMatIterator *_swig_go_0, intgo _swig_go_1) {
  cv::NAryMatIterator *arg1 = (cv::NAryMatIterator *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::NAryMatIterator **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->narrays = arg2;
  
}


intgo _wrap_NAryMatIterator_narrays_get_cv_dbcbba478e71899d(cv::NAryMatIterator *_swig_go_0) {
  cv::NAryMatIterator *arg1 = (cv::NAryMatIterator *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::NAryMatIterator **)&_swig_go_0; 
  
  result = (int) ((arg1)->narrays);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_NAryMatIterator_nplanes_set_cv_dbcbba478e71899d(cv::NAryMatIterator *_swig_go_0, long long _swig_go_1) {
  cv::NAryMatIterator *arg1 = (cv::NAryMatIterator *) 0 ;
  size_t arg2 ;
  
  arg1 = *(cv::NAryMatIterator **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  
  if (arg1) (arg1)->nplanes = arg2;
  
}


long long _wrap_NAryMatIterator_nplanes_get_cv_dbcbba478e71899d(cv::NAryMatIterator *_swig_go_0) {
  cv::NAryMatIterator *arg1 = (cv::NAryMatIterator *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(cv::NAryMatIterator **)&_swig_go_0; 
  
  result =  ((arg1)->nplanes);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_NAryMatIterator_size_set_cv_dbcbba478e71899d(cv::NAryMatIterator *_swig_go_0, long long _swig_go_1) {
  cv::NAryMatIterator *arg1 = (cv::NAryMatIterator *) 0 ;
  size_t arg2 ;
  
  arg1 = *(cv::NAryMatIterator **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  
  if (arg1) (arg1)->size = arg2;
  
}


long long _wrap_NAryMatIterator_size_get_cv_dbcbba478e71899d(cv::NAryMatIterator *_swig_go_0) {
  cv::NAryMatIterator *arg1 = (cv::NAryMatIterator *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(cv::NAryMatIterator **)&_swig_go_0; 
  
  result =  ((arg1)->size);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_NAryMatIterator_cv_dbcbba478e71899d(cv::NAryMatIterator *_swig_go_0) {
  cv::NAryMatIterator *arg1 = (cv::NAryMatIterator *) 0 ;
  
  arg1 = *(cv::NAryMatIterator **)&_swig_go_0; 
  
  delete arg1;
  
}


void** _wrap_getConvertElem_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1) {
  int arg1 ;
  int arg2 ;
  cv::ConvertData result;
  void** _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (cv::ConvertData)cv::getConvertElem(arg1,arg2);
  *(cv::ConvertData *)&_swig_go_result = (cv::ConvertData)result; 
  return _swig_go_result;
}


void** _wrap_getConvertScaleElem_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1) {
  int arg1 ;
  int arg2 ;
  cv::ConvertScaleData result;
  void** _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (cv::ConvertScaleData)cv::getConvertScaleElem(arg1,arg2);
  *(cv::ConvertScaleData *)&_swig_go_result = (cv::ConvertScaleData)result; 
  return _swig_go_result;
}


cv::SparseMat *_wrap_new_SparseMat__SWIG_0_cv_dbcbba478e71899d() {
  cv::SparseMat *result = 0 ;
  cv::SparseMat *_swig_go_result;
  
  
  result = (cv::SparseMat *)new cv::SparseMat();
  *(cv::SparseMat **)&_swig_go_result = (cv::SparseMat *)result; 
  return _swig_go_result;
}


cv::SparseMat *_wrap_new_SparseMat__SWIG_1_cv_dbcbba478e71899d(intgo _swig_go_0, intgo *_swig_go_1, intgo _swig_go_2) {
  int arg1 ;
  int *arg2 = (int *) 0 ;
  int arg3 ;
  cv::SparseMat *result = 0 ;
  cv::SparseMat *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (cv::SparseMat *)new cv::SparseMat(arg1,(int const *)arg2,arg3);
  *(cv::SparseMat **)&_swig_go_result = (cv::SparseMat *)result; 
  return _swig_go_result;
}


cv::SparseMat *_wrap_new_SparseMat__SWIG_2_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0) {
  cv::SparseMat *arg1 = 0 ;
  cv::SparseMat *result = 0 ;
  cv::SparseMat *_swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  
  result = (cv::SparseMat *)new cv::SparseMat((cv::SparseMat const &)*arg1);
  *(cv::SparseMat **)&_swig_go_result = (cv::SparseMat *)result; 
  return _swig_go_result;
}


cv::SparseMat *_wrap_new_SparseMat__SWIG_3_cv_dbcbba478e71899d(cv::Mat *_swig_go_0) {
  cv::Mat *arg1 = 0 ;
  cv::SparseMat *result = 0 ;
  cv::SparseMat *_swig_go_result;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  result = (cv::SparseMat *)new cv::SparseMat((cv::Mat const &)*arg1);
  *(cv::SparseMat **)&_swig_go_result = (cv::SparseMat *)result; 
  return _swig_go_result;
}


cv::SparseMat *_wrap_new_SparseMat__SWIG_4_cv_dbcbba478e71899d(CvSparseMat *_swig_go_0) {
  CvSparseMat *arg1 = (CvSparseMat *) 0 ;
  cv::SparseMat *result = 0 ;
  cv::SparseMat *_swig_go_result;
  
  arg1 = *(CvSparseMat **)&_swig_go_0; 
  
  result = (cv::SparseMat *)new cv::SparseMat((CvSparseMat const *)arg1);
  *(cv::SparseMat **)&_swig_go_result = (cv::SparseMat *)result; 
  return _swig_go_result;
}


void _wrap_delete_SparseMat_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  
  delete arg1;
  
}


cv::SparseMat *_wrap_SparseMat_clone_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  cv::SparseMat result;
  cv::SparseMat *_swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  
  result = ((cv::SparseMat const *)arg1)->clone();
  *(cv::SparseMat **)&_swig_go_result = new cv::SparseMat(result); 
  return _swig_go_result;
}


void _wrap_SparseMat_copyTo__SWIG_0_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, cv::SparseMat *_swig_go_1) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  cv::SparseMat *arg2 = 0 ;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = *(cv::SparseMat **)&_swig_go_1; 
  
  ((cv::SparseMat const *)arg1)->copyTo(*arg2);
  
}


void _wrap_SparseMat_copyTo__SWIG_1_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, cv::Mat *_swig_go_1) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  cv::Mat *arg2 = 0 ;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  
  ((cv::SparseMat const *)arg1)->copyTo(*arg2);
  
}


void _wrap_SparseMat_convertTo__SWIG_0_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, cv::SparseMat *_swig_go_1, intgo _swig_go_2, double _swig_go_3) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  cv::SparseMat *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = *(cv::SparseMat **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  ((cv::SparseMat const *)arg1)->convertTo(*arg2,arg3,arg4);
  
}


void _wrap_SparseMat_convertTo__SWIG_1_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, cv::SparseMat *_swig_go_1, intgo _swig_go_2) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  cv::SparseMat *arg2 = 0 ;
  int arg3 ;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = *(cv::SparseMat **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  ((cv::SparseMat const *)arg1)->convertTo(*arg2,arg3);
  
}


void _wrap_SparseMat_convertTo__SWIG_2_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, cv::Mat *_swig_go_1, intgo _swig_go_2, double _swig_go_3, double _swig_go_4) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  cv::Mat *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  double arg5 ;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  ((cv::SparseMat const *)arg1)->convertTo(*arg2,arg3,arg4,arg5);
  
}


void _wrap_SparseMat_convertTo__SWIG_3_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, cv::Mat *_swig_go_1, intgo _swig_go_2, double _swig_go_3) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  cv::Mat *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  ((cv::SparseMat const *)arg1)->convertTo(*arg2,arg3,arg4);
  
}


void _wrap_SparseMat_convertTo__SWIG_4_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, cv::Mat *_swig_go_1, intgo _swig_go_2) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  cv::Mat *arg2 = 0 ;
  int arg3 ;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  ((cv::SparseMat const *)arg1)->convertTo(*arg2,arg3);
  
}


void _wrap_SparseMat_assignTo__SWIG_0_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, cv::SparseMat *_swig_go_1, intgo _swig_go_2) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  cv::SparseMat *arg2 = 0 ;
  int arg3 ;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = *(cv::SparseMat **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  ((cv::SparseMat const *)arg1)->assignTo(*arg2,arg3);
  
}


void _wrap_SparseMat_assignTo__SWIG_1_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, cv::SparseMat *_swig_go_1) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  cv::SparseMat *arg2 = 0 ;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = *(cv::SparseMat **)&_swig_go_1; 
  
  ((cv::SparseMat const *)arg1)->assignTo(*arg2);
  
}


void _wrap_SparseMat_create_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, intgo _swig_go_1, intgo *_swig_go_2, intgo _swig_go_3) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  int arg2 ;
  int *arg3 = (int *) 0 ;
  int arg4 ;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  (arg1)->create(arg2,(int const *)arg3,arg4);
  
}


void _wrap_SparseMat_clear_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  
  (arg1)->clear();
  
}


void _wrap_SparseMat_addref_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  
  (arg1)->addref();
  
}


void _wrap_SparseMat_release_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  
  (arg1)->release();
  
}


long long _wrap_SparseMat_elemSize_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  
  result = ((cv::SparseMat const *)arg1)->elemSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_SparseMat_elemSize1_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  
  result = ((cv::SparseMat const *)arg1)->elemSize1();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SparseMat_Xtype_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  
  result = (int)((cv::SparseMat const *)arg1)->type();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SparseMat_depth_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  
  result = (int)((cv::SparseMat const *)arg1)->depth();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SparseMat_channels_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  
  result = (int)((cv::SparseMat const *)arg1)->channels();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo *_wrap_SparseMat_size__SWIG_0_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  
  result = (int *)((cv::SparseMat const *)arg1)->size();
  *(int **)&_swig_go_result = (int *)result; 
  return _swig_go_result;
}


intgo _wrap_SparseMat_size__SWIG_1_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, intgo _swig_go_1) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  int arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (int)((cv::SparseMat const *)arg1)->size(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_SparseMat_dims_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  
  result = (int)((cv::SparseMat const *)arg1)->dims();
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_SparseMat_nzcount_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  
  result = ((cv::SparseMat const *)arg1)->nzcount();
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_SparseMat_hash__SWIG_0_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, intgo _swig_go_1) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  int arg2 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = ((cv::SparseMat const *)arg1)->hash(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_SparseMat_hash__SWIG_1_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  int arg2 ;
  int arg3 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = ((cv::SparseMat const *)arg1)->hash(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_SparseMat_hash__SWIG_2_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = ((cv::SparseMat const *)arg1)->hash(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_SparseMat_hash__SWIG_3_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, intgo *_swig_go_1) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  int *arg2 = (int *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  result = ((cv::SparseMat const *)arg1)->hash((int const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_SparseMat_ptr__SWIG_0_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, intgo _swig_go_1, bool _swig_go_2, long long *_swig_go_3) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  int arg2 ;
  bool arg3 ;
  size_t *arg4 = (size_t *) 0 ;
  uchar *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  arg4 = *(size_t **)&_swig_go_3; 
  
  result = (uchar *)(arg1)->ptr(arg2,arg3,arg4);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_SparseMat_ptr__SWIG_1_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, intgo _swig_go_1, bool _swig_go_2) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  int arg2 ;
  bool arg3 ;
  uchar *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  result = (uchar *)(arg1)->ptr(arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_SparseMat_ptr__SWIG_2_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, bool _swig_go_3, long long *_swig_go_4) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  int arg2 ;
  int arg3 ;
  bool arg4 ;
  size_t *arg5 = (size_t *) 0 ;
  uchar *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (bool)_swig_go_3; 
  arg5 = *(size_t **)&_swig_go_4; 
  
  result = (uchar *)(arg1)->ptr(arg2,arg3,arg4,arg5);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_SparseMat_ptr__SWIG_3_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, bool _swig_go_3) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  int arg2 ;
  int arg3 ;
  bool arg4 ;
  uchar *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (bool)_swig_go_3; 
  
  result = (uchar *)(arg1)->ptr(arg2,arg3,arg4);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_SparseMat_ptr__SWIG_4_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3, bool _swig_go_4, long long *_swig_go_5) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  bool arg5 ;
  size_t *arg6 = (size_t *) 0 ;
  uchar *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(size_t **)&_swig_go_5; 
  
  result = (uchar *)(arg1)->ptr(arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_SparseMat_ptr__SWIG_5_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  bool arg5 ;
  uchar *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  result = (uchar *)(arg1)->ptr(arg2,arg3,arg4,arg5);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_SparseMat_ptr__SWIG_6_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, intgo *_swig_go_1, bool _swig_go_2, long long *_swig_go_3) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  int *arg2 = (int *) 0 ;
  bool arg3 ;
  size_t *arg4 = (size_t *) 0 ;
  uchar *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  arg4 = *(size_t **)&_swig_go_3; 
  
  result = (uchar *)(arg1)->ptr((int const *)arg2,arg3,arg4);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_SparseMat_ptr__SWIG_7_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, intgo *_swig_go_1, bool _swig_go_2) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  int *arg2 = (int *) 0 ;
  bool arg3 ;
  uchar *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  result = (uchar *)(arg1)->ptr((int const *)arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_SparseMat_erase__SWIG_0_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, long long *_swig_go_3) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  int arg2 ;
  int arg3 ;
  size_t *arg4 = (size_t *) 0 ;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(size_t **)&_swig_go_3; 
  
  (arg1)->erase(arg2,arg3,arg4);
  
}


void _wrap_SparseMat_erase__SWIG_1_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  (arg1)->erase(arg2,arg3);
  
}


void _wrap_SparseMat_erase__SWIG_2_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3, long long *_swig_go_4) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  size_t *arg5 = (size_t *) 0 ;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(size_t **)&_swig_go_4; 
  
  (arg1)->erase(arg2,arg3,arg4,arg5);
  
}


void _wrap_SparseMat_erase__SWIG_3_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  (arg1)->erase(arg2,arg3,arg4);
  
}


void _wrap_SparseMat_erase__SWIG_4_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, intgo *_swig_go_1, long long *_swig_go_2) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  int *arg2 = (int *) 0 ;
  size_t *arg3 = (size_t *) 0 ;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  arg3 = *(size_t **)&_swig_go_2; 
  
  (arg1)->erase((int const *)arg2,arg3);
  
}


void _wrap_SparseMat_erase__SWIG_5_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, intgo *_swig_go_1) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  int *arg2 = (int *) 0 ;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  (arg1)->erase((int const *)arg2);
  
}


cv::SparseMatIterator *_wrap_SparseMat_begin__SWIG_0_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  cv::SparseMatIterator result;
  cv::SparseMatIterator *_swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  
  result = (arg1)->begin();
  *(cv::SparseMatIterator **)&_swig_go_result = new cv::SparseMatIterator(result); 
  return _swig_go_result;
}


cv::SparseMatConstIterator *_wrap_SparseMat_begin__SWIG_2_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  cv::SparseMatConstIterator result;
  cv::SparseMatConstIterator *_swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  
  result = ((cv::SparseMat const *)arg1)->begin();
  *(cv::SparseMatConstIterator **)&_swig_go_result = new cv::SparseMatConstIterator(result); 
  return _swig_go_result;
}


cv::SparseMatIterator *_wrap_SparseMat_end__SWIG_0_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  cv::SparseMatIterator result;
  cv::SparseMatIterator *_swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  
  result = (arg1)->end();
  *(cv::SparseMatIterator **)&_swig_go_result = new cv::SparseMatIterator(result); 
  return _swig_go_result;
}


cv::SparseMatConstIterator *_wrap_SparseMat_end__SWIG_1_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  cv::SparseMatConstIterator result;
  cv::SparseMatConstIterator *_swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  
  result = ((cv::SparseMat const *)arg1)->end();
  *(cv::SparseMatConstIterator **)&_swig_go_result = new cv::SparseMatConstIterator(result); 
  return _swig_go_result;
}


cv::SparseMat::Node *_wrap_SparseMat_node__SWIG_0_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, long long _swig_go_1) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  size_t arg2 ;
  cv::SparseMat::Node *result = 0 ;
  cv::SparseMat::Node *_swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  
  result = (cv::SparseMat::Node *)(arg1)->node(arg2);
  *(cv::SparseMat::Node **)&_swig_go_result = (cv::SparseMat::Node *)result; 
  return _swig_go_result;
}


cv::SparseMat::Node *_wrap_SparseMat_node__SWIG_1_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, long long _swig_go_1) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  size_t arg2 ;
  cv::SparseMat::Node *result = 0 ;
  cv::SparseMat::Node *_swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  
  result = (cv::SparseMat::Node *)((cv::SparseMat const *)arg1)->node(arg2);
  *(cv::SparseMat::Node **)&_swig_go_result = (cv::SparseMat::Node *)result; 
  return _swig_go_result;
}


_gostring_ _wrap_SparseMat_newNode_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, intgo *_swig_go_1, long long _swig_go_2) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  int *arg2 = (int *) 0 ;
  size_t arg3 ;
  uchar *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (size_t)_swig_go_2; 
  
  result = (uchar *)(arg1)->newNode((int const *)arg2,arg3);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_SparseMat_removeNode_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, long long _swig_go_1, long long _swig_go_2, long long _swig_go_3) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  size_t arg2 ;
  size_t arg3 ;
  size_t arg4 ;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  arg3 = (size_t)_swig_go_2; 
  arg4 = (size_t)_swig_go_3; 
  
  (arg1)->removeNode(arg2,arg3,arg4);
  
}


void _wrap_SparseMat_resizeHashTab_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, long long _swig_go_1) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  size_t arg2 ;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  
  (arg1)->resizeHashTab(arg2);
  
}


intgo _wrap_MAGIC_VAL_SparseMat_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::SparseMat::MAGIC_VAL;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_MAX_DIM_SparseMat_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::SparseMat::MAX_DIM;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_HASH_SCALE_SparseMat_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::SparseMat::HASH_SCALE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_HASH_BIT_SparseMat_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::SparseMat::HASH_BIT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_SparseMat_flags_set_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, intgo _swig_go_1) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->flags = arg2;
  
}


intgo _wrap_SparseMat_flags_get_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  
  result = (int) ((arg1)->flags);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SparseMat_hdr_set_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, cv::SparseMat::Hdr *_swig_go_1) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  cv::SparseMat::Hdr *arg2 = (cv::SparseMat::Hdr *) 0 ;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = *(cv::SparseMat::Hdr **)&_swig_go_1; 
  
  if (arg1) (arg1)->hdr = arg2;
  
}


cv::SparseMat::Hdr *_wrap_SparseMat_hdr_get_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  cv::SparseMat::Hdr *result = 0 ;
  cv::SparseMat::Hdr *_swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  
  result = (cv::SparseMat::Hdr *) ((arg1)->hdr);
  *(cv::SparseMat::Hdr **)&_swig_go_result = (cv::SparseMat::Hdr *)result; 
  return _swig_go_result;
}


void _wrap_minMaxLoc__SWIG_5_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, double *_swig_go_1, double *_swig_go_2, intgo *_swig_go_3, intgo *_swig_go_4) {
  cv::SparseMat *arg1 = 0 ;
  double *arg2 = (double *) 0 ;
  double *arg3 = (double *) 0 ;
  int *arg4 = (int *) 0 ;
  int *arg5 = (int *) 0 ;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  arg3 = *(double **)&_swig_go_2; 
  arg4 = *(int **)&_swig_go_3; 
  arg5 = *(int **)&_swig_go_4; 
  
  cv::minMaxLoc((cv::SparseMat const &)*arg1,arg2,arg3,arg4,arg5);
  
}


void _wrap_minMaxLoc__SWIG_6_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, double *_swig_go_1, double *_swig_go_2, intgo *_swig_go_3) {
  cv::SparseMat *arg1 = 0 ;
  double *arg2 = (double *) 0 ;
  double *arg3 = (double *) 0 ;
  int *arg4 = (int *) 0 ;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  arg3 = *(double **)&_swig_go_2; 
  arg4 = *(int **)&_swig_go_3; 
  
  cv::minMaxLoc((cv::SparseMat const &)*arg1,arg2,arg3,arg4);
  
}


void _wrap_minMaxLoc__SWIG_7_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, double *_swig_go_1, double *_swig_go_2) {
  cv::SparseMat *arg1 = 0 ;
  double *arg2 = (double *) 0 ;
  double *arg3 = (double *) 0 ;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  arg3 = *(double **)&_swig_go_2; 
  
  cv::minMaxLoc((cv::SparseMat const &)*arg1,arg2,arg3);
  
}


double _wrap_norm__SWIG_6_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, intgo _swig_go_1) {
  cv::SparseMat *arg1 = 0 ;
  int arg2 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (double)cv::norm((cv::SparseMat const &)*arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_normalize__SWIG_6_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, cv::SparseMat *_swig_go_1, double _swig_go_2, intgo _swig_go_3) {
  cv::SparseMat *arg1 = 0 ;
  cv::SparseMat *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = *(cv::SparseMat **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  cv::normalize((cv::SparseMat const &)*arg1,*arg2,arg3,arg4);
  
}


cv::SparseMatConstIterator *_wrap_new_SparseMatConstIterator__SWIG_0_cv_dbcbba478e71899d() {
  cv::SparseMatConstIterator *result = 0 ;
  cv::SparseMatConstIterator *_swig_go_result;
  
  
  result = (cv::SparseMatConstIterator *)new cv::SparseMatConstIterator();
  *(cv::SparseMatConstIterator **)&_swig_go_result = (cv::SparseMatConstIterator *)result; 
  return _swig_go_result;
}


cv::SparseMatConstIterator *_wrap_new_SparseMatConstIterator__SWIG_1_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  cv::SparseMatConstIterator *result = 0 ;
  cv::SparseMatConstIterator *_swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  
  result = (cv::SparseMatConstIterator *)new cv::SparseMatConstIterator((cv::SparseMat const *)arg1);
  *(cv::SparseMatConstIterator **)&_swig_go_result = (cv::SparseMatConstIterator *)result; 
  return _swig_go_result;
}


cv::SparseMatConstIterator *_wrap_new_SparseMatConstIterator__SWIG_2_cv_dbcbba478e71899d(cv::SparseMatConstIterator *_swig_go_0) {
  cv::SparseMatConstIterator *arg1 = 0 ;
  cv::SparseMatConstIterator *result = 0 ;
  cv::SparseMatConstIterator *_swig_go_result;
  
  arg1 = *(cv::SparseMatConstIterator **)&_swig_go_0; 
  
  result = (cv::SparseMatConstIterator *)new cv::SparseMatConstIterator((cv::SparseMatConstIterator const &)*arg1);
  *(cv::SparseMatConstIterator **)&_swig_go_result = (cv::SparseMatConstIterator *)result; 
  return _swig_go_result;
}


cv::SparseMat::Node *_wrap_SparseMatConstIterator_node_cv_dbcbba478e71899d(cv::SparseMatConstIterator *_swig_go_0) {
  cv::SparseMatConstIterator *arg1 = (cv::SparseMatConstIterator *) 0 ;
  cv::SparseMat::Node *result = 0 ;
  cv::SparseMat::Node *_swig_go_result;
  
  arg1 = *(cv::SparseMatConstIterator **)&_swig_go_0; 
  
  result = (cv::SparseMat::Node *)((cv::SparseMatConstIterator const *)arg1)->node();
  *(cv::SparseMat::Node **)&_swig_go_result = (cv::SparseMat::Node *)result; 
  return _swig_go_result;
}


void _wrap_SparseMatConstIterator_seekEnd_cv_dbcbba478e71899d(cv::SparseMatConstIterator *_swig_go_0) {
  cv::SparseMatConstIterator *arg1 = (cv::SparseMatConstIterator *) 0 ;
  
  arg1 = *(cv::SparseMatConstIterator **)&_swig_go_0; 
  
  (arg1)->seekEnd();
  
}


void _wrap_SparseMatConstIterator_m_set_cv_dbcbba478e71899d(cv::SparseMatConstIterator *_swig_go_0, cv::SparseMat *_swig_go_1) {
  cv::SparseMatConstIterator *arg1 = (cv::SparseMatConstIterator *) 0 ;
  cv::SparseMat *arg2 = (cv::SparseMat *) 0 ;
  
  arg1 = *(cv::SparseMatConstIterator **)&_swig_go_0; 
  arg2 = *(cv::SparseMat **)&_swig_go_1; 
  
  if (arg1) (arg1)->m = (cv::SparseMat const *)arg2;
  
}


cv::SparseMat *_wrap_SparseMatConstIterator_m_get_cv_dbcbba478e71899d(cv::SparseMatConstIterator *_swig_go_0) {
  cv::SparseMatConstIterator *arg1 = (cv::SparseMatConstIterator *) 0 ;
  cv::SparseMat *result = 0 ;
  cv::SparseMat *_swig_go_result;
  
  arg1 = *(cv::SparseMatConstIterator **)&_swig_go_0; 
  
  result = (cv::SparseMat *) ((arg1)->m);
  *(cv::SparseMat **)&_swig_go_result = (cv::SparseMat *)result; 
  return _swig_go_result;
}


void _wrap_SparseMatConstIterator_hashidx_set_cv_dbcbba478e71899d(cv::SparseMatConstIterator *_swig_go_0, long long _swig_go_1) {
  cv::SparseMatConstIterator *arg1 = (cv::SparseMatConstIterator *) 0 ;
  size_t arg2 ;
  
  arg1 = *(cv::SparseMatConstIterator **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  
  if (arg1) (arg1)->hashidx = arg2;
  
}


long long _wrap_SparseMatConstIterator_hashidx_get_cv_dbcbba478e71899d(cv::SparseMatConstIterator *_swig_go_0) {
  cv::SparseMatConstIterator *arg1 = (cv::SparseMatConstIterator *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(cv::SparseMatConstIterator **)&_swig_go_0; 
  
  result =  ((arg1)->hashidx);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SparseMatConstIterator_ptr_set_cv_dbcbba478e71899d(cv::SparseMatConstIterator *_swig_go_0, _gostring_ _swig_go_1) {
  cv::SparseMatConstIterator *arg1 = (cv::SparseMatConstIterator *) 0 ;
  uchar *arg2 = (uchar *) 0 ;
  
  arg1 = *(cv::SparseMatConstIterator **)&_swig_go_0; 
  arg2 = (uchar *)_swig_go_1.p; 
  
  if (arg1) (arg1)->ptr = arg2;
  
}


_gostring_ _wrap_SparseMatConstIterator_ptr_get_cv_dbcbba478e71899d(cv::SparseMatConstIterator *_swig_go_0) {
  cv::SparseMatConstIterator *arg1 = (cv::SparseMatConstIterator *) 0 ;
  uchar *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::SparseMatConstIterator **)&_swig_go_0; 
  
  result = (uchar *) ((arg1)->ptr);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_delete_SparseMatConstIterator_cv_dbcbba478e71899d(cv::SparseMatConstIterator *_swig_go_0) {
  cv::SparseMatConstIterator *arg1 = (cv::SparseMatConstIterator *) 0 ;
  
  arg1 = *(cv::SparseMatConstIterator **)&_swig_go_0; 
  
  delete arg1;
  
}


cv::SparseMatIterator *_wrap_new_SparseMatIterator__SWIG_0_cv_dbcbba478e71899d() {
  cv::SparseMatIterator *result = 0 ;
  cv::SparseMatIterator *_swig_go_result;
  
  
  result = (cv::SparseMatIterator *)new cv::SparseMatIterator();
  *(cv::SparseMatIterator **)&_swig_go_result = (cv::SparseMatIterator *)result; 
  return _swig_go_result;
}


cv::SparseMatIterator *_wrap_new_SparseMatIterator__SWIG_1_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  cv::SparseMatIterator *result = 0 ;
  cv::SparseMatIterator *_swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  
  result = (cv::SparseMatIterator *)new cv::SparseMatIterator(arg1);
  *(cv::SparseMatIterator **)&_swig_go_result = (cv::SparseMatIterator *)result; 
  return _swig_go_result;
}


cv::SparseMatIterator *_wrap_new_SparseMatIterator__SWIG_2_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, intgo *_swig_go_1) {
  cv::SparseMat *arg1 = (cv::SparseMat *) 0 ;
  int *arg2 = (int *) 0 ;
  cv::SparseMatIterator *result = 0 ;
  cv::SparseMatIterator *_swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  result = (cv::SparseMatIterator *)new cv::SparseMatIterator(arg1,(int const *)arg2);
  *(cv::SparseMatIterator **)&_swig_go_result = (cv::SparseMatIterator *)result; 
  return _swig_go_result;
}


cv::SparseMatIterator *_wrap_new_SparseMatIterator__SWIG_3_cv_dbcbba478e71899d(cv::SparseMatIterator *_swig_go_0) {
  cv::SparseMatIterator *arg1 = 0 ;
  cv::SparseMatIterator *result = 0 ;
  cv::SparseMatIterator *_swig_go_result;
  
  arg1 = *(cv::SparseMatIterator **)&_swig_go_0; 
  
  result = (cv::SparseMatIterator *)new cv::SparseMatIterator((cv::SparseMatIterator const &)*arg1);
  *(cv::SparseMatIterator **)&_swig_go_result = (cv::SparseMatIterator *)result; 
  return _swig_go_result;
}


cv::SparseMat::Node *_wrap_SparseMatIterator_node_cv_dbcbba478e71899d(cv::SparseMatIterator *_swig_go_0) {
  cv::SparseMatIterator *arg1 = (cv::SparseMatIterator *) 0 ;
  cv::SparseMat::Node *result = 0 ;
  cv::SparseMat::Node *_swig_go_result;
  
  arg1 = *(cv::SparseMatIterator **)&_swig_go_0; 
  
  result = (cv::SparseMat::Node *)((cv::SparseMatIterator const *)arg1)->node();
  *(cv::SparseMat::Node **)&_swig_go_result = (cv::SparseMat::Node *)result; 
  return _swig_go_result;
}


void _wrap_delete_SparseMatIterator_cv_dbcbba478e71899d(cv::SparseMatIterator *_swig_go_0) {
  cv::SparseMatIterator *arg1 = (cv::SparseMatIterator *) 0 ;
  
  arg1 = *(cv::SparseMatIterator **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_SparseMatIterator_seekEnd_cv_dbcbba478e71899d(cv::SparseMatIterator *_swig_go_0) {
  cv::SparseMatIterator *arg1 = (cv::SparseMatIterator *) 0 ;
  
  arg1 = *(cv::SparseMatIterator **)&_swig_go_0; 
  
  cv::SparseMatConstIterator *swig_b0 = (cv::SparseMatConstIterator *)arg1;
  (swig_b0)->seekEnd();
  
}


void _wrap_SetSparseMatIterator_M_cv_dbcbba478e71899d(cv::SparseMatIterator *_swig_go_0, cv::SparseMat *_swig_go_1) {
  cv::SparseMatIterator *arg1 = (cv::SparseMatIterator *) 0 ;
  cv::SparseMat *arg2 = (cv::SparseMat *) 0 ;
  
  arg1 = *(cv::SparseMatIterator **)&_swig_go_0; 
  arg2 = *(cv::SparseMat **)&_swig_go_1; 
  
  cv::SparseMatConstIterator *swig_b0 = (cv::SparseMatConstIterator *)arg1;
  if (swig_b0) (swig_b0)->m = (cv::SparseMat const *)arg2;
  
}


cv::SparseMat *_wrap_GetSparseMatIterator_M_cv_dbcbba478e71899d(cv::SparseMatIterator *_swig_go_0) {
  cv::SparseMatIterator *arg1 = (cv::SparseMatIterator *) 0 ;
  cv::SparseMat *result = 0 ;
  cv::SparseMat *_swig_go_result;
  
  arg1 = *(cv::SparseMatIterator **)&_swig_go_0; 
  
  cv::SparseMatConstIterator *swig_b0 = (cv::SparseMatConstIterator *)arg1;
  result = (cv::SparseMat *) ((swig_b0)->m);
  *(cv::SparseMat **)&_swig_go_result = (cv::SparseMat *)result; 
  return _swig_go_result;
}


void _wrap_SetSparseMatIterator_Hashidx_cv_dbcbba478e71899d(cv::SparseMatIterator *_swig_go_0, long long _swig_go_1) {
  cv::SparseMatIterator *arg1 = (cv::SparseMatIterator *) 0 ;
  size_t arg2 ;
  
  arg1 = *(cv::SparseMatIterator **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  
  cv::SparseMatConstIterator *swig_b0 = (cv::SparseMatConstIterator *)arg1;
  if (swig_b0) (swig_b0)->hashidx = arg2;
  
}


long long _wrap_GetSparseMatIterator_Hashidx_cv_dbcbba478e71899d(cv::SparseMatIterator *_swig_go_0) {
  cv::SparseMatIterator *arg1 = (cv::SparseMatIterator *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(cv::SparseMatIterator **)&_swig_go_0; 
  
  cv::SparseMatConstIterator *swig_b0 = (cv::SparseMatConstIterator *)arg1;
  result =  ((swig_b0)->hashidx);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetSparseMatIterator_Ptr_cv_dbcbba478e71899d(cv::SparseMatIterator *_swig_go_0, _gostring_ _swig_go_1) {
  cv::SparseMatIterator *arg1 = (cv::SparseMatIterator *) 0 ;
  uchar *arg2 = (uchar *) 0 ;
  
  arg1 = *(cv::SparseMatIterator **)&_swig_go_0; 
  arg2 = (uchar *)_swig_go_1.p; 
  
  cv::SparseMatConstIterator *swig_b0 = (cv::SparseMatConstIterator *)arg1;
  if (swig_b0) (swig_b0)->ptr = arg2;
  
}


_gostring_ _wrap_GetSparseMatIterator_Ptr_cv_dbcbba478e71899d(cv::SparseMatIterator *_swig_go_0) {
  cv::SparseMatIterator *arg1 = (cv::SparseMatIterator *) 0 ;
  uchar *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::SparseMatIterator **)&_swig_go_0; 
  
  cv::SparseMatConstIterator *swig_b0 = (cv::SparseMatConstIterator *)arg1;
  result = (uchar *) ((swig_b0)->ptr);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


cv::KDTree *_wrap_new_KDTree__SWIG_0_cv_dbcbba478e71899d() {
  cv::KDTree *result = 0 ;
  cv::KDTree *_swig_go_result;
  
  
  result = (cv::KDTree *)new cv::KDTree();
  *(cv::KDTree **)&_swig_go_result = (cv::KDTree *)result; 
  return _swig_go_result;
}


cv::KDTree *_wrap_new_KDTree__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, bool _swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  bool arg2 ;
  cv::KDTree *result = 0 ;
  cv::KDTree *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = (cv::KDTree *)new cv::KDTree((cv::_InputArray const &)*arg1,arg2);
  *(cv::KDTree **)&_swig_go_result = (cv::KDTree *)result; 
  return _swig_go_result;
}


cv::KDTree *_wrap_new_KDTree__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0) {
  cv::_InputArray *arg1 = 0 ;
  cv::KDTree *result = 0 ;
  cv::KDTree *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  result = (cv::KDTree *)new cv::KDTree((cv::_InputArray const &)*arg1);
  *(cv::KDTree **)&_swig_go_result = (cv::KDTree *)result; 
  return _swig_go_result;
}


cv::KDTree *_wrap_new_KDTree__SWIG_3_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, bool _swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  bool arg3 ;
  cv::KDTree *result = 0 ;
  cv::KDTree *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  result = (cv::KDTree *)new cv::KDTree((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,arg3);
  *(cv::KDTree **)&_swig_go_result = (cv::KDTree *)result; 
  return _swig_go_result;
}


cv::KDTree *_wrap_new_KDTree__SWIG_4_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::KDTree *result = 0 ;
  cv::KDTree *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  
  result = (cv::KDTree *)new cv::KDTree((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2);
  *(cv::KDTree **)&_swig_go_result = (cv::KDTree *)result; 
  return _swig_go_result;
}


void _wrap_KDTree_build__SWIG_0_cv_dbcbba478e71899d(cv::KDTree *_swig_go_0, cv::_InputArray *_swig_go_1, bool _swig_go_2) {
  cv::KDTree *arg1 = (cv::KDTree *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  bool arg3 ;
  
  arg1 = *(cv::KDTree **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  (arg1)->build((cv::_InputArray const &)*arg2,arg3);
  
}


void _wrap_KDTree_build__SWIG_1_cv_dbcbba478e71899d(cv::KDTree *_swig_go_0, cv::_InputArray *_swig_go_1) {
  cv::KDTree *arg1 = (cv::KDTree *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  
  arg1 = *(cv::KDTree **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  
  (arg1)->build((cv::_InputArray const &)*arg2);
  
}


void _wrap_KDTree_build__SWIG_2_cv_dbcbba478e71899d(cv::KDTree *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_InputArray *_swig_go_2, bool _swig_go_3) {
  cv::KDTree *arg1 = (cv::KDTree *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  bool arg4 ;
  
  arg1 = *(cv::KDTree **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = (bool)_swig_go_3; 
  
  (arg1)->build((cv::_InputArray const &)*arg2,(cv::_InputArray const &)*arg3,arg4);
  
}


void _wrap_KDTree_build__SWIG_3_cv_dbcbba478e71899d(cv::KDTree *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_InputArray *_swig_go_2) {
  cv::KDTree *arg1 = (cv::KDTree *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  
  arg1 = *(cv::KDTree **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  (arg1)->build((cv::_InputArray const &)*arg2,(cv::_InputArray const &)*arg3);
  
}


intgo _wrap_KDTree_findNearest__SWIG_0_cv_dbcbba478e71899d(cv::KDTree *_swig_go_0, cv::_InputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, cv::_OutputArray *_swig_go_4, cv::_OutputArray *_swig_go_5, cv::_OutputArray *_swig_go_6, cv::_OutputArray *_swig_go_7) {
  cv::KDTree *arg1 = (cv::KDTree *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  cv::_OutputArray *arg5 = 0 ;
  cv::_OutputArray *arg6 = 0 ;
  cv::_OutputArray *arg7 = 0 ;
  cv::_OutputArray *arg8 = 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::KDTree **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(cv::_OutputArray **)&_swig_go_4; 
  arg6 = *(cv::_OutputArray **)&_swig_go_5; 
  arg7 = *(cv::_OutputArray **)&_swig_go_6; 
  arg8 = *(cv::_OutputArray **)&_swig_go_7; 
  
  result = (int)((cv::KDTree const *)arg1)->findNearest((cv::_InputArray const &)*arg2,arg3,arg4,(cv::_OutputArray const &)*arg5,(cv::_OutputArray const &)*arg6,(cv::_OutputArray const &)*arg7,(cv::_OutputArray const &)*arg8);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_KDTree_findNearest__SWIG_1_cv_dbcbba478e71899d(cv::KDTree *_swig_go_0, cv::_InputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, cv::_OutputArray *_swig_go_4, cv::_OutputArray *_swig_go_5, cv::_OutputArray *_swig_go_6) {
  cv::KDTree *arg1 = (cv::KDTree *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  cv::_OutputArray *arg5 = 0 ;
  cv::_OutputArray *arg6 = 0 ;
  cv::_OutputArray *arg7 = 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::KDTree **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(cv::_OutputArray **)&_swig_go_4; 
  arg6 = *(cv::_OutputArray **)&_swig_go_5; 
  arg7 = *(cv::_OutputArray **)&_swig_go_6; 
  
  result = (int)((cv::KDTree const *)arg1)->findNearest((cv::_InputArray const &)*arg2,arg3,arg4,(cv::_OutputArray const &)*arg5,(cv::_OutputArray const &)*arg6,(cv::_OutputArray const &)*arg7);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_KDTree_findNearest__SWIG_2_cv_dbcbba478e71899d(cv::KDTree *_swig_go_0, cv::_InputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, cv::_OutputArray *_swig_go_4, cv::_OutputArray *_swig_go_5) {
  cv::KDTree *arg1 = (cv::KDTree *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  cv::_OutputArray *arg5 = 0 ;
  cv::_OutputArray *arg6 = 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::KDTree **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(cv::_OutputArray **)&_swig_go_4; 
  arg6 = *(cv::_OutputArray **)&_swig_go_5; 
  
  result = (int)((cv::KDTree const *)arg1)->findNearest((cv::_InputArray const &)*arg2,arg3,arg4,(cv::_OutputArray const &)*arg5,(cv::_OutputArray const &)*arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_KDTree_findNearest__SWIG_3_cv_dbcbba478e71899d(cv::KDTree *_swig_go_0, cv::_InputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, cv::_OutputArray *_swig_go_4) {
  cv::KDTree *arg1 = (cv::KDTree *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  cv::_OutputArray *arg5 = 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::KDTree **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(cv::_OutputArray **)&_swig_go_4; 
  
  result = (int)((cv::KDTree const *)arg1)->findNearest((cv::_InputArray const &)*arg2,arg3,arg4,(cv::_OutputArray const &)*arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_KDTree_findOrthoRange__SWIG_0_cv_dbcbba478e71899d(cv::KDTree *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::_OutputArray *_swig_go_3, cv::_OutputArray *_swig_go_4, cv::_OutputArray *_swig_go_5) {
  cv::KDTree *arg1 = (cv::KDTree *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  cv::_OutputArray *arg4 = 0 ;
  cv::_OutputArray *arg5 = 0 ;
  cv::_OutputArray *arg6 = 0 ;
  
  arg1 = *(cv::KDTree **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = *(cv::_OutputArray **)&_swig_go_3; 
  arg5 = *(cv::_OutputArray **)&_swig_go_4; 
  arg6 = *(cv::_OutputArray **)&_swig_go_5; 
  
  ((cv::KDTree const *)arg1)->findOrthoRange((cv::_InputArray const &)*arg2,(cv::_InputArray const &)*arg3,(cv::_OutputArray const &)*arg4,(cv::_OutputArray const &)*arg5,(cv::_OutputArray const &)*arg6);
  
}


void _wrap_KDTree_findOrthoRange__SWIG_1_cv_dbcbba478e71899d(cv::KDTree *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::_OutputArray *_swig_go_3, cv::_OutputArray *_swig_go_4) {
  cv::KDTree *arg1 = (cv::KDTree *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  cv::_OutputArray *arg4 = 0 ;
  cv::_OutputArray *arg5 = 0 ;
  
  arg1 = *(cv::KDTree **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = *(cv::_OutputArray **)&_swig_go_3; 
  arg5 = *(cv::_OutputArray **)&_swig_go_4; 
  
  ((cv::KDTree const *)arg1)->findOrthoRange((cv::_InputArray const &)*arg2,(cv::_InputArray const &)*arg3,(cv::_OutputArray const &)*arg4,(cv::_OutputArray const &)*arg5);
  
}


void _wrap_KDTree_findOrthoRange__SWIG_2_cv_dbcbba478e71899d(cv::KDTree *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::_OutputArray *_swig_go_3) {
  cv::KDTree *arg1 = (cv::KDTree *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  cv::_OutputArray *arg4 = 0 ;
  
  arg1 = *(cv::KDTree **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = *(cv::_OutputArray **)&_swig_go_3; 
  
  ((cv::KDTree const *)arg1)->findOrthoRange((cv::_InputArray const &)*arg2,(cv::_InputArray const &)*arg3,(cv::_OutputArray const &)*arg4);
  
}


void _wrap_KDTree_getPoints__SWIG_0_cv_dbcbba478e71899d(cv::KDTree *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, cv::_OutputArray *_swig_go_3) {
  cv::KDTree *arg1 = (cv::KDTree *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  cv::_OutputArray *arg4 = 0 ;
  
  arg1 = *(cv::KDTree **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = *(cv::_OutputArray **)&_swig_go_3; 
  
  ((cv::KDTree const *)arg1)->getPoints((cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,(cv::_OutputArray const &)*arg4);
  
}


void _wrap_KDTree_getPoints__SWIG_1_cv_dbcbba478e71899d(cv::KDTree *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2) {
  cv::KDTree *arg1 = (cv::KDTree *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  
  arg1 = *(cv::KDTree **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  ((cv::KDTree const *)arg1)->getPoints((cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3);
  
}


float *_wrap_KDTree_getPoint__SWIG_0_cv_dbcbba478e71899d(cv::KDTree *_swig_go_0, intgo _swig_go_1, intgo *_swig_go_2) {
  cv::KDTree *arg1 = (cv::KDTree *) 0 ;
  int arg2 ;
  int *arg3 = (int *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(cv::KDTree **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  
  result = (float *)((cv::KDTree const *)arg1)->getPoint(arg2,arg3);
  *(float **)&_swig_go_result = (float *)result; 
  return _swig_go_result;
}


float *_wrap_KDTree_getPoint__SWIG_1_cv_dbcbba478e71899d(cv::KDTree *_swig_go_0, intgo _swig_go_1) {
  cv::KDTree *arg1 = (cv::KDTree *) 0 ;
  int arg2 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(cv::KDTree **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (float *)((cv::KDTree const *)arg1)->getPoint(arg2);
  *(float **)&_swig_go_result = (float *)result; 
  return _swig_go_result;
}


intgo _wrap_KDTree_dims_cv_dbcbba478e71899d(cv::KDTree *_swig_go_0) {
  cv::KDTree *arg1 = (cv::KDTree *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::KDTree **)&_swig_go_0; 
  
  result = (int)((cv::KDTree const *)arg1)->dims();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_KDTree_nodes_set_cv_dbcbba478e71899d(cv::KDTree *_swig_go_0, std::vector< cv::KDTree::Node > *_swig_go_1) {
  cv::KDTree *arg1 = (cv::KDTree *) 0 ;
  std::vector< cv::KDTree::Node > *arg2 = (std::vector< cv::KDTree::Node > *) 0 ;
  
  arg1 = *(cv::KDTree **)&_swig_go_0; 
  arg2 = *(std::vector< cv::KDTree::Node > **)&_swig_go_1; 
  
  if (arg1) (arg1)->nodes = *arg2;
  
}


std::vector< cv::KDTree::Node > *_wrap_KDTree_nodes_get_cv_dbcbba478e71899d(cv::KDTree *_swig_go_0) {
  cv::KDTree *arg1 = (cv::KDTree *) 0 ;
  std::vector< cv::KDTree::Node > *result = 0 ;
  std::vector< cv::KDTree::Node > *_swig_go_result;
  
  arg1 = *(cv::KDTree **)&_swig_go_0; 
  
  result = (std::vector< cv::KDTree::Node > *)& ((arg1)->nodes);
  *(std::vector< cv::KDTree::Node > **)&_swig_go_result = (std::vector< cv::KDTree::Node > *)result; 
  return _swig_go_result;
}


void _wrap_KDTree_points_set_cv_dbcbba478e71899d(cv::KDTree *_swig_go_0, cv::Mat *_swig_go_1) {
  cv::KDTree *arg1 = (cv::KDTree *) 0 ;
  cv::Mat *arg2 = (cv::Mat *) 0 ;
  
  arg1 = *(cv::KDTree **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  
  if (arg1) (arg1)->points = *arg2;
  
}


void _wrap_KDTree_labels_set_cv_dbcbba478e71899d(cv::KDTree *_swig_go_0, std::vector< int > *_swig_go_1) {
  cv::KDTree *arg1 = (cv::KDTree *) 0 ;
  std::vector< int > *arg2 = (std::vector< int > *) 0 ;
  
  arg1 = *(cv::KDTree **)&_swig_go_0; 
  arg2 = *(std::vector< int > **)&_swig_go_1; 
  
  if (arg1) (arg1)->labels = *arg2;
  
}


std::vector< int > *_wrap_KDTree_labels_get_cv_dbcbba478e71899d(cv::KDTree *_swig_go_0) {
  cv::KDTree *arg1 = (cv::KDTree *) 0 ;
  std::vector< int > *result = 0 ;
  std::vector< int > *_swig_go_result;
  
  arg1 = *(cv::KDTree **)&_swig_go_0; 
  
  result = (std::vector< int > *)& ((arg1)->labels);
  *(std::vector< int > **)&_swig_go_result = (std::vector< int > *)result; 
  return _swig_go_result;
}


void _wrap_KDTree_maxDepth_set_cv_dbcbba478e71899d(cv::KDTree *_swig_go_0, intgo _swig_go_1) {
  cv::KDTree *arg1 = (cv::KDTree *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::KDTree **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->maxDepth = arg2;
  
}


intgo _wrap_KDTree_maxDepth_get_cv_dbcbba478e71899d(cv::KDTree *_swig_go_0) {
  cv::KDTree *arg1 = (cv::KDTree *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::KDTree **)&_swig_go_0; 
  
  result = (int) ((arg1)->maxDepth);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_KDTree_normType_set_cv_dbcbba478e71899d(cv::KDTree *_swig_go_0, intgo _swig_go_1) {
  cv::KDTree *arg1 = (cv::KDTree *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::KDTree **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->normType = arg2;
  
}


intgo _wrap_KDTree_normType_get_cv_dbcbba478e71899d(cv::KDTree *_swig_go_0) {
  cv::KDTree *arg1 = (cv::KDTree *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::KDTree **)&_swig_go_0; 
  
  result = (int) ((arg1)->normType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_KDTree_cv_dbcbba478e71899d(cv::KDTree *_swig_go_0) {
  cv::KDTree *arg1 = (cv::KDTree *) 0 ;
  
  arg1 = *(cv::KDTree **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_READ_FileStorage_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FileStorage::READ;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_WRITE_FileStorage_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FileStorage::WRITE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_APPEND_FileStorage_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FileStorage::APPEND;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_MEMORY_FileStorage_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FileStorage::MEMORY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_FORMAT_MASK_FileStorage_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FileStorage::FORMAT_MASK;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_FORMAT_AUTO_FileStorage_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FileStorage::FORMAT_AUTO;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_FORMAT_XML_FileStorage_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FileStorage::FORMAT_XML;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_FORMAT_YAML_FileStorage_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FileStorage::FORMAT_YAML;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_UNDEFINED_FileStorage_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FileStorage::UNDEFINED;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_VALUE_EXPECTED_FileStorage_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FileStorage::VALUE_EXPECTED;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_NAME_EXPECTED_FileStorage_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FileStorage::NAME_EXPECTED;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_INSIDE_MAP_FileStorage_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FileStorage::INSIDE_MAP;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


cv::FileStorage *_wrap_new_FileStorage__SWIG_0_cv_dbcbba478e71899d() {
  cv::FileStorage *result = 0 ;
  cv::FileStorage *_swig_go_result;
  
  
  result = (cv::FileStorage *)new cv::FileStorage();
  *(cv::FileStorage **)&_swig_go_result = (cv::FileStorage *)result; 
  return _swig_go_result;
}


cv::FileStorage *_wrap_new_FileStorage__SWIG_1_cv_dbcbba478e71899d(_gostring_ _swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2) {
  cv::string *arg1 = 0 ;
  int arg2 ;
  cv::string *arg3 = 0 ;
  cv::FileStorage *result = 0 ;
  cv::FileStorage *_swig_go_result;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  arg2 = (int)_swig_go_1; 
  
  cv::string arg3_str(_swig_go_2.p, _swig_go_2.n);
  arg3 = &arg3_str;
  
  
  result = (cv::FileStorage *)new cv::FileStorage((cv::string const &)*arg1,arg2,(cv::string const &)*arg3);
  *(cv::FileStorage **)&_swig_go_result = (cv::FileStorage *)result; 
  return _swig_go_result;
}


cv::FileStorage *_wrap_new_FileStorage__SWIG_2_cv_dbcbba478e71899d(_gostring_ _swig_go_0, intgo _swig_go_1) {
  cv::string *arg1 = 0 ;
  int arg2 ;
  cv::FileStorage *result = 0 ;
  cv::FileStorage *_swig_go_result;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  arg2 = (int)_swig_go_1; 
  
  result = (cv::FileStorage *)new cv::FileStorage((cv::string const &)*arg1,arg2);
  *(cv::FileStorage **)&_swig_go_result = (cv::FileStorage *)result; 
  return _swig_go_result;
}


cv::FileStorage *_wrap_new_FileStorage__SWIG_3_cv_dbcbba478e71899d(CvFileStorage *_swig_go_0) {
  CvFileStorage *arg1 = (CvFileStorage *) 0 ;
  cv::FileStorage *result = 0 ;
  cv::FileStorage *_swig_go_result;
  
  arg1 = *(CvFileStorage **)&_swig_go_0; 
  
  result = (cv::FileStorage *)new cv::FileStorage(arg1);
  *(cv::FileStorage **)&_swig_go_result = (cv::FileStorage *)result; 
  return _swig_go_result;
}


void _wrap_delete_FileStorage_cv_dbcbba478e71899d(cv::FileStorage *_swig_go_0) {
  cv::FileStorage *arg1 = (cv::FileStorage *) 0 ;
  
  arg1 = *(cv::FileStorage **)&_swig_go_0; 
  
  delete arg1;
  
}


bool _wrap_FileStorage_open__SWIG_0_cv_dbcbba478e71899d(cv::FileStorage *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3) {
  cv::FileStorage *arg1 = (cv::FileStorage *) 0 ;
  cv::string *arg2 = 0 ;
  int arg3 ;
  cv::string *arg4 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::FileStorage **)&_swig_go_0; 
  
  cv::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  arg3 = (int)_swig_go_2; 
  
  cv::string arg4_str(_swig_go_3.p, _swig_go_3.n);
  arg4 = &arg4_str;
  
  
  result = (bool)(arg1)->open((cv::string const &)*arg2,arg3,(cv::string const &)*arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_FileStorage_open__SWIG_1_cv_dbcbba478e71899d(cv::FileStorage *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  cv::FileStorage *arg1 = (cv::FileStorage *) 0 ;
  cv::string *arg2 = 0 ;
  int arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::FileStorage **)&_swig_go_0; 
  
  cv::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  arg3 = (int)_swig_go_2; 
  
  result = (bool)(arg1)->open((cv::string const &)*arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_FileStorage_isOpened_cv_dbcbba478e71899d(cv::FileStorage *_swig_go_0) {
  cv::FileStorage *arg1 = (cv::FileStorage *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::FileStorage **)&_swig_go_0; 
  
  result = (bool)((cv::FileStorage const *)arg1)->isOpened();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_FileStorage_release_cv_dbcbba478e71899d(cv::FileStorage *_swig_go_0) {
  cv::FileStorage *arg1 = (cv::FileStorage *) 0 ;
  
  arg1 = *(cv::FileStorage **)&_swig_go_0; 
  
  (arg1)->release();
  
}


_gostring_ _wrap_FileStorage_releaseAndGetString_cv_dbcbba478e71899d(cv::FileStorage *_swig_go_0) {
  cv::FileStorage *arg1 = (cv::FileStorage *) 0 ;
  cv::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::FileStorage **)&_swig_go_0; 
  
  result = (arg1)->releaseAndGetString();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


cv::FileNode *_wrap_FileStorage_getFirstTopLevelNode_cv_dbcbba478e71899d(cv::FileStorage *_swig_go_0) {
  cv::FileStorage *arg1 = (cv::FileStorage *) 0 ;
  cv::FileNode result;
  cv::FileNode *_swig_go_result;
  
  arg1 = *(cv::FileStorage **)&_swig_go_0; 
  
  result = ((cv::FileStorage const *)arg1)->getFirstTopLevelNode();
  *(cv::FileNode **)&_swig_go_result = new cv::FileNode(result); 
  return _swig_go_result;
}


cv::FileNode *_wrap_FileStorage_root__SWIG_0_cv_dbcbba478e71899d(cv::FileStorage *_swig_go_0, intgo _swig_go_1) {
  cv::FileStorage *arg1 = (cv::FileStorage *) 0 ;
  int arg2 ;
  cv::FileNode result;
  cv::FileNode *_swig_go_result;
  
  arg1 = *(cv::FileStorage **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = ((cv::FileStorage const *)arg1)->root(arg2);
  *(cv::FileNode **)&_swig_go_result = new cv::FileNode(result); 
  return _swig_go_result;
}


cv::FileNode *_wrap_FileStorage_root__SWIG_1_cv_dbcbba478e71899d(cv::FileStorage *_swig_go_0) {
  cv::FileStorage *arg1 = (cv::FileStorage *) 0 ;
  cv::FileNode result;
  cv::FileNode *_swig_go_result;
  
  arg1 = *(cv::FileStorage **)&_swig_go_0; 
  
  result = ((cv::FileStorage const *)arg1)->root();
  *(cv::FileNode **)&_swig_go_result = new cv::FileNode(result); 
  return _swig_go_result;
}


CvFileStorage *_wrap_FileStorage___ref____SWIG_0_cv_dbcbba478e71899d(cv::FileStorage *_swig_go_0) {
  cv::FileStorage *arg1 = (cv::FileStorage *) 0 ;
  CvFileStorage *result = 0 ;
  CvFileStorage *_swig_go_result;
  
  arg1 = *(cv::FileStorage **)&_swig_go_0; 
  
  result = (CvFileStorage *)(arg1)->operator *();
  *(CvFileStorage **)&_swig_go_result = (CvFileStorage *)result; 
  return _swig_go_result;
}


CvFileStorage *_wrap_FileStorage___ref____SWIG_1_cv_dbcbba478e71899d(cv::FileStorage *_swig_go_0) {
  cv::FileStorage *arg1 = (cv::FileStorage *) 0 ;
  CvFileStorage *result = 0 ;
  CvFileStorage *_swig_go_result;
  
  arg1 = *(cv::FileStorage **)&_swig_go_0; 
  
  result = (CvFileStorage *)((cv::FileStorage const *)arg1)->operator *();
  *(CvFileStorage **)&_swig_go_result = (CvFileStorage *)result; 
  return _swig_go_result;
}


void _wrap_FileStorage_writeRaw_cv_dbcbba478e71899d(cv::FileStorage *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, long long _swig_go_3) {
  cv::FileStorage *arg1 = (cv::FileStorage *) 0 ;
  cv::string *arg2 = 0 ;
  uchar *arg3 = (uchar *) 0 ;
  size_t arg4 ;
  
  arg1 = *(cv::FileStorage **)&_swig_go_0; 
  
  cv::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  arg3 = (uchar *)_swig_go_2.p; 
  arg4 = (size_t)_swig_go_3; 
  
  (arg1)->writeRaw((cv::string const &)*arg2,(uchar const *)arg3,arg4);
  
}


void _wrap_FileStorage_writeObj_cv_dbcbba478e71899d(cv::FileStorage *_swig_go_0, _gostring_ _swig_go_1, void *_swig_go_2) {
  cv::FileStorage *arg1 = (cv::FileStorage *) 0 ;
  cv::string *arg2 = 0 ;
  void *arg3 = (void *) 0 ;
  
  arg1 = *(cv::FileStorage **)&_swig_go_0; 
  
  cv::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  arg3 = *(void **)&_swig_go_2; 
  
  (arg1)->writeObj((cv::string const &)*arg2,(void const *)arg3);
  
}


_gostring_ _wrap_FileStorage_getDefaultObjectName_cv_dbcbba478e71899d(_gostring_ _swig_go_0) {
  cv::string *arg1 = 0 ;
  cv::string result;
  _gostring_ _swig_go_result;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  
  result = cv::FileStorage::getDefaultObjectName((std::string const &)*arg1);
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


void _wrap_FileStorage_fs_set_cv_dbcbba478e71899d(cv::FileStorage *_swig_go_0, cv::Ptr< CvFileStorage > *_swig_go_1) {
  cv::FileStorage *arg1 = (cv::FileStorage *) 0 ;
  cv::Ptr< CvFileStorage > *arg2 = (cv::Ptr< CvFileStorage > *) 0 ;
  
  arg1 = *(cv::FileStorage **)&_swig_go_0; 
  arg2 = *(cv::Ptr< CvFileStorage > **)&_swig_go_1; 
  
  if (arg1) (arg1)->fs = *arg2;
  
}


cv::Ptr< CvFileStorage > *_wrap_FileStorage_fs_get_cv_dbcbba478e71899d(cv::FileStorage *_swig_go_0) {
  cv::FileStorage *arg1 = (cv::FileStorage *) 0 ;
  cv::Ptr< CvFileStorage > *result = 0 ;
  cv::Ptr< CvFileStorage > *_swig_go_result;
  
  arg1 = *(cv::FileStorage **)&_swig_go_0; 
  
  result = (cv::Ptr< CvFileStorage > *)& ((arg1)->fs);
  *(cv::Ptr< CvFileStorage > **)&_swig_go_result = (cv::Ptr< CvFileStorage > *)result; 
  return _swig_go_result;
}


void _wrap_FileStorage_elname_set_cv_dbcbba478e71899d(cv::FileStorage *_swig_go_0, _gostring_ _swig_go_1) {
  cv::FileStorage *arg1 = (cv::FileStorage *) 0 ;
  cv::string *arg2 = 0 ;
  
  arg1 = *(cv::FileStorage **)&_swig_go_0; 
  
  cv::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  if (arg1) (arg1)->elname = *arg2;
  
}


_gostring_ _wrap_FileStorage_elname_get_cv_dbcbba478e71899d(cv::FileStorage *_swig_go_0) {
  cv::FileStorage *arg1 = (cv::FileStorage *) 0 ;
  cv::string *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::FileStorage **)&_swig_go_0; 
  
  result = (cv::string *) & ((arg1)->elname);
  _swig_go_result = Swig_AllocateString((*result).data(), (*result).length()); 
  return _swig_go_result;
}


void _wrap_FileStorage_structs_set_cv_dbcbba478e71899d(cv::FileStorage *_swig_go_0, std::vector< char > *_swig_go_1) {
  cv::FileStorage *arg1 = (cv::FileStorage *) 0 ;
  std::vector< char > *arg2 = (std::vector< char > *) 0 ;
  
  arg1 = *(cv::FileStorage **)&_swig_go_0; 
  arg2 = *(std::vector< char > **)&_swig_go_1; 
  
  if (arg1) (arg1)->structs = *arg2;
  
}


std::vector< char > *_wrap_FileStorage_structs_get_cv_dbcbba478e71899d(cv::FileStorage *_swig_go_0) {
  cv::FileStorage *arg1 = (cv::FileStorage *) 0 ;
  std::vector< char > *result = 0 ;
  std::vector< char > *_swig_go_result;
  
  arg1 = *(cv::FileStorage **)&_swig_go_0; 
  
  result = (std::vector< char > *)& ((arg1)->structs);
  *(std::vector< char > **)&_swig_go_result = (std::vector< char > *)result; 
  return _swig_go_result;
}


void _wrap_FileStorage_state_set_cv_dbcbba478e71899d(cv::FileStorage *_swig_go_0, intgo _swig_go_1) {
  cv::FileStorage *arg1 = (cv::FileStorage *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::FileStorage **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->state = arg2;
  
}


intgo _wrap_FileStorage_state_get_cv_dbcbba478e71899d(cv::FileStorage *_swig_go_0) {
  cv::FileStorage *arg1 = (cv::FileStorage *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::FileStorage **)&_swig_go_0; 
  
  result = (int) ((arg1)->state);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_NONE_FileNode_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FileNode::NONE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_INT_FileNode_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FileNode::INT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_REAL_FileNode_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FileNode::REAL;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_FLOAT_FileNode_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FileNode::FLOAT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_STR_FileNode_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FileNode::STR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_STRING_FileNode_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FileNode::STRING;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_REF_FileNode_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FileNode::REF;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_SEQ_FileNode_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FileNode::SEQ;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_MAP_FileNode_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FileNode::MAP;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_TYPE_MASK_FileNode_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FileNode::TYPE_MASK;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_FLOW_FileNode_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FileNode::FLOW;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_USER_FileNode_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FileNode::USER;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_EMPTY_FileNode_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FileNode::EMPTY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_NAMED_FileNode_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FileNode::NAMED;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


cv::FileNode *_wrap_new_FileNode__SWIG_0_cv_dbcbba478e71899d() {
  cv::FileNode *result = 0 ;
  cv::FileNode *_swig_go_result;
  
  
  result = (cv::FileNode *)new cv::FileNode();
  *(cv::FileNode **)&_swig_go_result = (cv::FileNode *)result; 
  return _swig_go_result;
}


cv::FileNode *_wrap_new_FileNode__SWIG_1_cv_dbcbba478e71899d(CvFileStorage *_swig_go_0, CvFileNode *_swig_go_1) {
  CvFileStorage *arg1 = (CvFileStorage *) 0 ;
  CvFileNode *arg2 = (CvFileNode *) 0 ;
  cv::FileNode *result = 0 ;
  cv::FileNode *_swig_go_result;
  
  arg1 = *(CvFileStorage **)&_swig_go_0; 
  arg2 = *(CvFileNode **)&_swig_go_1; 
  
  result = (cv::FileNode *)new cv::FileNode((CvFileStorage const *)arg1,(CvFileNode const *)arg2);
  *(cv::FileNode **)&_swig_go_result = (cv::FileNode *)result; 
  return _swig_go_result;
}


cv::FileNode *_wrap_new_FileNode__SWIG_2_cv_dbcbba478e71899d(cv::FileNode *_swig_go_0) {
  cv::FileNode *arg1 = 0 ;
  cv::FileNode *result = 0 ;
  cv::FileNode *_swig_go_result;
  
  arg1 = *(cv::FileNode **)&_swig_go_0; 
  
  result = (cv::FileNode *)new cv::FileNode((cv::FileNode const &)*arg1);
  *(cv::FileNode **)&_swig_go_result = (cv::FileNode *)result; 
  return _swig_go_result;
}


intgo _wrap_FileNode_Xtype_cv_dbcbba478e71899d(cv::FileNode *_swig_go_0) {
  cv::FileNode *arg1 = (cv::FileNode *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::FileNode **)&_swig_go_0; 
  
  result = (int)((cv::FileNode const *)arg1)->type();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_FileNode_empty_cv_dbcbba478e71899d(cv::FileNode *_swig_go_0) {
  cv::FileNode *arg1 = (cv::FileNode *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::FileNode **)&_swig_go_0; 
  
  result = (bool)((cv::FileNode const *)arg1)->empty();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_FileNode_isNone_cv_dbcbba478e71899d(cv::FileNode *_swig_go_0) {
  cv::FileNode *arg1 = (cv::FileNode *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::FileNode **)&_swig_go_0; 
  
  result = (bool)((cv::FileNode const *)arg1)->isNone();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_FileNode_isSeq_cv_dbcbba478e71899d(cv::FileNode *_swig_go_0) {
  cv::FileNode *arg1 = (cv::FileNode *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::FileNode **)&_swig_go_0; 
  
  result = (bool)((cv::FileNode const *)arg1)->isSeq();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_FileNode_isMap_cv_dbcbba478e71899d(cv::FileNode *_swig_go_0) {
  cv::FileNode *arg1 = (cv::FileNode *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::FileNode **)&_swig_go_0; 
  
  result = (bool)((cv::FileNode const *)arg1)->isMap();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_FileNode_isInt_cv_dbcbba478e71899d(cv::FileNode *_swig_go_0) {
  cv::FileNode *arg1 = (cv::FileNode *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::FileNode **)&_swig_go_0; 
  
  result = (bool)((cv::FileNode const *)arg1)->isInt();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_FileNode_isReal_cv_dbcbba478e71899d(cv::FileNode *_swig_go_0) {
  cv::FileNode *arg1 = (cv::FileNode *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::FileNode **)&_swig_go_0; 
  
  result = (bool)((cv::FileNode const *)arg1)->isReal();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_FileNode_isString_cv_dbcbba478e71899d(cv::FileNode *_swig_go_0) {
  cv::FileNode *arg1 = (cv::FileNode *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::FileNode **)&_swig_go_0; 
  
  result = (bool)((cv::FileNode const *)arg1)->isString();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_FileNode_isNamed_cv_dbcbba478e71899d(cv::FileNode *_swig_go_0) {
  cv::FileNode *arg1 = (cv::FileNode *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::FileNode **)&_swig_go_0; 
  
  result = (bool)((cv::FileNode const *)arg1)->isNamed();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_FileNode_name_cv_dbcbba478e71899d(cv::FileNode *_swig_go_0) {
  cv::FileNode *arg1 = (cv::FileNode *) 0 ;
  cv::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::FileNode **)&_swig_go_0; 
  
  result = ((cv::FileNode const *)arg1)->name();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


long long _wrap_FileNode_size_cv_dbcbba478e71899d(cv::FileNode *_swig_go_0) {
  cv::FileNode *arg1 = (cv::FileNode *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(cv::FileNode **)&_swig_go_0; 
  
  result = ((cv::FileNode const *)arg1)->size();
  _swig_go_result = result; 
  return _swig_go_result;
}


CvFileNode *_wrap_FileNode___ref____SWIG_0_cv_dbcbba478e71899d(cv::FileNode *_swig_go_0) {
  cv::FileNode *arg1 = (cv::FileNode *) 0 ;
  CvFileNode *result = 0 ;
  CvFileNode *_swig_go_result;
  
  arg1 = *(cv::FileNode **)&_swig_go_0; 
  
  result = (CvFileNode *)(arg1)->operator *();
  *(CvFileNode **)&_swig_go_result = (CvFileNode *)result; 
  return _swig_go_result;
}


CvFileNode *_wrap_FileNode___ref____SWIG_1_cv_dbcbba478e71899d(cv::FileNode *_swig_go_0) {
  cv::FileNode *arg1 = (cv::FileNode *) 0 ;
  CvFileNode *result = 0 ;
  CvFileNode *_swig_go_result;
  
  arg1 = *(cv::FileNode **)&_swig_go_0; 
  
  result = (CvFileNode *)((cv::FileNode const *)arg1)->operator *();
  *(CvFileNode **)&_swig_go_result = (CvFileNode *)result; 
  return _swig_go_result;
}


cv::FileNodeIterator *_wrap_FileNode_begin_cv_dbcbba478e71899d(cv::FileNode *_swig_go_0) {
  cv::FileNode *arg1 = (cv::FileNode *) 0 ;
  cv::FileNodeIterator result;
  cv::FileNodeIterator *_swig_go_result;
  
  arg1 = *(cv::FileNode **)&_swig_go_0; 
  
  result = ((cv::FileNode const *)arg1)->begin();
  *(cv::FileNodeIterator **)&_swig_go_result = new cv::FileNodeIterator(result); 
  return _swig_go_result;
}


cv::FileNodeIterator *_wrap_FileNode_end_cv_dbcbba478e71899d(cv::FileNode *_swig_go_0) {
  cv::FileNode *arg1 = (cv::FileNode *) 0 ;
  cv::FileNodeIterator result;
  cv::FileNodeIterator *_swig_go_result;
  
  arg1 = *(cv::FileNode **)&_swig_go_0; 
  
  result = ((cv::FileNode const *)arg1)->end();
  *(cv::FileNodeIterator **)&_swig_go_result = new cv::FileNodeIterator(result); 
  return _swig_go_result;
}


void _wrap_FileNode_readRaw_cv_dbcbba478e71899d(cv::FileNode *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, long long _swig_go_3) {
  cv::FileNode *arg1 = (cv::FileNode *) 0 ;
  cv::string *arg2 = 0 ;
  uchar *arg3 = (uchar *) 0 ;
  size_t arg4 ;
  
  arg1 = *(cv::FileNode **)&_swig_go_0; 
  
  cv::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  arg3 = (uchar *)_swig_go_2.p; 
  arg4 = (size_t)_swig_go_3; 
  
  ((cv::FileNode const *)arg1)->readRaw((cv::string const &)*arg2,arg3,arg4);
  
}


void *_wrap_FileNode_readObj_cv_dbcbba478e71899d(cv::FileNode *_swig_go_0) {
  cv::FileNode *arg1 = (cv::FileNode *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(cv::FileNode **)&_swig_go_0; 
  
  result = (void *)((cv::FileNode const *)arg1)->readObj();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_FileNode_fs_set_cv_dbcbba478e71899d(cv::FileNode *_swig_go_0, CvFileStorage *_swig_go_1) {
  cv::FileNode *arg1 = (cv::FileNode *) 0 ;
  CvFileStorage *arg2 = (CvFileStorage *) 0 ;
  
  arg1 = *(cv::FileNode **)&_swig_go_0; 
  arg2 = *(CvFileStorage **)&_swig_go_1; 
  
  if (arg1) (arg1)->fs = (CvFileStorage const *)arg2;
  
}


CvFileStorage *_wrap_FileNode_fs_get_cv_dbcbba478e71899d(cv::FileNode *_swig_go_0) {
  cv::FileNode *arg1 = (cv::FileNode *) 0 ;
  CvFileStorage *result = 0 ;
  CvFileStorage *_swig_go_result;
  
  arg1 = *(cv::FileNode **)&_swig_go_0; 
  
  result = (CvFileStorage *) ((arg1)->fs);
  *(CvFileStorage **)&_swig_go_result = (CvFileStorage *)result; 
  return _swig_go_result;
}


void _wrap_FileNode_node_set_cv_dbcbba478e71899d(cv::FileNode *_swig_go_0, CvFileNode *_swig_go_1) {
  cv::FileNode *arg1 = (cv::FileNode *) 0 ;
  CvFileNode *arg2 = (CvFileNode *) 0 ;
  
  arg1 = *(cv::FileNode **)&_swig_go_0; 
  arg2 = *(CvFileNode **)&_swig_go_1; 
  
  if (arg1) (arg1)->node = (CvFileNode const *)arg2;
  
}


CvFileNode *_wrap_FileNode_node_get_cv_dbcbba478e71899d(cv::FileNode *_swig_go_0) {
  cv::FileNode *arg1 = (cv::FileNode *) 0 ;
  CvFileNode *result = 0 ;
  CvFileNode *_swig_go_result;
  
  arg1 = *(cv::FileNode **)&_swig_go_0; 
  
  result = (CvFileNode *) ((arg1)->node);
  *(CvFileNode **)&_swig_go_result = (CvFileNode *)result; 
  return _swig_go_result;
}


void _wrap_delete_FileNode_cv_dbcbba478e71899d(cv::FileNode *_swig_go_0) {
  cv::FileNode *arg1 = (cv::FileNode *) 0 ;
  
  arg1 = *(cv::FileNode **)&_swig_go_0; 
  
  delete arg1;
  
}


cv::FileNodeIterator *_wrap_new_FileNodeIterator__SWIG_0_cv_dbcbba478e71899d() {
  cv::FileNodeIterator *result = 0 ;
  cv::FileNodeIterator *_swig_go_result;
  
  
  result = (cv::FileNodeIterator *)new cv::FileNodeIterator();
  *(cv::FileNodeIterator **)&_swig_go_result = (cv::FileNodeIterator *)result; 
  return _swig_go_result;
}


cv::FileNodeIterator *_wrap_new_FileNodeIterator__SWIG_1_cv_dbcbba478e71899d(CvFileStorage *_swig_go_0, CvFileNode *_swig_go_1, long long _swig_go_2) {
  CvFileStorage *arg1 = (CvFileStorage *) 0 ;
  CvFileNode *arg2 = (CvFileNode *) 0 ;
  size_t arg3 ;
  cv::FileNodeIterator *result = 0 ;
  cv::FileNodeIterator *_swig_go_result;
  
  arg1 = *(CvFileStorage **)&_swig_go_0; 
  arg2 = *(CvFileNode **)&_swig_go_1; 
  arg3 = (size_t)_swig_go_2; 
  
  result = (cv::FileNodeIterator *)new cv::FileNodeIterator((CvFileStorage const *)arg1,(CvFileNode const *)arg2,arg3);
  *(cv::FileNodeIterator **)&_swig_go_result = (cv::FileNodeIterator *)result; 
  return _swig_go_result;
}


cv::FileNodeIterator *_wrap_new_FileNodeIterator__SWIG_2_cv_dbcbba478e71899d(CvFileStorage *_swig_go_0, CvFileNode *_swig_go_1) {
  CvFileStorage *arg1 = (CvFileStorage *) 0 ;
  CvFileNode *arg2 = (CvFileNode *) 0 ;
  cv::FileNodeIterator *result = 0 ;
  cv::FileNodeIterator *_swig_go_result;
  
  arg1 = *(CvFileStorage **)&_swig_go_0; 
  arg2 = *(CvFileNode **)&_swig_go_1; 
  
  result = (cv::FileNodeIterator *)new cv::FileNodeIterator((CvFileStorage const *)arg1,(CvFileNode const *)arg2);
  *(cv::FileNodeIterator **)&_swig_go_result = (cv::FileNodeIterator *)result; 
  return _swig_go_result;
}


cv::FileNodeIterator *_wrap_new_FileNodeIterator__SWIG_3_cv_dbcbba478e71899d(cv::FileNodeIterator *_swig_go_0) {
  cv::FileNodeIterator *arg1 = 0 ;
  cv::FileNodeIterator *result = 0 ;
  cv::FileNodeIterator *_swig_go_result;
  
  arg1 = *(cv::FileNodeIterator **)&_swig_go_0; 
  
  result = (cv::FileNodeIterator *)new cv::FileNodeIterator((cv::FileNodeIterator const &)*arg1);
  *(cv::FileNodeIterator **)&_swig_go_result = (cv::FileNodeIterator *)result; 
  return _swig_go_result;
}


cv::FileNode *_wrap_FileNodeIterator___ref___cv_dbcbba478e71899d(cv::FileNodeIterator *_swig_go_0) {
  cv::FileNodeIterator *arg1 = (cv::FileNodeIterator *) 0 ;
  cv::FileNode result;
  cv::FileNode *_swig_go_result;
  
  arg1 = *(cv::FileNodeIterator **)&_swig_go_0; 
  
  result = ((cv::FileNodeIterator const *)arg1)->operator *();
  *(cv::FileNode **)&_swig_go_result = new cv::FileNode(result); 
  return _swig_go_result;
}


cv::FileNode *_wrap_FileNodeIterator___deref___cv_dbcbba478e71899d(cv::FileNodeIterator *_swig_go_0) {
  cv::FileNodeIterator *arg1 = (cv::FileNodeIterator *) 0 ;
  cv::FileNode result;
  cv::FileNode *_swig_go_result;
  
  arg1 = *(cv::FileNodeIterator **)&_swig_go_0; 
  
  result = ((cv::FileNodeIterator const *)arg1)->operator ->();
  *(cv::FileNode **)&_swig_go_result = new cv::FileNode(result); 
  return _swig_go_result;
}


cv::FileNodeIterator *_wrap_FileNodeIterator_readRaw__SWIG_0_cv_dbcbba478e71899d(cv::FileNodeIterator *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, long long _swig_go_3) {
  cv::FileNodeIterator *arg1 = (cv::FileNodeIterator *) 0 ;
  cv::string *arg2 = 0 ;
  uchar *arg3 = (uchar *) 0 ;
  size_t arg4 ;
  cv::FileNodeIterator *result = 0 ;
  cv::FileNodeIterator *_swig_go_result;
  
  arg1 = *(cv::FileNodeIterator **)&_swig_go_0; 
  
  cv::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  arg3 = (uchar *)_swig_go_2.p; 
  arg4 = (size_t)_swig_go_3; 
  
  result = (cv::FileNodeIterator *) &(arg1)->readRaw((cv::string const &)*arg2,arg3,arg4);
  *(cv::FileNodeIterator **)&_swig_go_result = result; 
  return _swig_go_result;
}


cv::FileNodeIterator *_wrap_FileNodeIterator_readRaw__SWIG_1_cv_dbcbba478e71899d(cv::FileNodeIterator *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2) {
  cv::FileNodeIterator *arg1 = (cv::FileNodeIterator *) 0 ;
  cv::string *arg2 = 0 ;
  uchar *arg3 = (uchar *) 0 ;
  cv::FileNodeIterator *result = 0 ;
  cv::FileNodeIterator *_swig_go_result;
  
  arg1 = *(cv::FileNodeIterator **)&_swig_go_0; 
  
  cv::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  arg3 = (uchar *)_swig_go_2.p; 
  
  result = (cv::FileNodeIterator *) &(arg1)->readRaw((cv::string const &)*arg2,arg3);
  *(cv::FileNodeIterator **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_FileNodeIterator_fs_set_cv_dbcbba478e71899d(cv::FileNodeIterator *_swig_go_0, CvFileStorage *_swig_go_1) {
  cv::FileNodeIterator *arg1 = (cv::FileNodeIterator *) 0 ;
  CvFileStorage *arg2 = (CvFileStorage *) 0 ;
  
  arg1 = *(cv::FileNodeIterator **)&_swig_go_0; 
  arg2 = *(CvFileStorage **)&_swig_go_1; 
  
  if (arg1) (arg1)->fs = (CvFileStorage const *)arg2;
  
}


CvFileStorage *_wrap_FileNodeIterator_fs_get_cv_dbcbba478e71899d(cv::FileNodeIterator *_swig_go_0) {
  cv::FileNodeIterator *arg1 = (cv::FileNodeIterator *) 0 ;
  CvFileStorage *result = 0 ;
  CvFileStorage *_swig_go_result;
  
  arg1 = *(cv::FileNodeIterator **)&_swig_go_0; 
  
  result = (CvFileStorage *) ((arg1)->fs);
  *(CvFileStorage **)&_swig_go_result = (CvFileStorage *)result; 
  return _swig_go_result;
}


void _wrap_FileNodeIterator_container_set_cv_dbcbba478e71899d(cv::FileNodeIterator *_swig_go_0, CvFileNode *_swig_go_1) {
  cv::FileNodeIterator *arg1 = (cv::FileNodeIterator *) 0 ;
  CvFileNode *arg2 = (CvFileNode *) 0 ;
  
  arg1 = *(cv::FileNodeIterator **)&_swig_go_0; 
  arg2 = *(CvFileNode **)&_swig_go_1; 
  
  if (arg1) (arg1)->container = (CvFileNode const *)arg2;
  
}


CvFileNode *_wrap_FileNodeIterator_container_get_cv_dbcbba478e71899d(cv::FileNodeIterator *_swig_go_0) {
  cv::FileNodeIterator *arg1 = (cv::FileNodeIterator *) 0 ;
  CvFileNode *result = 0 ;
  CvFileNode *_swig_go_result;
  
  arg1 = *(cv::FileNodeIterator **)&_swig_go_0; 
  
  result = (CvFileNode *) ((arg1)->container);
  *(CvFileNode **)&_swig_go_result = (CvFileNode *)result; 
  return _swig_go_result;
}


void _wrap_FileNodeIterator_reader_set_cv_dbcbba478e71899d(cv::FileNodeIterator *_swig_go_0, CvSeqReader *_swig_go_1) {
  cv::FileNodeIterator *arg1 = (cv::FileNodeIterator *) 0 ;
  CvSeqReader *arg2 = (CvSeqReader *) 0 ;
  
  arg1 = *(cv::FileNodeIterator **)&_swig_go_0; 
  arg2 = *(CvSeqReader **)&_swig_go_1; 
  
  if (arg1) (arg1)->reader = *arg2;
  
}


CvSeqReader *_wrap_FileNodeIterator_reader_get_cv_dbcbba478e71899d(cv::FileNodeIterator *_swig_go_0) {
  cv::FileNodeIterator *arg1 = (cv::FileNodeIterator *) 0 ;
  CvSeqReader *result = 0 ;
  CvSeqReader *_swig_go_result;
  
  arg1 = *(cv::FileNodeIterator **)&_swig_go_0; 
  
  result = (CvSeqReader *)& ((arg1)->reader);
  *(CvSeqReader **)&_swig_go_result = (CvSeqReader *)result; 
  return _swig_go_result;
}


void _wrap_FileNodeIterator_remaining_set_cv_dbcbba478e71899d(cv::FileNodeIterator *_swig_go_0, long long _swig_go_1) {
  cv::FileNodeIterator *arg1 = (cv::FileNodeIterator *) 0 ;
  size_t arg2 ;
  
  arg1 = *(cv::FileNodeIterator **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  
  if (arg1) (arg1)->remaining = arg2;
  
}


long long _wrap_FileNodeIterator_remaining_get_cv_dbcbba478e71899d(cv::FileNodeIterator *_swig_go_0) {
  cv::FileNodeIterator *arg1 = (cv::FileNodeIterator *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(cv::FileNodeIterator **)&_swig_go_0; 
  
  result =  ((arg1)->remaining);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_FileNodeIterator_cv_dbcbba478e71899d(cv::FileNodeIterator *_swig_go_0) {
  cv::FileNodeIterator *arg1 = (cv::FileNodeIterator *) 0 ;
  
  arg1 = *(cv::FileNodeIterator **)&_swig_go_0; 
  
  delete arg1;
  
}


cv::AlgorithmInfo *_wrap_new_AlgorithmInfo_cv_dbcbba478e71899d(_gostring_ _swig_go_0, void** _swig_go_1) {
  cv::string *arg1 = 0 ;
  cv::Algorithm::Constructor arg2 = (cv::Algorithm::Constructor) 0 ;
  cv::AlgorithmInfo *result = 0 ;
  cv::AlgorithmInfo *_swig_go_result;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  arg2 = *(cv::Algorithm::Constructor *)&_swig_go_1; 
  
  result = (cv::AlgorithmInfo *)new cv::AlgorithmInfo((cv::string const &)*arg1,arg2);
  *(cv::AlgorithmInfo **)&_swig_go_result = (cv::AlgorithmInfo *)result; 
  return _swig_go_result;
}


void _wrap_delete_AlgorithmInfo_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_AlgorithmInfo_get_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, intgo _swig_go_3, void *_swig_go_4) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = (cv::Algorithm *) 0 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  void *arg5 = (void *) 0 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(void **)&_swig_go_4; 
  
  ((cv::AlgorithmInfo const *)arg1)->get((cv::Algorithm const *)arg2,(char const *)arg3,arg4,arg5);
  
}


void _wrap_AlgorithmInfo_addParam___SWIG_0_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, intgo _swig_go_3, void *_swig_go_4, bool _swig_go_5, void* _swig_go_6, cv::Algorithm::Setter _swig_go_7, _gostring_ _swig_go_8) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  void *arg5 = (void *) 0 ;
  bool arg6 ;
  int (Algorithm::*arg7)() ;
  cv::Algorithm::Setter arg8 ;
  cv::string *arg9 = 0 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(void **)&_swig_go_4; 
  arg6 = (bool)_swig_go_5; 
  arg7 = *(int (Algorithm::**)())&_swig_go_6; 
  arg8 = *(cv::Algorithm::Setter *)_swig_go_7; 
  
  cv::string arg9_str(_swig_go_8.p, _swig_go_8.n);
  arg9 = &arg9_str;
  
  
  (arg1)->addParam_(*arg2,(char const *)arg3,arg4,arg5,arg6,arg7,arg8,(cv::string const &)*arg9);
  
}


void _wrap_AlgorithmInfo_addParam___SWIG_1_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, intgo _swig_go_3, void *_swig_go_4, bool _swig_go_5, void* _swig_go_6, cv::Algorithm::Setter _swig_go_7) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  void *arg5 = (void *) 0 ;
  bool arg6 ;
  int (Algorithm::*arg7)() ;
  cv::Algorithm::Setter arg8 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(void **)&_swig_go_4; 
  arg6 = (bool)_swig_go_5; 
  arg7 = *(int (Algorithm::**)())&_swig_go_6; 
  arg8 = *(cv::Algorithm::Setter *)_swig_go_7; 
  
  (arg1)->addParam_(*arg2,(char const *)arg3,arg4,arg5,arg6,arg7,arg8);
  
}


_gostring_ _wrap_AlgorithmInfo_paramHelp_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, _gostring_ _swig_go_1) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  cv::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = (char *)_swig_go_1.p; 
  
  result = ((cv::AlgorithmInfo const *)arg1)->paramHelp((char const *)arg2);
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


intgo _wrap_AlgorithmInfo_paramType_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, _gostring_ _swig_go_1) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = (char *)_swig_go_1.p; 
  
  result = (int)((cv::AlgorithmInfo const *)arg1)->paramType((char const *)arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_AlgorithmInfo_getParams_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, std::vector< std::string > *_swig_go_1) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  std::vector< cv::string > *arg2 = 0 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(std::vector< cv::string > **)&_swig_go_1; 
  
  ((cv::AlgorithmInfo const *)arg1)->getParams(*arg2);
  
}


void _wrap_AlgorithmInfo_write_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, cv::FileStorage *_swig_go_2) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = (cv::Algorithm *) 0 ;
  cv::FileStorage *arg3 = 0 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = *(cv::FileStorage **)&_swig_go_2; 
  
  ((cv::AlgorithmInfo const *)arg1)->write((cv::Algorithm const *)arg2,*arg3);
  
}


void _wrap_AlgorithmInfo_read_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, cv::FileNode *_swig_go_2) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = (cv::Algorithm *) 0 ;
  cv::FileNode *arg3 = 0 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = *(cv::FileNode **)&_swig_go_2; 
  
  ((cv::AlgorithmInfo const *)arg1)->read(arg2,(cv::FileNode const &)*arg3);
  
}


_gostring_ _wrap_AlgorithmInfo_name_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  
  result = ((cv::AlgorithmInfo const *)arg1)->name();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


void _wrap_AlgorithmInfo_addParam__SWIG_0_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, int *_swig_go_3, bool _swig_go_4, void* _swig_go_5, void* _swig_go_6, _gostring_ _swig_go_7) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  int *arg4 = 0 ;
  bool arg5 ;
  int (Algorithm::*arg6)() ;
  void (Algorithm::*arg7)(int) ;
  cv::string *arg8 = 0 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(int **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(int (Algorithm::**)())_swig_go_5; 
  arg7 = *(void (Algorithm::**)(int))_swig_go_6; 
  
  cv::string arg8_str(_swig_go_7.p, _swig_go_7.n);
  arg8 = &arg8_str;
  
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6,arg7,(cv::string const &)*arg8);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_1_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, int *_swig_go_3, bool _swig_go_4, void* _swig_go_5, void* _swig_go_6) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  int *arg4 = 0 ;
  bool arg5 ;
  int (Algorithm::*arg6)() ;
  void (Algorithm::*arg7)(int) ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(int **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(int (Algorithm::**)())_swig_go_5; 
  arg7 = *(void (Algorithm::**)(int))_swig_go_6; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6,arg7);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_2_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, int *_swig_go_3, bool _swig_go_4, void* _swig_go_5) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  int *arg4 = 0 ;
  bool arg5 ;
  int (Algorithm::*arg6)() ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(int **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(int (Algorithm::**)())_swig_go_5; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_3_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, int *_swig_go_3, bool _swig_go_4) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  int *arg4 = 0 ;
  bool arg5 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(int **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_4_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, int *_swig_go_3) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  int *arg4 = 0 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(int **)&_swig_go_3; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_5_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, short *_swig_go_3, bool _swig_go_4, void* _swig_go_5, void* _swig_go_6, _gostring_ _swig_go_7) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  short *arg4 = 0 ;
  bool arg5 ;
  int (Algorithm::*arg6)() ;
  void (Algorithm::*arg7)(int) ;
  cv::string *arg8 = 0 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(short **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(int (Algorithm::**)())_swig_go_5; 
  arg7 = *(void (Algorithm::**)(int))_swig_go_6; 
  
  cv::string arg8_str(_swig_go_7.p, _swig_go_7.n);
  arg8 = &arg8_str;
  
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6,arg7,(cv::string const &)*arg8);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_6_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, short *_swig_go_3, bool _swig_go_4, void* _swig_go_5, void* _swig_go_6) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  short *arg4 = 0 ;
  bool arg5 ;
  int (Algorithm::*arg6)() ;
  void (Algorithm::*arg7)(int) ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(short **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(int (Algorithm::**)())_swig_go_5; 
  arg7 = *(void (Algorithm::**)(int))_swig_go_6; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6,arg7);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_7_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, short *_swig_go_3, bool _swig_go_4, void* _swig_go_5) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  short *arg4 = 0 ;
  bool arg5 ;
  int (Algorithm::*arg6)() ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(short **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(int (Algorithm::**)())_swig_go_5; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_8_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, short *_swig_go_3, bool _swig_go_4) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  short *arg4 = 0 ;
  bool arg5 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(short **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_9_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, short *_swig_go_3) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  short *arg4 = 0 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(short **)&_swig_go_3; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_10_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, bool *_swig_go_3, bool _swig_go_4, void* _swig_go_5, void* _swig_go_6, _gostring_ _swig_go_7) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  bool *arg4 = 0 ;
  bool arg5 ;
  int (Algorithm::*arg6)() ;
  void (Algorithm::*arg7)(int) ;
  cv::string *arg8 = 0 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(bool **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(int (Algorithm::**)())_swig_go_5; 
  arg7 = *(void (Algorithm::**)(int))_swig_go_6; 
  
  cv::string arg8_str(_swig_go_7.p, _swig_go_7.n);
  arg8 = &arg8_str;
  
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6,arg7,(cv::string const &)*arg8);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_11_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, bool *_swig_go_3, bool _swig_go_4, void* _swig_go_5, void* _swig_go_6) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  bool *arg4 = 0 ;
  bool arg5 ;
  int (Algorithm::*arg6)() ;
  void (Algorithm::*arg7)(int) ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(bool **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(int (Algorithm::**)())_swig_go_5; 
  arg7 = *(void (Algorithm::**)(int))_swig_go_6; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6,arg7);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_12_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, bool *_swig_go_3, bool _swig_go_4, void* _swig_go_5) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  bool *arg4 = 0 ;
  bool arg5 ;
  int (Algorithm::*arg6)() ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(bool **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(int (Algorithm::**)())_swig_go_5; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_13_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, bool *_swig_go_3, bool _swig_go_4) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  bool *arg4 = 0 ;
  bool arg5 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(bool **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_14_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, bool *_swig_go_3) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  bool *arg4 = 0 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(bool **)&_swig_go_3; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_15_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, double *_swig_go_3, bool _swig_go_4, void* _swig_go_5, void* _swig_go_6, _gostring_ _swig_go_7) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  double *arg4 = 0 ;
  bool arg5 ;
  double (Algorithm::*arg6)() ;
  void (Algorithm::*arg7)(double) ;
  cv::string *arg8 = 0 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(double **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(double (Algorithm::**)())_swig_go_5; 
  arg7 = *(void (Algorithm::**)(double))_swig_go_6; 
  
  cv::string arg8_str(_swig_go_7.p, _swig_go_7.n);
  arg8 = &arg8_str;
  
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6,arg7,(cv::string const &)*arg8);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_16_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, double *_swig_go_3, bool _swig_go_4, void* _swig_go_5, void* _swig_go_6) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  double *arg4 = 0 ;
  bool arg5 ;
  double (Algorithm::*arg6)() ;
  void (Algorithm::*arg7)(double) ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(double **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(double (Algorithm::**)())_swig_go_5; 
  arg7 = *(void (Algorithm::**)(double))_swig_go_6; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6,arg7);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_17_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, double *_swig_go_3, bool _swig_go_4, void* _swig_go_5) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  double *arg4 = 0 ;
  bool arg5 ;
  double (Algorithm::*arg6)() ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(double **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(double (Algorithm::**)())_swig_go_5; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_18_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, double *_swig_go_3, bool _swig_go_4) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  double *arg4 = 0 ;
  bool arg5 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(double **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_19_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, double *_swig_go_3) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  double *arg4 = 0 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(double **)&_swig_go_3; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_20_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, cv::string *_swig_go_3, bool _swig_go_4, void* _swig_go_5, void* _swig_go_6, _gostring_ _swig_go_7) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  cv::string *arg4 = 0 ;
  bool arg5 ;
  cv::string (Algorithm::*arg6)() ;
  void (Algorithm::*arg7)(cv::string const &) ;
  cv::string *arg8 = 0 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(cv::string **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(cv::string (Algorithm::**)())_swig_go_5; 
  arg7 = *(void (Algorithm::**)(cv::string const &))_swig_go_6; 
  
  cv::string arg8_str(_swig_go_7.p, _swig_go_7.n);
  arg8 = &arg8_str;
  
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6,arg7,(cv::string const &)*arg8);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_21_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, cv::string *_swig_go_3, bool _swig_go_4, void* _swig_go_5, void* _swig_go_6) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  cv::string *arg4 = 0 ;
  bool arg5 ;
  cv::string (Algorithm::*arg6)() ;
  void (Algorithm::*arg7)(cv::string const &) ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(cv::string **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(cv::string (Algorithm::**)())_swig_go_5; 
  arg7 = *(void (Algorithm::**)(cv::string const &))_swig_go_6; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6,arg7);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_22_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, cv::string *_swig_go_3, bool _swig_go_4, void* _swig_go_5) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  cv::string *arg4 = 0 ;
  bool arg5 ;
  cv::string (Algorithm::*arg6)() ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(cv::string **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(cv::string (Algorithm::**)())_swig_go_5; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_23_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, cv::string *_swig_go_3, bool _swig_go_4) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  cv::string *arg4 = 0 ;
  bool arg5 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(cv::string **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_24_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, cv::string *_swig_go_3) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  cv::string *arg4 = 0 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(cv::string **)&_swig_go_3; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_25_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, cv::Mat *_swig_go_3, bool _swig_go_4, void* _swig_go_5, void* _swig_go_6, _gostring_ _swig_go_7) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  cv::Mat *arg4 = 0 ;
  bool arg5 ;
  cv::Mat (Algorithm::*arg6)() ;
  void (Algorithm::*arg7)(cv::Mat const &) ;
  cv::string *arg8 = 0 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(cv::Mat **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(cv::Mat (Algorithm::**)())_swig_go_5; 
  arg7 = *(void (Algorithm::**)(cv::Mat const &))_swig_go_6; 
  
  cv::string arg8_str(_swig_go_7.p, _swig_go_7.n);
  arg8 = &arg8_str;
  
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6,arg7,(cv::string const &)*arg8);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_26_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, cv::Mat *_swig_go_3, bool _swig_go_4, void* _swig_go_5, void* _swig_go_6) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  cv::Mat *arg4 = 0 ;
  bool arg5 ;
  cv::Mat (Algorithm::*arg6)() ;
  void (Algorithm::*arg7)(cv::Mat const &) ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(cv::Mat **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(cv::Mat (Algorithm::**)())_swig_go_5; 
  arg7 = *(void (Algorithm::**)(cv::Mat const &))_swig_go_6; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6,arg7);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_27_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, cv::Mat *_swig_go_3, bool _swig_go_4, void* _swig_go_5) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  cv::Mat *arg4 = 0 ;
  bool arg5 ;
  cv::Mat (Algorithm::*arg6)() ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(cv::Mat **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(cv::Mat (Algorithm::**)())_swig_go_5; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_28_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, cv::Mat *_swig_go_3, bool _swig_go_4) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  cv::Mat *arg4 = 0 ;
  bool arg5 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(cv::Mat **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_29_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, cv::Mat *_swig_go_3) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  cv::Mat *arg4 = 0 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(cv::Mat **)&_swig_go_3; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_30_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, std::vector< cv::Mat > *_swig_go_3, bool _swig_go_4, void* _swig_go_5, void* _swig_go_6, _gostring_ _swig_go_7) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  std::vector< cv::Mat > *arg4 = 0 ;
  bool arg5 ;
  std::vector< cv::Mat > (Algorithm::*arg6)() ;
  void (Algorithm::*arg7)(std::vector< cv::Mat > const &) ;
  cv::string *arg8 = 0 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(std::vector< cv::Mat > **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(std::vector< cv::Mat > (Algorithm::**)())_swig_go_5; 
  arg7 = *(void (Algorithm::**)(std::vector< cv::Mat > const &))_swig_go_6; 
  
  cv::string arg8_str(_swig_go_7.p, _swig_go_7.n);
  arg8 = &arg8_str;
  
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6,arg7,(cv::string const &)*arg8);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_31_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, std::vector< cv::Mat > *_swig_go_3, bool _swig_go_4, void* _swig_go_5, void* _swig_go_6) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  std::vector< cv::Mat > *arg4 = 0 ;
  bool arg5 ;
  std::vector< cv::Mat > (Algorithm::*arg6)() ;
  void (Algorithm::*arg7)(std::vector< cv::Mat > const &) ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(std::vector< cv::Mat > **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(std::vector< cv::Mat > (Algorithm::**)())_swig_go_5; 
  arg7 = *(void (Algorithm::**)(std::vector< cv::Mat > const &))_swig_go_6; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6,arg7);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_32_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, std::vector< cv::Mat > *_swig_go_3, bool _swig_go_4, void* _swig_go_5) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  std::vector< cv::Mat > *arg4 = 0 ;
  bool arg5 ;
  std::vector< cv::Mat > (Algorithm::*arg6)() ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(std::vector< cv::Mat > **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(std::vector< cv::Mat > (Algorithm::**)())_swig_go_5; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_33_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, std::vector< cv::Mat > *_swig_go_3, bool _swig_go_4) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  std::vector< cv::Mat > *arg4 = 0 ;
  bool arg5 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(std::vector< cv::Mat > **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_34_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, std::vector< cv::Mat > *_swig_go_3) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  std::vector< cv::Mat > *arg4 = 0 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(std::vector< cv::Mat > **)&_swig_go_3; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_35_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, cv::Ptr< cv::Algorithm > *_swig_go_3, bool _swig_go_4, void* _swig_go_5, void* _swig_go_6, _gostring_ _swig_go_7) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  cv::Ptr< cv::Algorithm > *arg4 = 0 ;
  bool arg5 ;
  cv::Ptr< cv::Algorithm > (Algorithm::*arg6)() ;
  void (Algorithm::*arg7)(cv::Ptr< cv::Algorithm > const &) ;
  cv::string *arg8 = 0 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(cv::Ptr< cv::Algorithm > **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(cv::Ptr< cv::Algorithm > (Algorithm::**)())_swig_go_5; 
  arg7 = *(void (Algorithm::**)(cv::Ptr< cv::Algorithm > const &))_swig_go_6; 
  
  cv::string arg8_str(_swig_go_7.p, _swig_go_7.n);
  arg8 = &arg8_str;
  
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6,arg7,(cv::string const &)*arg8);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_36_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, cv::Ptr< cv::Algorithm > *_swig_go_3, bool _swig_go_4, void* _swig_go_5, void* _swig_go_6) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  cv::Ptr< cv::Algorithm > *arg4 = 0 ;
  bool arg5 ;
  cv::Ptr< cv::Algorithm > (Algorithm::*arg6)() ;
  void (Algorithm::*arg7)(cv::Ptr< cv::Algorithm > const &) ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(cv::Ptr< cv::Algorithm > **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(cv::Ptr< cv::Algorithm > (Algorithm::**)())_swig_go_5; 
  arg7 = *(void (Algorithm::**)(cv::Ptr< cv::Algorithm > const &))_swig_go_6; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6,arg7);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_37_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, cv::Ptr< cv::Algorithm > *_swig_go_3, bool _swig_go_4, void* _swig_go_5) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  cv::Ptr< cv::Algorithm > *arg4 = 0 ;
  bool arg5 ;
  cv::Ptr< cv::Algorithm > (Algorithm::*arg6)() ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(cv::Ptr< cv::Algorithm > **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(cv::Ptr< cv::Algorithm > (Algorithm::**)())_swig_go_5; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_38_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, cv::Ptr< cv::Algorithm > *_swig_go_3, bool _swig_go_4) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  cv::Ptr< cv::Algorithm > *arg4 = 0 ;
  bool arg5 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(cv::Ptr< cv::Algorithm > **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_39_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, cv::Ptr< cv::Algorithm > *_swig_go_3) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  cv::Ptr< cv::Algorithm > *arg4 = 0 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(cv::Ptr< cv::Algorithm > **)&_swig_go_3; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_40_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, float *_swig_go_3, bool _swig_go_4, void* _swig_go_5, void* _swig_go_6, _gostring_ _swig_go_7) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  float *arg4 = 0 ;
  bool arg5 ;
  float (Algorithm::*arg6)() ;
  void (Algorithm::*arg7)(float) ;
  cv::string *arg8 = 0 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(float **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(float (Algorithm::**)())_swig_go_5; 
  arg7 = *(void (Algorithm::**)(float))_swig_go_6; 
  
  cv::string arg8_str(_swig_go_7.p, _swig_go_7.n);
  arg8 = &arg8_str;
  
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6,arg7,(cv::string const &)*arg8);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_41_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, float *_swig_go_3, bool _swig_go_4, void* _swig_go_5, void* _swig_go_6) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  float *arg4 = 0 ;
  bool arg5 ;
  float (Algorithm::*arg6)() ;
  void (Algorithm::*arg7)(float) ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(float **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(float (Algorithm::**)())_swig_go_5; 
  arg7 = *(void (Algorithm::**)(float))_swig_go_6; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6,arg7);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_42_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, float *_swig_go_3, bool _swig_go_4, void* _swig_go_5) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  float *arg4 = 0 ;
  bool arg5 ;
  float (Algorithm::*arg6)() ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(float **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(float (Algorithm::**)())_swig_go_5; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_43_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, float *_swig_go_3, bool _swig_go_4) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  float *arg4 = 0 ;
  bool arg5 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(float **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_44_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, float *_swig_go_3) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  float *arg4 = 0 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(float **)&_swig_go_3; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_45_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, unsigned int *_swig_go_3, bool _swig_go_4, void* _swig_go_5, void* _swig_go_6, _gostring_ _swig_go_7) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  unsigned int *arg4 = 0 ;
  bool arg5 ;
  unsigned int (Algorithm::*arg6)() ;
  void (Algorithm::*arg7)(unsigned int) ;
  cv::string *arg8 = 0 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(unsigned int **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(unsigned int (Algorithm::**)())_swig_go_5; 
  arg7 = *(void (Algorithm::**)(unsigned int))_swig_go_6; 
  
  cv::string arg8_str(_swig_go_7.p, _swig_go_7.n);
  arg8 = &arg8_str;
  
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6,arg7,(cv::string const &)*arg8);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_46_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, unsigned int *_swig_go_3, bool _swig_go_4, void* _swig_go_5, void* _swig_go_6) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  unsigned int *arg4 = 0 ;
  bool arg5 ;
  unsigned int (Algorithm::*arg6)() ;
  void (Algorithm::*arg7)(unsigned int) ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(unsigned int **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(unsigned int (Algorithm::**)())_swig_go_5; 
  arg7 = *(void (Algorithm::**)(unsigned int))_swig_go_6; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6,arg7);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_47_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, unsigned int *_swig_go_3, bool _swig_go_4, void* _swig_go_5) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  unsigned int *arg4 = 0 ;
  bool arg5 ;
  unsigned int (Algorithm::*arg6)() ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(unsigned int **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(unsigned int (Algorithm::**)())_swig_go_5; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_48_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, unsigned int *_swig_go_3, bool _swig_go_4) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  unsigned int *arg4 = 0 ;
  bool arg5 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(unsigned int **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_49_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, unsigned int *_swig_go_3) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  unsigned int *arg4 = 0 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(unsigned int **)&_swig_go_3; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_50_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, uint64_t *_swig_go_3, bool _swig_go_4, void* _swig_go_5, void* _swig_go_6, _gostring_ _swig_go_7) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  uint64 *arg4 = 0 ;
  bool arg5 ;
  uint64 (Algorithm::*arg6)() ;
  void (Algorithm::*arg7)(uint64) ;
  cv::string *arg8 = 0 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(uint64 **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(uint64 (Algorithm::**)())_swig_go_5; 
  arg7 = *(void (Algorithm::**)(uint64))_swig_go_6; 
  
  cv::string arg8_str(_swig_go_7.p, _swig_go_7.n);
  arg8 = &arg8_str;
  
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6,arg7,(cv::string const &)*arg8);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_51_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, uint64_t *_swig_go_3, bool _swig_go_4, void* _swig_go_5, void* _swig_go_6) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  uint64 *arg4 = 0 ;
  bool arg5 ;
  uint64 (Algorithm::*arg6)() ;
  void (Algorithm::*arg7)(uint64) ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(uint64 **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(uint64 (Algorithm::**)())_swig_go_5; 
  arg7 = *(void (Algorithm::**)(uint64))_swig_go_6; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6,arg7);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_52_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, uint64_t *_swig_go_3, bool _swig_go_4, void* _swig_go_5) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  uint64 *arg4 = 0 ;
  bool arg5 ;
  uint64 (Algorithm::*arg6)() ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(uint64 **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(uint64 (Algorithm::**)())_swig_go_5; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_53_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, uint64_t *_swig_go_3, bool _swig_go_4) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  uint64 *arg4 = 0 ;
  bool arg5 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(uint64 **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_54_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, uint64_t *_swig_go_3) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  uint64 *arg4 = 0 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(uint64 **)&_swig_go_3; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_55_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, uchar *_swig_go_3, bool _swig_go_4, void* _swig_go_5, void* _swig_go_6, _gostring_ _swig_go_7) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  uchar *arg4 = 0 ;
  bool arg5 ;
  uchar (Algorithm::*arg6)() ;
  void (Algorithm::*arg7)(uchar) ;
  cv::string *arg8 = 0 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(uchar **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(uchar (Algorithm::**)())_swig_go_5; 
  arg7 = *(void (Algorithm::**)(uchar))_swig_go_6; 
  
  cv::string arg8_str(_swig_go_7.p, _swig_go_7.n);
  arg8 = &arg8_str;
  
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6,arg7,(cv::string const &)*arg8);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_56_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, uchar *_swig_go_3, bool _swig_go_4, void* _swig_go_5, void* _swig_go_6) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  uchar *arg4 = 0 ;
  bool arg5 ;
  uchar (Algorithm::*arg6)() ;
  void (Algorithm::*arg7)(uchar) ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(uchar **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(uchar (Algorithm::**)())_swig_go_5; 
  arg7 = *(void (Algorithm::**)(uchar))_swig_go_6; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6,arg7);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_57_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, uchar *_swig_go_3, bool _swig_go_4, void* _swig_go_5) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  uchar *arg4 = 0 ;
  bool arg5 ;
  uchar (Algorithm::*arg6)() ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(uchar **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  arg6 = *(uchar (Algorithm::**)())_swig_go_5; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5,arg6);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_58_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, uchar *_swig_go_3, bool _swig_go_4) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  uchar *arg4 = 0 ;
  bool arg5 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(uchar **)&_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4,arg5);
  
}


void _wrap_AlgorithmInfo_addParam__SWIG_59_cv_dbcbba478e71899d(cv::AlgorithmInfo *_swig_go_0, cv::Algorithm *_swig_go_1, _gostring_ _swig_go_2, uchar *_swig_go_3) {
  cv::AlgorithmInfo *arg1 = (cv::AlgorithmInfo *) 0 ;
  cv::Algorithm *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  uchar *arg4 = 0 ;
  
  arg1 = *(cv::AlgorithmInfo **)&_swig_go_0; 
  arg2 = *(cv::Algorithm **)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  arg4 = *(uchar **)&_swig_go_3; 
  
  (arg1)->addParam(*arg2,(char const *)arg3,*arg4);
  
}


intgo _wrap_INT_Param_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::Param::INT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BOOLEAN_Param_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::Param::BOOLEAN;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_REAL_Param_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::Param::REAL;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_STRING_Param_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::Param::STRING;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_MAT_Param_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::Param::MAT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_MAT_VECTOR_Param_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::Param::MAT_VECTOR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ALGORITHM_Param_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::Param::ALGORITHM;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_FLOAT_Param_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::Param::FLOAT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_UNSIGNED_INT_Param_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::Param::UNSIGNED_INT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_UINT64_Param_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::Param::UINT64;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_SHORT_Param_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::Param::SHORT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_UCHAR_Param_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::Param::UCHAR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


cv::Param *_wrap_new_Param__SWIG_0_cv_dbcbba478e71899d() {
  cv::Param *result = 0 ;
  cv::Param *_swig_go_result;
  
  
  result = (cv::Param *)new cv::Param();
  *(cv::Param **)&_swig_go_result = (cv::Param *)result; 
  return _swig_go_result;
}


cv::Param *_wrap_new_Param__SWIG_1_cv_dbcbba478e71899d(intgo _swig_go_0, bool _swig_go_1, intgo _swig_go_2, void* _swig_go_3, cv::Algorithm::Setter _swig_go_4, _gostring_ _swig_go_5) {
  int arg1 ;
  bool arg2 ;
  int arg3 ;
  int (Algorithm::*arg4)() ;
  cv::Algorithm::Setter arg5 ;
  cv::string *arg6 = 0 ;
  cv::Param *result = 0 ;
  cv::Param *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(int (Algorithm::**)())&_swig_go_3; 
  arg5 = *(cv::Algorithm::Setter *)_swig_go_4; 
  
  cv::string arg6_str(_swig_go_5.p, _swig_go_5.n);
  arg6 = &arg6_str;
  
  
  result = (cv::Param *)new cv::Param(arg1,arg2,arg3,arg4,arg5,(cv::string const &)*arg6);
  *(cv::Param **)&_swig_go_result = (cv::Param *)result; 
  return _swig_go_result;
}


cv::Param *_wrap_new_Param__SWIG_2_cv_dbcbba478e71899d(intgo _swig_go_0, bool _swig_go_1, intgo _swig_go_2, void* _swig_go_3, cv::Algorithm::Setter _swig_go_4) {
  int arg1 ;
  bool arg2 ;
  int arg3 ;
  int (Algorithm::*arg4)() ;
  cv::Algorithm::Setter arg5 ;
  cv::Param *result = 0 ;
  cv::Param *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(int (Algorithm::**)())&_swig_go_3; 
  arg5 = *(cv::Algorithm::Setter *)_swig_go_4; 
  
  result = (cv::Param *)new cv::Param(arg1,arg2,arg3,arg4,arg5);
  *(cv::Param **)&_swig_go_result = (cv::Param *)result; 
  return _swig_go_result;
}


cv::Param *_wrap_new_Param__SWIG_3_cv_dbcbba478e71899d(intgo _swig_go_0, bool _swig_go_1, intgo _swig_go_2, void* _swig_go_3) {
  int arg1 ;
  bool arg2 ;
  int arg3 ;
  int (Algorithm::*arg4)() ;
  cv::Param *result = 0 ;
  cv::Param *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(int (Algorithm::**)())&_swig_go_3; 
  
  result = (cv::Param *)new cv::Param(arg1,arg2,arg3,arg4);
  *(cv::Param **)&_swig_go_result = (cv::Param *)result; 
  return _swig_go_result;
}


cv::Param *_wrap_new_Param__SWIG_4_cv_dbcbba478e71899d(intgo _swig_go_0, bool _swig_go_1, intgo _swig_go_2) {
  int arg1 ;
  bool arg2 ;
  int arg3 ;
  cv::Param *result = 0 ;
  cv::Param *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (cv::Param *)new cv::Param(arg1,arg2,arg3);
  *(cv::Param **)&_swig_go_result = (cv::Param *)result; 
  return _swig_go_result;
}


void _wrap_Param_Xtype_set_cv_dbcbba478e71899d(cv::Param *_swig_go_0, intgo _swig_go_1) {
  cv::Param *arg1 = (cv::Param *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::Param **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->type = arg2;
  
}


intgo _wrap_Param_Xtype_get_cv_dbcbba478e71899d(cv::Param *_swig_go_0) {
  cv::Param *arg1 = (cv::Param *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::Param **)&_swig_go_0; 
  
  result = (int) ((arg1)->type);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Param_offset_set_cv_dbcbba478e71899d(cv::Param *_swig_go_0, intgo _swig_go_1) {
  cv::Param *arg1 = (cv::Param *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::Param **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->offset = arg2;
  
}


intgo _wrap_Param_offset_get_cv_dbcbba478e71899d(cv::Param *_swig_go_0) {
  cv::Param *arg1 = (cv::Param *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::Param **)&_swig_go_0; 
  
  result = (int) ((arg1)->offset);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Param_readonly_set_cv_dbcbba478e71899d(cv::Param *_swig_go_0, bool _swig_go_1) {
  cv::Param *arg1 = (cv::Param *) 0 ;
  bool arg2 ;
  
  arg1 = *(cv::Param **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->readonly = arg2;
  
}


bool _wrap_Param_readonly_get_cv_dbcbba478e71899d(cv::Param *_swig_go_0) {
  cv::Param *arg1 = (cv::Param *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::Param **)&_swig_go_0; 
  
  result = (bool) ((arg1)->readonly);
  _swig_go_result = result; 
  return _swig_go_result;
}


void* _wrap_Param_getter_get_cv_dbcbba478e71899d(cv::Param *_swig_go_0) {
  cv::Param *arg1 = (cv::Param *) 0 ;
  int (Algorithm::*result)();
  void* _swig_go_result;
  
  arg1 = *(cv::Param **)&_swig_go_0; 
  
  result = (int (Algorithm::*)()) ((arg1)->getter);
  *(int (Algorithm::**)())&_swig_go_result = (int (Algorithm::*)())result; 
  return _swig_go_result;
}


void _wrap_Param_setter_set_cv_dbcbba478e71899d(cv::Param *_swig_go_0, cv::Algorithm::Setter _swig_go_1) {
  cv::Param *arg1 = (cv::Param *) 0 ;
  cv::Algorithm::Setter arg2 ;
  
  arg1 = *(cv::Param **)&_swig_go_0; 
  arg2 = *(cv::Algorithm::Setter *)_swig_go_1; 
  
  if (arg1) (arg1)->setter = arg2;
  
}


cv::Algorithm::Setter _wrap_Param_setter_get_cv_dbcbba478e71899d(cv::Param *_swig_go_0) {
  cv::Param *arg1 = (cv::Param *) 0 ;
  cv::Algorithm::Setter result;
  cv::Algorithm::Setter _swig_go_result;
  
  arg1 = *(cv::Param **)&_swig_go_0; 
  
  result = (cv::Algorithm::Setter) ((arg1)->setter);
  
  struct swig_out_type {
    intgo size; void* val; 
  } *swig_out;
  swig_out = (struct swig_out_type*)malloc(sizeof(*swig_out));
  if (swig_out) {
    swig_out->size = sizeof(cv::Algorithm::Setter);
    swig_out->val = malloc(swig_out->size);
    if (swig_out->val) {
      *(cv::Algorithm::Setter *)(swig_out->val) = result;
    }
  }
  _swig_go_result = swig_out;
  
  return _swig_go_result;
}


void _wrap_Param_help_set_cv_dbcbba478e71899d(cv::Param *_swig_go_0, _gostring_ _swig_go_1) {
  cv::Param *arg1 = (cv::Param *) 0 ;
  cv::string *arg2 = 0 ;
  
  arg1 = *(cv::Param **)&_swig_go_0; 
  
  cv::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  if (arg1) (arg1)->help = *arg2;
  
}


_gostring_ _wrap_Param_help_get_cv_dbcbba478e71899d(cv::Param *_swig_go_0) {
  cv::Param *arg1 = (cv::Param *) 0 ;
  cv::string *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::Param **)&_swig_go_0; 
  
  result = (cv::string *) & ((arg1)->help);
  _swig_go_result = Swig_AllocateString((*result).data(), (*result).length()); 
  return _swig_go_result;
}


void _wrap_delete_Param_cv_dbcbba478e71899d(cv::Param *_swig_go_0) {
  cv::Param *arg1 = (cv::Param *) 0 ;
  
  arg1 = *(cv::Param **)&_swig_go_0; 
  
  delete arg1;
  
}


cv::CommandLineParser *_wrap_new_CommandLineParser_cv_dbcbba478e71899d(intgo _swig_go_0, _gostring_* _swig_go_1, _gostring_ _swig_go_2) {
  int arg1 ;
  char **arg2 ;
  char *arg3 = (char *) 0 ;
  cv::CommandLineParser *result = 0 ;
  cv::CommandLineParser *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = *(char ***)&_swig_go_1; 
  arg3 = (char *)_swig_go_2.p; 
  
  result = (cv::CommandLineParser *)new cv::CommandLineParser(arg1,(char const *const (*))arg2,(char const *)arg3);
  *(cv::CommandLineParser **)&_swig_go_result = (cv::CommandLineParser *)result; 
  return _swig_go_result;
}


void _wrap_CommandLineParser_printParams_cv_dbcbba478e71899d(cv::CommandLineParser *_swig_go_0) {
  cv::CommandLineParser *arg1 = (cv::CommandLineParser *) 0 ;
  
  arg1 = *(cv::CommandLineParser **)&_swig_go_0; 
  
  (arg1)->printParams();
  
}


void _wrap_delete_CommandLineParser_cv_dbcbba478e71899d(cv::CommandLineParser *_swig_go_0) {
  cv::CommandLineParser *arg1 = (cv::CommandLineParser *) 0 ;
  
  arg1 = *(cv::CommandLineParser **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_delete_ParallelLoopBody_cv_dbcbba478e71899d(cv::ParallelLoopBody *_swig_go_0) {
  cv::ParallelLoopBody *arg1 = (cv::ParallelLoopBody *) 0 ;
  
  arg1 = *(cv::ParallelLoopBody **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_parallel_for___SWIG_0_cv_dbcbba478e71899d(cv::Range *_swig_go_0, cv::ParallelLoopBody *_swig_go_1, double _swig_go_2) {
  cv::Range *arg1 = 0 ;
  cv::ParallelLoopBody *arg2 = 0 ;
  double arg3 ;
  
  arg1 = *(cv::Range **)&_swig_go_0; 
  arg2 = *(cv::ParallelLoopBody **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  cv::parallel_for_((cv::Range const &)*arg1,(cv::ParallelLoopBody const &)*arg2,arg3);
  
}


void _wrap_parallel_for___SWIG_1_cv_dbcbba478e71899d(cv::Range *_swig_go_0, cv::ParallelLoopBody *_swig_go_1) {
  cv::Range *arg1 = 0 ;
  cv::ParallelLoopBody *arg2 = 0 ;
  
  arg1 = *(cv::Range **)&_swig_go_0; 
  arg2 = *(cv::ParallelLoopBody **)&_swig_go_1; 
  
  cv::parallel_for_((cv::Range const &)*arg1,(cv::ParallelLoopBody const &)*arg2);
  
}


cv::Mutex *_wrap_new_Mutex__SWIG_0_cv_dbcbba478e71899d() {
  cv::Mutex *result = 0 ;
  cv::Mutex *_swig_go_result;
  
  
  result = (cv::Mutex *)new cv::Mutex();
  *(cv::Mutex **)&_swig_go_result = (cv::Mutex *)result; 
  return _swig_go_result;
}


void _wrap_delete_Mutex_cv_dbcbba478e71899d(cv::Mutex *_swig_go_0) {
  cv::Mutex *arg1 = (cv::Mutex *) 0 ;
  
  arg1 = *(cv::Mutex **)&_swig_go_0; 
  
  delete arg1;
  
}


cv::Mutex *_wrap_new_Mutex__SWIG_1_cv_dbcbba478e71899d(cv::Mutex *_swig_go_0) {
  cv::Mutex *arg1 = 0 ;
  cv::Mutex *result = 0 ;
  cv::Mutex *_swig_go_result;
  
  arg1 = *(cv::Mutex **)&_swig_go_0; 
  
  result = (cv::Mutex *)new cv::Mutex((cv::Mutex const &)*arg1);
  *(cv::Mutex **)&_swig_go_result = (cv::Mutex *)result; 
  return _swig_go_result;
}


void _wrap_Mutex_lock_cv_dbcbba478e71899d(cv::Mutex *_swig_go_0) {
  cv::Mutex *arg1 = (cv::Mutex *) 0 ;
  
  arg1 = *(cv::Mutex **)&_swig_go_0; 
  
  (arg1)->lock();
  
}


bool _wrap_Mutex_trylock_cv_dbcbba478e71899d(cv::Mutex *_swig_go_0) {
  cv::Mutex *arg1 = (cv::Mutex *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::Mutex **)&_swig_go_0; 
  
  result = (bool)(arg1)->trylock();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Mutex_unlock_cv_dbcbba478e71899d(cv::Mutex *_swig_go_0) {
  cv::Mutex *arg1 = (cv::Mutex *) 0 ;
  
  arg1 = *(cv::Mutex **)&_swig_go_0; 
  
  (arg1)->unlock();
  
}


cv::AutoLock *_wrap_new_AutoLock_cv_dbcbba478e71899d(cv::Mutex *_swig_go_0) {
  cv::Mutex *arg1 = 0 ;
  cv::AutoLock *result = 0 ;
  cv::AutoLock *_swig_go_result;
  
  arg1 = *(cv::Mutex **)&_swig_go_0; 
  
  result = (cv::AutoLock *)new cv::AutoLock(*arg1);
  *(cv::AutoLock **)&_swig_go_result = (cv::AutoLock *)result; 
  return _swig_go_result;
}


void _wrap_delete_AutoLock_cv_dbcbba478e71899d(cv::AutoLock *_swig_go_0) {
  cv::AutoLock *arg1 = (cv::AutoLock *) 0 ;
  
  arg1 = *(cv::AutoLock **)&_swig_go_0; 
  
  delete arg1;
  
}


void *_wrap_TLSDataContainer_createDataInstance_cv_dbcbba478e71899d(cv::TLSDataContainer *_swig_go_0) {
  cv::TLSDataContainer *arg1 = (cv::TLSDataContainer *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(cv::TLSDataContainer **)&_swig_go_0; 
  
  result = (void *)((cv::TLSDataContainer const *)arg1)->createDataInstance();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_TLSDataContainer_deleteDataInstance_cv_dbcbba478e71899d(cv::TLSDataContainer *_swig_go_0, void *_swig_go_1) {
  cv::TLSDataContainer *arg1 = (cv::TLSDataContainer *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(cv::TLSDataContainer **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  ((cv::TLSDataContainer const *)arg1)->deleteDataInstance(arg2);
  
}


void *_wrap_TLSDataContainer_getData_cv_dbcbba478e71899d(cv::TLSDataContainer *_swig_go_0) {
  cv::TLSDataContainer *arg1 = (cv::TLSDataContainer *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(cv::TLSDataContainer **)&_swig_go_0; 
  
  result = (void *)((cv::TLSDataContainer const *)arg1)->getData();
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_CvHaarFeature_tilted_set_cv_dbcbba478e71899d(CvHaarFeature *_swig_go_0, intgo _swig_go_1) {
  CvHaarFeature *arg1 = (CvHaarFeature *) 0 ;
  int arg2 ;
  
  arg1 = *(CvHaarFeature **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->tilted = arg2;
  
}


intgo _wrap_CvHaarFeature_tilted_get_cv_dbcbba478e71899d(CvHaarFeature *_swig_go_0) {
  CvHaarFeature *arg1 = (CvHaarFeature *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CvHaarFeature **)&_swig_go_0; 
  
  result = (int) ((arg1)->tilted);
  _swig_go_result = result; 
  return _swig_go_result;
}


CvHaarFeature *_wrap_new_CvHaarFeature_cv_dbcbba478e71899d() {
  CvHaarFeature *result = 0 ;
  CvHaarFeature *_swig_go_result;
  
  
  result = (CvHaarFeature *)new CvHaarFeature();
  *(CvHaarFeature **)&_swig_go_result = (CvHaarFeature *)result; 
  return _swig_go_result;
}


void _wrap_delete_CvHaarFeature_cv_dbcbba478e71899d(CvHaarFeature *_swig_go_0) {
  CvHaarFeature *arg1 = (CvHaarFeature *) 0 ;
  
  arg1 = *(CvHaarFeature **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CvHaarClassifier_count_set_cv_dbcbba478e71899d(CvHaarClassifier *_swig_go_0, intgo _swig_go_1) {
  CvHaarClassifier *arg1 = (CvHaarClassifier *) 0 ;
  int arg2 ;
  
  arg1 = *(CvHaarClassifier **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->count = arg2;
  
}


intgo _wrap_CvHaarClassifier_count_get_cv_dbcbba478e71899d(CvHaarClassifier *_swig_go_0) {
  CvHaarClassifier *arg1 = (CvHaarClassifier *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CvHaarClassifier **)&_swig_go_0; 
  
  result = (int) ((arg1)->count);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CvHaarClassifier_haar_feature_set_cv_dbcbba478e71899d(CvHaarClassifier *_swig_go_0, CvHaarFeature *_swig_go_1) {
  CvHaarClassifier *arg1 = (CvHaarClassifier *) 0 ;
  CvHaarFeature *arg2 = (CvHaarFeature *) 0 ;
  
  arg1 = *(CvHaarClassifier **)&_swig_go_0; 
  arg2 = *(CvHaarFeature **)&_swig_go_1; 
  
  if (arg1) (arg1)->haar_feature = arg2;
  
}


CvHaarFeature *_wrap_CvHaarClassifier_haar_feature_get_cv_dbcbba478e71899d(CvHaarClassifier *_swig_go_0) {
  CvHaarClassifier *arg1 = (CvHaarClassifier *) 0 ;
  CvHaarFeature *result = 0 ;
  CvHaarFeature *_swig_go_result;
  
  arg1 = *(CvHaarClassifier **)&_swig_go_0; 
  
  result = (CvHaarFeature *) ((arg1)->haar_feature);
  *(CvHaarFeature **)&_swig_go_result = (CvHaarFeature *)result; 
  return _swig_go_result;
}


void _wrap_CvHaarClassifier_threshold_set_cv_dbcbba478e71899d(CvHaarClassifier *_swig_go_0, float *_swig_go_1) {
  CvHaarClassifier *arg1 = (CvHaarClassifier *) 0 ;
  float *arg2 = (float *) 0 ;
  
  arg1 = *(CvHaarClassifier **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  if (arg1) (arg1)->threshold = arg2;
  
}


float *_wrap_CvHaarClassifier_threshold_get_cv_dbcbba478e71899d(CvHaarClassifier *_swig_go_0) {
  CvHaarClassifier *arg1 = (CvHaarClassifier *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(CvHaarClassifier **)&_swig_go_0; 
  
  result = (float *) ((arg1)->threshold);
  *(float **)&_swig_go_result = (float *)result; 
  return _swig_go_result;
}


void _wrap_CvHaarClassifier_left_set_cv_dbcbba478e71899d(CvHaarClassifier *_swig_go_0, intgo *_swig_go_1) {
  CvHaarClassifier *arg1 = (CvHaarClassifier *) 0 ;
  int *arg2 = (int *) 0 ;
  
  arg1 = *(CvHaarClassifier **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  if (arg1) (arg1)->left = arg2;
  
}


intgo *_wrap_CvHaarClassifier_left_get_cv_dbcbba478e71899d(CvHaarClassifier *_swig_go_0) {
  CvHaarClassifier *arg1 = (CvHaarClassifier *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(CvHaarClassifier **)&_swig_go_0; 
  
  result = (int *) ((arg1)->left);
  *(int **)&_swig_go_result = (int *)result; 
  return _swig_go_result;
}


void _wrap_CvHaarClassifier_right_set_cv_dbcbba478e71899d(CvHaarClassifier *_swig_go_0, intgo *_swig_go_1) {
  CvHaarClassifier *arg1 = (CvHaarClassifier *) 0 ;
  int *arg2 = (int *) 0 ;
  
  arg1 = *(CvHaarClassifier **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  if (arg1) (arg1)->right = arg2;
  
}


intgo *_wrap_CvHaarClassifier_right_get_cv_dbcbba478e71899d(CvHaarClassifier *_swig_go_0) {
  CvHaarClassifier *arg1 = (CvHaarClassifier *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(CvHaarClassifier **)&_swig_go_0; 
  
  result = (int *) ((arg1)->right);
  *(int **)&_swig_go_result = (int *)result; 
  return _swig_go_result;
}


void _wrap_CvHaarClassifier_alpha_set_cv_dbcbba478e71899d(CvHaarClassifier *_swig_go_0, float *_swig_go_1) {
  CvHaarClassifier *arg1 = (CvHaarClassifier *) 0 ;
  float *arg2 = (float *) 0 ;
  
  arg1 = *(CvHaarClassifier **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  if (arg1) (arg1)->alpha = arg2;
  
}


float *_wrap_CvHaarClassifier_alpha_get_cv_dbcbba478e71899d(CvHaarClassifier *_swig_go_0) {
  CvHaarClassifier *arg1 = (CvHaarClassifier *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(CvHaarClassifier **)&_swig_go_0; 
  
  result = (float *) ((arg1)->alpha);
  *(float **)&_swig_go_result = (float *)result; 
  return _swig_go_result;
}


CvHaarClassifier *_wrap_new_CvHaarClassifier_cv_dbcbba478e71899d() {
  CvHaarClassifier *result = 0 ;
  CvHaarClassifier *_swig_go_result;
  
  
  result = (CvHaarClassifier *)new CvHaarClassifier();
  *(CvHaarClassifier **)&_swig_go_result = (CvHaarClassifier *)result; 
  return _swig_go_result;
}


void _wrap_delete_CvHaarClassifier_cv_dbcbba478e71899d(CvHaarClassifier *_swig_go_0) {
  CvHaarClassifier *arg1 = (CvHaarClassifier *) 0 ;
  
  arg1 = *(CvHaarClassifier **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CvHaarStageClassifier_count_set_cv_dbcbba478e71899d(CvHaarStageClassifier *_swig_go_0, intgo _swig_go_1) {
  CvHaarStageClassifier *arg1 = (CvHaarStageClassifier *) 0 ;
  int arg2 ;
  
  arg1 = *(CvHaarStageClassifier **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->count = arg2;
  
}


intgo _wrap_CvHaarStageClassifier_count_get_cv_dbcbba478e71899d(CvHaarStageClassifier *_swig_go_0) {
  CvHaarStageClassifier *arg1 = (CvHaarStageClassifier *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CvHaarStageClassifier **)&_swig_go_0; 
  
  result = (int) ((arg1)->count);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CvHaarStageClassifier_threshold_set_cv_dbcbba478e71899d(CvHaarStageClassifier *_swig_go_0, float _swig_go_1) {
  CvHaarStageClassifier *arg1 = (CvHaarStageClassifier *) 0 ;
  float arg2 ;
  
  arg1 = *(CvHaarStageClassifier **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->threshold = arg2;
  
}


float _wrap_CvHaarStageClassifier_threshold_get_cv_dbcbba478e71899d(CvHaarStageClassifier *_swig_go_0) {
  CvHaarStageClassifier *arg1 = (CvHaarStageClassifier *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(CvHaarStageClassifier **)&_swig_go_0; 
  
  result = (float) ((arg1)->threshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CvHaarStageClassifier_classifier_set_cv_dbcbba478e71899d(CvHaarStageClassifier *_swig_go_0, CvHaarClassifier *_swig_go_1) {
  CvHaarStageClassifier *arg1 = (CvHaarStageClassifier *) 0 ;
  CvHaarClassifier *arg2 = (CvHaarClassifier *) 0 ;
  
  arg1 = *(CvHaarStageClassifier **)&_swig_go_0; 
  arg2 = *(CvHaarClassifier **)&_swig_go_1; 
  
  if (arg1) (arg1)->classifier = arg2;
  
}


CvHaarClassifier *_wrap_CvHaarStageClassifier_classifier_get_cv_dbcbba478e71899d(CvHaarStageClassifier *_swig_go_0) {
  CvHaarStageClassifier *arg1 = (CvHaarStageClassifier *) 0 ;
  CvHaarClassifier *result = 0 ;
  CvHaarClassifier *_swig_go_result;
  
  arg1 = *(CvHaarStageClassifier **)&_swig_go_0; 
  
  result = (CvHaarClassifier *) ((arg1)->classifier);
  *(CvHaarClassifier **)&_swig_go_result = (CvHaarClassifier *)result; 
  return _swig_go_result;
}


void _wrap_CvHaarStageClassifier_next_set_cv_dbcbba478e71899d(CvHaarStageClassifier *_swig_go_0, intgo _swig_go_1) {
  CvHaarStageClassifier *arg1 = (CvHaarStageClassifier *) 0 ;
  int arg2 ;
  
  arg1 = *(CvHaarStageClassifier **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->next = arg2;
  
}


intgo _wrap_CvHaarStageClassifier_next_get_cv_dbcbba478e71899d(CvHaarStageClassifier *_swig_go_0) {
  CvHaarStageClassifier *arg1 = (CvHaarStageClassifier *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CvHaarStageClassifier **)&_swig_go_0; 
  
  result = (int) ((arg1)->next);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CvHaarStageClassifier_child_set_cv_dbcbba478e71899d(CvHaarStageClassifier *_swig_go_0, intgo _swig_go_1) {
  CvHaarStageClassifier *arg1 = (CvHaarStageClassifier *) 0 ;
  int arg2 ;
  
  arg1 = *(CvHaarStageClassifier **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->child = arg2;
  
}


intgo _wrap_CvHaarStageClassifier_child_get_cv_dbcbba478e71899d(CvHaarStageClassifier *_swig_go_0) {
  CvHaarStageClassifier *arg1 = (CvHaarStageClassifier *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CvHaarStageClassifier **)&_swig_go_0; 
  
  result = (int) ((arg1)->child);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CvHaarStageClassifier_parent_set_cv_dbcbba478e71899d(CvHaarStageClassifier *_swig_go_0, intgo _swig_go_1) {
  CvHaarStageClassifier *arg1 = (CvHaarStageClassifier *) 0 ;
  int arg2 ;
  
  arg1 = *(CvHaarStageClassifier **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->parent = arg2;
  
}


intgo _wrap_CvHaarStageClassifier_parent_get_cv_dbcbba478e71899d(CvHaarStageClassifier *_swig_go_0) {
  CvHaarStageClassifier *arg1 = (CvHaarStageClassifier *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CvHaarStageClassifier **)&_swig_go_0; 
  
  result = (int) ((arg1)->parent);
  _swig_go_result = result; 
  return _swig_go_result;
}


CvHaarStageClassifier *_wrap_new_CvHaarStageClassifier_cv_dbcbba478e71899d() {
  CvHaarStageClassifier *result = 0 ;
  CvHaarStageClassifier *_swig_go_result;
  
  
  result = (CvHaarStageClassifier *)new CvHaarStageClassifier();
  *(CvHaarStageClassifier **)&_swig_go_result = (CvHaarStageClassifier *)result; 
  return _swig_go_result;
}


void _wrap_delete_CvHaarStageClassifier_cv_dbcbba478e71899d(CvHaarStageClassifier *_swig_go_0) {
  CvHaarStageClassifier *arg1 = (CvHaarStageClassifier *) 0 ;
  
  arg1 = *(CvHaarStageClassifier **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CvHaarClassifierCascade_flags_set_cv_dbcbba478e71899d(CvHaarClassifierCascade *_swig_go_0, intgo _swig_go_1) {
  CvHaarClassifierCascade *arg1 = (CvHaarClassifierCascade *) 0 ;
  int arg2 ;
  
  arg1 = *(CvHaarClassifierCascade **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->flags = arg2;
  
}


intgo _wrap_CvHaarClassifierCascade_flags_get_cv_dbcbba478e71899d(CvHaarClassifierCascade *_swig_go_0) {
  CvHaarClassifierCascade *arg1 = (CvHaarClassifierCascade *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CvHaarClassifierCascade **)&_swig_go_0; 
  
  result = (int) ((arg1)->flags);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CvHaarClassifierCascade_count_set_cv_dbcbba478e71899d(CvHaarClassifierCascade *_swig_go_0, intgo _swig_go_1) {
  CvHaarClassifierCascade *arg1 = (CvHaarClassifierCascade *) 0 ;
  int arg2 ;
  
  arg1 = *(CvHaarClassifierCascade **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->count = arg2;
  
}


intgo _wrap_CvHaarClassifierCascade_count_get_cv_dbcbba478e71899d(CvHaarClassifierCascade *_swig_go_0) {
  CvHaarClassifierCascade *arg1 = (CvHaarClassifierCascade *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CvHaarClassifierCascade **)&_swig_go_0; 
  
  result = (int) ((arg1)->count);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CvHaarClassifierCascade_orig_window_size_set_cv_dbcbba478e71899d(CvHaarClassifierCascade *_swig_go_0, CvSize *_swig_go_1) {
  CvHaarClassifierCascade *arg1 = (CvHaarClassifierCascade *) 0 ;
  CvSize *arg2 = (CvSize *) 0 ;
  
  arg1 = *(CvHaarClassifierCascade **)&_swig_go_0; 
  arg2 = *(CvSize **)&_swig_go_1; 
  
  if (arg1) (arg1)->orig_window_size = *arg2;
  
}


CvSize *_wrap_CvHaarClassifierCascade_orig_window_size_get_cv_dbcbba478e71899d(CvHaarClassifierCascade *_swig_go_0) {
  CvHaarClassifierCascade *arg1 = (CvHaarClassifierCascade *) 0 ;
  CvSize *result = 0 ;
  CvSize *_swig_go_result;
  
  arg1 = *(CvHaarClassifierCascade **)&_swig_go_0; 
  
  result = (CvSize *)& ((arg1)->orig_window_size);
  *(CvSize **)&_swig_go_result = (CvSize *)result; 
  return _swig_go_result;
}


void _wrap_CvHaarClassifierCascade_real_window_size_set_cv_dbcbba478e71899d(CvHaarClassifierCascade *_swig_go_0, CvSize *_swig_go_1) {
  CvHaarClassifierCascade *arg1 = (CvHaarClassifierCascade *) 0 ;
  CvSize *arg2 = (CvSize *) 0 ;
  
  arg1 = *(CvHaarClassifierCascade **)&_swig_go_0; 
  arg2 = *(CvSize **)&_swig_go_1; 
  
  if (arg1) (arg1)->real_window_size = *arg2;
  
}


CvSize *_wrap_CvHaarClassifierCascade_real_window_size_get_cv_dbcbba478e71899d(CvHaarClassifierCascade *_swig_go_0) {
  CvHaarClassifierCascade *arg1 = (CvHaarClassifierCascade *) 0 ;
  CvSize *result = 0 ;
  CvSize *_swig_go_result;
  
  arg1 = *(CvHaarClassifierCascade **)&_swig_go_0; 
  
  result = (CvSize *)& ((arg1)->real_window_size);
  *(CvSize **)&_swig_go_result = (CvSize *)result; 
  return _swig_go_result;
}


void _wrap_CvHaarClassifierCascade_scale_set_cv_dbcbba478e71899d(CvHaarClassifierCascade *_swig_go_0, double _swig_go_1) {
  CvHaarClassifierCascade *arg1 = (CvHaarClassifierCascade *) 0 ;
  double arg2 ;
  
  arg1 = *(CvHaarClassifierCascade **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->scale = arg2;
  
}


double _wrap_CvHaarClassifierCascade_scale_get_cv_dbcbba478e71899d(CvHaarClassifierCascade *_swig_go_0) {
  CvHaarClassifierCascade *arg1 = (CvHaarClassifierCascade *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(CvHaarClassifierCascade **)&_swig_go_0; 
  
  result = (double) ((arg1)->scale);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CvHaarClassifierCascade_stage_classifier_set_cv_dbcbba478e71899d(CvHaarClassifierCascade *_swig_go_0, CvHaarStageClassifier *_swig_go_1) {
  CvHaarClassifierCascade *arg1 = (CvHaarClassifierCascade *) 0 ;
  CvHaarStageClassifier *arg2 = (CvHaarStageClassifier *) 0 ;
  
  arg1 = *(CvHaarClassifierCascade **)&_swig_go_0; 
  arg2 = *(CvHaarStageClassifier **)&_swig_go_1; 
  
  if (arg1) (arg1)->stage_classifier = arg2;
  
}


CvHaarStageClassifier *_wrap_CvHaarClassifierCascade_stage_classifier_get_cv_dbcbba478e71899d(CvHaarClassifierCascade *_swig_go_0) {
  CvHaarClassifierCascade *arg1 = (CvHaarClassifierCascade *) 0 ;
  CvHaarStageClassifier *result = 0 ;
  CvHaarStageClassifier *_swig_go_result;
  
  arg1 = *(CvHaarClassifierCascade **)&_swig_go_0; 
  
  result = (CvHaarStageClassifier *) ((arg1)->stage_classifier);
  *(CvHaarStageClassifier **)&_swig_go_result = (CvHaarStageClassifier *)result; 
  return _swig_go_result;
}


void _wrap_CvHaarClassifierCascade_hid_cascade_set_cv_dbcbba478e71899d(CvHaarClassifierCascade *_swig_go_0, CvHidHaarClassifierCascade *_swig_go_1) {
  CvHaarClassifierCascade *arg1 = (CvHaarClassifierCascade *) 0 ;
  CvHidHaarClassifierCascade *arg2 = (CvHidHaarClassifierCascade *) 0 ;
  
  arg1 = *(CvHaarClassifierCascade **)&_swig_go_0; 
  arg2 = *(CvHidHaarClassifierCascade **)&_swig_go_1; 
  
  if (arg1) (arg1)->hid_cascade = arg2;
  
}


CvHidHaarClassifierCascade *_wrap_CvHaarClassifierCascade_hid_cascade_get_cv_dbcbba478e71899d(CvHaarClassifierCascade *_swig_go_0) {
  CvHaarClassifierCascade *arg1 = (CvHaarClassifierCascade *) 0 ;
  CvHidHaarClassifierCascade *result = 0 ;
  CvHidHaarClassifierCascade *_swig_go_result;
  
  arg1 = *(CvHaarClassifierCascade **)&_swig_go_0; 
  
  result = (CvHidHaarClassifierCascade *) ((arg1)->hid_cascade);
  *(CvHidHaarClassifierCascade **)&_swig_go_result = (CvHidHaarClassifierCascade *)result; 
  return _swig_go_result;
}


CvHaarClassifierCascade *_wrap_new_CvHaarClassifierCascade_cv_dbcbba478e71899d() {
  CvHaarClassifierCascade *result = 0 ;
  CvHaarClassifierCascade *_swig_go_result;
  
  
  result = (CvHaarClassifierCascade *)new CvHaarClassifierCascade();
  *(CvHaarClassifierCascade **)&_swig_go_result = (CvHaarClassifierCascade *)result; 
  return _swig_go_result;
}


void _wrap_delete_CvHaarClassifierCascade_cv_dbcbba478e71899d(CvHaarClassifierCascade *_swig_go_0) {
  CvHaarClassifierCascade *arg1 = (CvHaarClassifierCascade *) 0 ;
  
  arg1 = *(CvHaarClassifierCascade **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CvAvgComp_rect_set_cv_dbcbba478e71899d(CvAvgComp *_swig_go_0, CvRect *_swig_go_1) {
  CvAvgComp *arg1 = (CvAvgComp *) 0 ;
  CvRect *arg2 = (CvRect *) 0 ;
  
  arg1 = *(CvAvgComp **)&_swig_go_0; 
  arg2 = *(CvRect **)&_swig_go_1; 
  
  if (arg1) (arg1)->rect = *arg2;
  
}


CvRect *_wrap_CvAvgComp_rect_get_cv_dbcbba478e71899d(CvAvgComp *_swig_go_0) {
  CvAvgComp *arg1 = (CvAvgComp *) 0 ;
  CvRect *result = 0 ;
  CvRect *_swig_go_result;
  
  arg1 = *(CvAvgComp **)&_swig_go_0; 
  
  result = (CvRect *)& ((arg1)->rect);
  *(CvRect **)&_swig_go_result = (CvRect *)result; 
  return _swig_go_result;
}


void _wrap_CvAvgComp_neighbors_set_cv_dbcbba478e71899d(CvAvgComp *_swig_go_0, intgo _swig_go_1) {
  CvAvgComp *arg1 = (CvAvgComp *) 0 ;
  int arg2 ;
  
  arg1 = *(CvAvgComp **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->neighbors = arg2;
  
}


intgo _wrap_CvAvgComp_neighbors_get_cv_dbcbba478e71899d(CvAvgComp *_swig_go_0) {
  CvAvgComp *arg1 = (CvAvgComp *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CvAvgComp **)&_swig_go_0; 
  
  result = (int) ((arg1)->neighbors);
  _swig_go_result = result; 
  return _swig_go_result;
}


CvAvgComp *_wrap_new_CvAvgComp_cv_dbcbba478e71899d() {
  CvAvgComp *result = 0 ;
  CvAvgComp *_swig_go_result;
  
  
  result = (CvAvgComp *)new CvAvgComp();
  *(CvAvgComp **)&_swig_go_result = (CvAvgComp *)result; 
  return _swig_go_result;
}


void _wrap_delete_CvAvgComp_cv_dbcbba478e71899d(CvAvgComp *_swig_go_0) {
  CvAvgComp *arg1 = (CvAvgComp *) 0 ;
  
  arg1 = *(CvAvgComp **)&_swig_go_0; 
  
  delete arg1;
  
}


CvHaarClassifierCascade *_wrap_cvLoadHaarClassifierCascade_cv_dbcbba478e71899d(_gostring_ _swig_go_0, CvSize *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  CvSize arg2 ;
  CvSize *argp2 ;
  CvHaarClassifierCascade *result = 0 ;
  CvHaarClassifierCascade *_swig_go_result;
  
  arg1 = (char *)_swig_go_0.p; 
  
  argp2 = (CvSize *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CvSize");
  }
  arg2 = (CvSize)*argp2;
  
  
  result = (CvHaarClassifierCascade *)cvLoadHaarClassifierCascade((char const *)arg1,arg2);
  *(CvHaarClassifierCascade **)&_swig_go_result = (CvHaarClassifierCascade *)result; 
  return _swig_go_result;
}


void _wrap_cvReleaseHaarClassifierCascade_cv_dbcbba478e71899d(CvHaarClassifierCascade **_swig_go_0) {
  CvHaarClassifierCascade **arg1 = (CvHaarClassifierCascade **) 0 ;
  
  arg1 = *(CvHaarClassifierCascade ***)&_swig_go_0; 
  
  cvReleaseHaarClassifierCascade(arg1);
  
}


CvSeq *_wrap_cvHaarDetectObjects_cv_dbcbba478e71899d(intgo _swig_optargc, CvArr *_swig_go_0, CvHaarClassifierCascade *_swig_go_1, CvMemStorage *_swig_go_2, double _swig_go_3, intgo _swig_go_4, intgo _swig_go_5, CvSize *_swig_go_6, CvSize *_swig_go_7) {
  CvArr *arg1 = (CvArr *) 0 ;
  CvHaarClassifierCascade *arg2 = (CvHaarClassifierCascade *) 0 ;
  CvMemStorage *arg3 = (CvMemStorage *) 0 ;
  double arg4 = (double) 1.1 ;
  int arg5 = (int) 3 ;
  int arg6 = (int) 0 ;
  CvSize arg7 = (CvSize) cvSize(0,0) ;
  CvSize arg8 = (CvSize) cvSize(0,0) ;
  CvSize *argp7 ;
  CvSize *argp8 ;
  CvSeq *result = 0 ;
  CvSeq *_swig_go_result;
  
  arg1 = *(CvArr **)&_swig_go_0; 
  arg2 = *(CvHaarClassifierCascade **)&_swig_go_1; 
  arg3 = *(CvMemStorage **)&_swig_go_2; 
  if (_swig_optargc > 0) {
    arg4 = (double)_swig_go_3; 
  }
  if (_swig_optargc > 1) {
    arg5 = (int)_swig_go_4; 
  }
  if (_swig_optargc > 2) {
    arg6 = (int)_swig_go_5; 
  }
  if (_swig_optargc > 3) {
    argp7 = (CvSize *)_swig_go_6;
    if (argp7 == NULL) {
      _swig_gopanic("Attempt to dereference null CvSize");
    }
    arg7 = (CvSize)*argp7;
    
  }
  if (_swig_optargc > 4) {
    argp8 = (CvSize *)_swig_go_7;
    if (argp8 == NULL) {
      _swig_gopanic("Attempt to dereference null CvSize");
    }
    arg8 = (CvSize)*argp8;
    
  }
  
  result = (CvSeq *)cvHaarDetectObjects((void const *)arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  *(CvSeq **)&_swig_go_result = (CvSeq *)result; 
  return _swig_go_result;
}


void _wrap_cvSetImagesForHaarClassifierCascade_cv_dbcbba478e71899d(CvHaarClassifierCascade *_swig_go_0, CvArr *_swig_go_1, CvArr *_swig_go_2, CvArr *_swig_go_3, double _swig_go_4) {
  CvHaarClassifierCascade *arg1 = (CvHaarClassifierCascade *) 0 ;
  CvArr *arg2 = (CvArr *) 0 ;
  CvArr *arg3 = (CvArr *) 0 ;
  CvArr *arg4 = (CvArr *) 0 ;
  double arg5 ;
  
  arg1 = *(CvHaarClassifierCascade **)&_swig_go_0; 
  arg2 = *(CvArr **)&_swig_go_1; 
  arg3 = *(CvArr **)&_swig_go_2; 
  arg4 = *(CvArr **)&_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  cvSetImagesForHaarClassifierCascade(arg1,(void const *)arg2,(void const *)arg3,(void const *)arg4,arg5);
  
}


intgo _wrap_cvRunHaarClassifierCascade_cv_dbcbba478e71899d(intgo _swig_optargc, CvHaarClassifierCascade *_swig_go_0, CvPoint *_swig_go_1, intgo _swig_go_2) {
  CvHaarClassifierCascade *arg1 = (CvHaarClassifierCascade *) 0 ;
  CvPoint arg2 ;
  int arg3 = (int) 0 ;
  CvPoint *argp2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CvHaarClassifierCascade **)&_swig_go_0; 
  
  argp2 = (CvPoint *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null CvPoint");
  }
  arg2 = (CvPoint)*argp2;
  
  if (_swig_optargc > 0) {
    arg3 = (int)_swig_go_2; 
  }
  
  result = (int)cvRunHaarClassifierCascade((CvHaarClassifierCascade const *)arg1,arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CvLSVMFilterPosition_x_set_cv_dbcbba478e71899d(CvLSVMFilterPosition *_swig_go_0, intgo _swig_go_1) {
  CvLSVMFilterPosition *arg1 = (CvLSVMFilterPosition *) 0 ;
  int arg2 ;
  
  arg1 = *(CvLSVMFilterPosition **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->x = arg2;
  
}


intgo _wrap_CvLSVMFilterPosition_x_get_cv_dbcbba478e71899d(CvLSVMFilterPosition *_swig_go_0) {
  CvLSVMFilterPosition *arg1 = (CvLSVMFilterPosition *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CvLSVMFilterPosition **)&_swig_go_0; 
  
  result = (int) ((arg1)->x);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CvLSVMFilterPosition_y_set_cv_dbcbba478e71899d(CvLSVMFilterPosition *_swig_go_0, intgo _swig_go_1) {
  CvLSVMFilterPosition *arg1 = (CvLSVMFilterPosition *) 0 ;
  int arg2 ;
  
  arg1 = *(CvLSVMFilterPosition **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->y = arg2;
  
}


intgo _wrap_CvLSVMFilterPosition_y_get_cv_dbcbba478e71899d(CvLSVMFilterPosition *_swig_go_0) {
  CvLSVMFilterPosition *arg1 = (CvLSVMFilterPosition *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CvLSVMFilterPosition **)&_swig_go_0; 
  
  result = (int) ((arg1)->y);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CvLSVMFilterPosition_l_set_cv_dbcbba478e71899d(CvLSVMFilterPosition *_swig_go_0, intgo _swig_go_1) {
  CvLSVMFilterPosition *arg1 = (CvLSVMFilterPosition *) 0 ;
  int arg2 ;
  
  arg1 = *(CvLSVMFilterPosition **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->l = arg2;
  
}


intgo _wrap_CvLSVMFilterPosition_l_get_cv_dbcbba478e71899d(CvLSVMFilterPosition *_swig_go_0) {
  CvLSVMFilterPosition *arg1 = (CvLSVMFilterPosition *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CvLSVMFilterPosition **)&_swig_go_0; 
  
  result = (int) ((arg1)->l);
  _swig_go_result = result; 
  return _swig_go_result;
}


CvLSVMFilterPosition *_wrap_new_CvLSVMFilterPosition_cv_dbcbba478e71899d() {
  CvLSVMFilterPosition *result = 0 ;
  CvLSVMFilterPosition *_swig_go_result;
  
  
  result = (CvLSVMFilterPosition *)new CvLSVMFilterPosition();
  *(CvLSVMFilterPosition **)&_swig_go_result = (CvLSVMFilterPosition *)result; 
  return _swig_go_result;
}


void _wrap_delete_CvLSVMFilterPosition_cv_dbcbba478e71899d(CvLSVMFilterPosition *_swig_go_0) {
  CvLSVMFilterPosition *arg1 = (CvLSVMFilterPosition *) 0 ;
  
  arg1 = *(CvLSVMFilterPosition **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CvLSVMFilterObject_V_set_cv_dbcbba478e71899d(CvLSVMFilterObject *_swig_go_0, CvLSVMFilterPosition *_swig_go_1) {
  CvLSVMFilterObject *arg1 = (CvLSVMFilterObject *) 0 ;
  CvLSVMFilterPosition *arg2 = (CvLSVMFilterPosition *) 0 ;
  
  arg1 = *(CvLSVMFilterObject **)&_swig_go_0; 
  arg2 = *(CvLSVMFilterPosition **)&_swig_go_1; 
  
  if (arg1) (arg1)->V = *arg2;
  
}


CvLSVMFilterPosition *_wrap_CvLSVMFilterObject_V_get_cv_dbcbba478e71899d(CvLSVMFilterObject *_swig_go_0) {
  CvLSVMFilterObject *arg1 = (CvLSVMFilterObject *) 0 ;
  CvLSVMFilterPosition *result = 0 ;
  CvLSVMFilterPosition *_swig_go_result;
  
  arg1 = *(CvLSVMFilterObject **)&_swig_go_0; 
  
  result = (CvLSVMFilterPosition *)& ((arg1)->V);
  *(CvLSVMFilterPosition **)&_swig_go_result = (CvLSVMFilterPosition *)result; 
  return _swig_go_result;
}


void _wrap_CvLSVMFilterObject_fineFunction_set_cv_dbcbba478e71899d(CvLSVMFilterObject *_swig_go_0, float *_swig_go_1) {
  CvLSVMFilterObject *arg1 = (CvLSVMFilterObject *) 0 ;
  float *arg2 ;
  
  arg1 = *(CvLSVMFilterObject **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->fineFunction;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_CvLSVMFilterObject_fineFunction_get_cv_dbcbba478e71899d(CvLSVMFilterObject *_swig_go_0) {
  CvLSVMFilterObject *arg1 = (CvLSVMFilterObject *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(CvLSVMFilterObject **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->fineFunction);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CvLSVMFilterObject_sizeX_set_cv_dbcbba478e71899d(CvLSVMFilterObject *_swig_go_0, intgo _swig_go_1) {
  CvLSVMFilterObject *arg1 = (CvLSVMFilterObject *) 0 ;
  int arg2 ;
  
  arg1 = *(CvLSVMFilterObject **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->sizeX = arg2;
  
}


intgo _wrap_CvLSVMFilterObject_sizeX_get_cv_dbcbba478e71899d(CvLSVMFilterObject *_swig_go_0) {
  CvLSVMFilterObject *arg1 = (CvLSVMFilterObject *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CvLSVMFilterObject **)&_swig_go_0; 
  
  result = (int) ((arg1)->sizeX);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CvLSVMFilterObject_sizeY_set_cv_dbcbba478e71899d(CvLSVMFilterObject *_swig_go_0, intgo _swig_go_1) {
  CvLSVMFilterObject *arg1 = (CvLSVMFilterObject *) 0 ;
  int arg2 ;
  
  arg1 = *(CvLSVMFilterObject **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->sizeY = arg2;
  
}


intgo _wrap_CvLSVMFilterObject_sizeY_get_cv_dbcbba478e71899d(CvLSVMFilterObject *_swig_go_0) {
  CvLSVMFilterObject *arg1 = (CvLSVMFilterObject *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CvLSVMFilterObject **)&_swig_go_0; 
  
  result = (int) ((arg1)->sizeY);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CvLSVMFilterObject_numFeatures_set_cv_dbcbba478e71899d(CvLSVMFilterObject *_swig_go_0, intgo _swig_go_1) {
  CvLSVMFilterObject *arg1 = (CvLSVMFilterObject *) 0 ;
  int arg2 ;
  
  arg1 = *(CvLSVMFilterObject **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->numFeatures = arg2;
  
}


intgo _wrap_CvLSVMFilterObject_numFeatures_get_cv_dbcbba478e71899d(CvLSVMFilterObject *_swig_go_0) {
  CvLSVMFilterObject *arg1 = (CvLSVMFilterObject *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CvLSVMFilterObject **)&_swig_go_0; 
  
  result = (int) ((arg1)->numFeatures);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CvLSVMFilterObject_H_set_cv_dbcbba478e71899d(CvLSVMFilterObject *_swig_go_0, float *_swig_go_1) {
  CvLSVMFilterObject *arg1 = (CvLSVMFilterObject *) 0 ;
  float *arg2 = (float *) 0 ;
  
  arg1 = *(CvLSVMFilterObject **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  if (arg1) (arg1)->H = arg2;
  
}


float *_wrap_CvLSVMFilterObject_H_get_cv_dbcbba478e71899d(CvLSVMFilterObject *_swig_go_0) {
  CvLSVMFilterObject *arg1 = (CvLSVMFilterObject *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(CvLSVMFilterObject **)&_swig_go_0; 
  
  result = (float *) ((arg1)->H);
  *(float **)&_swig_go_result = (float *)result; 
  return _swig_go_result;
}


CvLSVMFilterObject *_wrap_new_CvLSVMFilterObject_cv_dbcbba478e71899d() {
  CvLSVMFilterObject *result = 0 ;
  CvLSVMFilterObject *_swig_go_result;
  
  
  result = (CvLSVMFilterObject *)new CvLSVMFilterObject();
  *(CvLSVMFilterObject **)&_swig_go_result = (CvLSVMFilterObject *)result; 
  return _swig_go_result;
}


void _wrap_delete_CvLSVMFilterObject_cv_dbcbba478e71899d(CvLSVMFilterObject *_swig_go_0) {
  CvLSVMFilterObject *arg1 = (CvLSVMFilterObject *) 0 ;
  
  arg1 = *(CvLSVMFilterObject **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CvLatentSvmDetector_num_filters_set_cv_dbcbba478e71899d(CvLatentSvmDetector *_swig_go_0, intgo _swig_go_1) {
  CvLatentSvmDetector *arg1 = (CvLatentSvmDetector *) 0 ;
  int arg2 ;
  
  arg1 = *(CvLatentSvmDetector **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->num_filters = arg2;
  
}


intgo _wrap_CvLatentSvmDetector_num_filters_get_cv_dbcbba478e71899d(CvLatentSvmDetector *_swig_go_0) {
  CvLatentSvmDetector *arg1 = (CvLatentSvmDetector *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CvLatentSvmDetector **)&_swig_go_0; 
  
  result = (int) ((arg1)->num_filters);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CvLatentSvmDetector_num_components_set_cv_dbcbba478e71899d(CvLatentSvmDetector *_swig_go_0, intgo _swig_go_1) {
  CvLatentSvmDetector *arg1 = (CvLatentSvmDetector *) 0 ;
  int arg2 ;
  
  arg1 = *(CvLatentSvmDetector **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->num_components = arg2;
  
}


intgo _wrap_CvLatentSvmDetector_num_components_get_cv_dbcbba478e71899d(CvLatentSvmDetector *_swig_go_0) {
  CvLatentSvmDetector *arg1 = (CvLatentSvmDetector *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(CvLatentSvmDetector **)&_swig_go_0; 
  
  result = (int) ((arg1)->num_components);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CvLatentSvmDetector_num_part_filters_set_cv_dbcbba478e71899d(CvLatentSvmDetector *_swig_go_0, intgo *_swig_go_1) {
  CvLatentSvmDetector *arg1 = (CvLatentSvmDetector *) 0 ;
  int *arg2 = (int *) 0 ;
  
  arg1 = *(CvLatentSvmDetector **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  if (arg1) (arg1)->num_part_filters = arg2;
  
}


intgo *_wrap_CvLatentSvmDetector_num_part_filters_get_cv_dbcbba478e71899d(CvLatentSvmDetector *_swig_go_0) {
  CvLatentSvmDetector *arg1 = (CvLatentSvmDetector *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(CvLatentSvmDetector **)&_swig_go_0; 
  
  result = (int *) ((arg1)->num_part_filters);
  *(int **)&_swig_go_result = (int *)result; 
  return _swig_go_result;
}


void _wrap_CvLatentSvmDetector_filters_set_cv_dbcbba478e71899d(CvLatentSvmDetector *_swig_go_0, CvLSVMFilterObject **_swig_go_1) {
  CvLatentSvmDetector *arg1 = (CvLatentSvmDetector *) 0 ;
  CvLSVMFilterObject **arg2 = (CvLSVMFilterObject **) 0 ;
  
  arg1 = *(CvLatentSvmDetector **)&_swig_go_0; 
  arg2 = *(CvLSVMFilterObject ***)&_swig_go_1; 
  
  if (arg1) (arg1)->filters = arg2;
  
}


CvLSVMFilterObject **_wrap_CvLatentSvmDetector_filters_get_cv_dbcbba478e71899d(CvLatentSvmDetector *_swig_go_0) {
  CvLatentSvmDetector *arg1 = (CvLatentSvmDetector *) 0 ;
  CvLSVMFilterObject **result = 0 ;
  CvLSVMFilterObject **_swig_go_result;
  
  arg1 = *(CvLatentSvmDetector **)&_swig_go_0; 
  
  result = (CvLSVMFilterObject **) ((arg1)->filters);
  *(CvLSVMFilterObject ***)&_swig_go_result = (CvLSVMFilterObject **)result; 
  return _swig_go_result;
}


void _wrap_CvLatentSvmDetector_b_set_cv_dbcbba478e71899d(CvLatentSvmDetector *_swig_go_0, float *_swig_go_1) {
  CvLatentSvmDetector *arg1 = (CvLatentSvmDetector *) 0 ;
  float *arg2 = (float *) 0 ;
  
  arg1 = *(CvLatentSvmDetector **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  if (arg1) (arg1)->b = arg2;
  
}


float *_wrap_CvLatentSvmDetector_b_get_cv_dbcbba478e71899d(CvLatentSvmDetector *_swig_go_0) {
  CvLatentSvmDetector *arg1 = (CvLatentSvmDetector *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(CvLatentSvmDetector **)&_swig_go_0; 
  
  result = (float *) ((arg1)->b);
  *(float **)&_swig_go_result = (float *)result; 
  return _swig_go_result;
}


void _wrap_CvLatentSvmDetector_score_threshold_set_cv_dbcbba478e71899d(CvLatentSvmDetector *_swig_go_0, float _swig_go_1) {
  CvLatentSvmDetector *arg1 = (CvLatentSvmDetector *) 0 ;
  float arg2 ;
  
  arg1 = *(CvLatentSvmDetector **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->score_threshold = arg2;
  
}


float _wrap_CvLatentSvmDetector_score_threshold_get_cv_dbcbba478e71899d(CvLatentSvmDetector *_swig_go_0) {
  CvLatentSvmDetector *arg1 = (CvLatentSvmDetector *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(CvLatentSvmDetector **)&_swig_go_0; 
  
  result = (float) ((arg1)->score_threshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


CvLatentSvmDetector *_wrap_new_CvLatentSvmDetector_cv_dbcbba478e71899d() {
  CvLatentSvmDetector *result = 0 ;
  CvLatentSvmDetector *_swig_go_result;
  
  
  result = (CvLatentSvmDetector *)new CvLatentSvmDetector();
  *(CvLatentSvmDetector **)&_swig_go_result = (CvLatentSvmDetector *)result; 
  return _swig_go_result;
}


void _wrap_delete_CvLatentSvmDetector_cv_dbcbba478e71899d(CvLatentSvmDetector *_swig_go_0) {
  CvLatentSvmDetector *arg1 = (CvLatentSvmDetector *) 0 ;
  
  arg1 = *(CvLatentSvmDetector **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_CvObjectDetection_rect_set_cv_dbcbba478e71899d(CvObjectDetection *_swig_go_0, CvRect *_swig_go_1) {
  CvObjectDetection *arg1 = (CvObjectDetection *) 0 ;
  CvRect *arg2 = (CvRect *) 0 ;
  
  arg1 = *(CvObjectDetection **)&_swig_go_0; 
  arg2 = *(CvRect **)&_swig_go_1; 
  
  if (arg1) (arg1)->rect = *arg2;
  
}


CvRect *_wrap_CvObjectDetection_rect_get_cv_dbcbba478e71899d(CvObjectDetection *_swig_go_0) {
  CvObjectDetection *arg1 = (CvObjectDetection *) 0 ;
  CvRect *result = 0 ;
  CvRect *_swig_go_result;
  
  arg1 = *(CvObjectDetection **)&_swig_go_0; 
  
  result = (CvRect *)& ((arg1)->rect);
  *(CvRect **)&_swig_go_result = (CvRect *)result; 
  return _swig_go_result;
}


void _wrap_CvObjectDetection_score_set_cv_dbcbba478e71899d(CvObjectDetection *_swig_go_0, float _swig_go_1) {
  CvObjectDetection *arg1 = (CvObjectDetection *) 0 ;
  float arg2 ;
  
  arg1 = *(CvObjectDetection **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->score = arg2;
  
}


float _wrap_CvObjectDetection_score_get_cv_dbcbba478e71899d(CvObjectDetection *_swig_go_0) {
  CvObjectDetection *arg1 = (CvObjectDetection *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(CvObjectDetection **)&_swig_go_0; 
  
  result = (float) ((arg1)->score);
  _swig_go_result = result; 
  return _swig_go_result;
}


CvObjectDetection *_wrap_new_CvObjectDetection_cv_dbcbba478e71899d() {
  CvObjectDetection *result = 0 ;
  CvObjectDetection *_swig_go_result;
  
  
  result = (CvObjectDetection *)new CvObjectDetection();
  *(CvObjectDetection **)&_swig_go_result = (CvObjectDetection *)result; 
  return _swig_go_result;
}


void _wrap_delete_CvObjectDetection_cv_dbcbba478e71899d(CvObjectDetection *_swig_go_0) {
  CvObjectDetection *arg1 = (CvObjectDetection *) 0 ;
  
  arg1 = *(CvObjectDetection **)&_swig_go_0; 
  
  delete arg1;
  
}


CvLatentSvmDetector *_wrap_cvLoadLatentSvmDetector_cv_dbcbba478e71899d(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  CvLatentSvmDetector *result = 0 ;
  CvLatentSvmDetector *_swig_go_result;
  
  arg1 = (char *)_swig_go_0.p; 
  
  result = (CvLatentSvmDetector *)cvLoadLatentSvmDetector((char const *)arg1);
  *(CvLatentSvmDetector **)&_swig_go_result = (CvLatentSvmDetector *)result; 
  return _swig_go_result;
}


void _wrap_cvReleaseLatentSvmDetector_cv_dbcbba478e71899d(CvLatentSvmDetector **_swig_go_0) {
  CvLatentSvmDetector **arg1 = (CvLatentSvmDetector **) 0 ;
  
  arg1 = *(CvLatentSvmDetector ***)&_swig_go_0; 
  
  cvReleaseLatentSvmDetector(arg1);
  
}


CvSeq *_wrap_cvLatentSvmDetectObjects_cv_dbcbba478e71899d(intgo _swig_optargc, _IplImage *_swig_go_0, CvLatentSvmDetector *_swig_go_1, CvMemStorage *_swig_go_2, float _swig_go_3, intgo _swig_go_4) {
  IplImage *arg1 = (IplImage *) 0 ;
  CvLatentSvmDetector *arg2 = (CvLatentSvmDetector *) 0 ;
  CvMemStorage *arg3 = (CvMemStorage *) 0 ;
  float arg4 = (float) 0.5 ;
  int arg5 = (int) -1 ;
  CvSeq *result = 0 ;
  CvSeq *_swig_go_result;
  
  arg1 = *(IplImage **)&_swig_go_0; 
  arg2 = *(CvLatentSvmDetector **)&_swig_go_1; 
  arg3 = *(CvMemStorage **)&_swig_go_2; 
  if (_swig_optargc > 0) {
    arg4 = (float)_swig_go_3; 
  }
  if (_swig_optargc > 1) {
    arg5 = (int)_swig_go_4; 
  }
  
  result = (CvSeq *)cvLatentSvmDetectObjects(arg1,arg2,arg3,arg4,arg5);
  *(CvSeq **)&_swig_go_result = (CvSeq *)result; 
  return _swig_go_result;
}


CvSeq *_wrap_cvHaarDetectObjectsForROC__SWIG_0_cv_dbcbba478e71899d(CvArr *_swig_go_0, CvHaarClassifierCascade *_swig_go_1, CvMemStorage *_swig_go_2, std::vector< int > *_swig_go_3, std::vector< double > *_swig_go_4, double _swig_go_5, intgo _swig_go_6, intgo _swig_go_7, CvSize *_swig_go_8, CvSize *_swig_go_9, bool _swig_go_10) {
  CvArr *arg1 = (CvArr *) 0 ;
  CvHaarClassifierCascade *arg2 = (CvHaarClassifierCascade *) 0 ;
  CvMemStorage *arg3 = (CvMemStorage *) 0 ;
  std::vector< int > *arg4 = 0 ;
  std::vector< double > *arg5 = 0 ;
  double arg6 ;
  int arg7 ;
  int arg8 ;
  CvSize arg9 ;
  CvSize arg10 ;
  bool arg11 ;
  CvSize *argp9 ;
  CvSize *argp10 ;
  CvSeq *result = 0 ;
  CvSeq *_swig_go_result;
  
  arg1 = *(CvArr **)&_swig_go_0; 
  arg2 = *(CvHaarClassifierCascade **)&_swig_go_1; 
  arg3 = *(CvMemStorage **)&_swig_go_2; 
  arg4 = *(std::vector< int > **)&_swig_go_3; 
  arg5 = *(std::vector< double > **)&_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  
  argp9 = (CvSize *)_swig_go_8;
  if (argp9 == NULL) {
    _swig_gopanic("Attempt to dereference null CvSize");
  }
  arg9 = (CvSize)*argp9;
  
  
  argp10 = (CvSize *)_swig_go_9;
  if (argp10 == NULL) {
    _swig_gopanic("Attempt to dereference null CvSize");
  }
  arg10 = (CvSize)*argp10;
  
  arg11 = (bool)_swig_go_10; 
  
  result = (CvSeq *)cvHaarDetectObjectsForROC((void const *)arg1,arg2,arg3,*arg4,*arg5,arg6,arg7,arg8,arg9,arg10,arg11);
  *(CvSeq **)&_swig_go_result = (CvSeq *)result; 
  return _swig_go_result;
}


CvSeq *_wrap_cvHaarDetectObjectsForROC__SWIG_1_cv_dbcbba478e71899d(CvArr *_swig_go_0, CvHaarClassifierCascade *_swig_go_1, CvMemStorage *_swig_go_2, std::vector< int > *_swig_go_3, std::vector< double > *_swig_go_4, double _swig_go_5, intgo _swig_go_6, intgo _swig_go_7, CvSize *_swig_go_8, CvSize *_swig_go_9) {
  CvArr *arg1 = (CvArr *) 0 ;
  CvHaarClassifierCascade *arg2 = (CvHaarClassifierCascade *) 0 ;
  CvMemStorage *arg3 = (CvMemStorage *) 0 ;
  std::vector< int > *arg4 = 0 ;
  std::vector< double > *arg5 = 0 ;
  double arg6 ;
  int arg7 ;
  int arg8 ;
  CvSize arg9 ;
  CvSize arg10 ;
  CvSize *argp9 ;
  CvSize *argp10 ;
  CvSeq *result = 0 ;
  CvSeq *_swig_go_result;
  
  arg1 = *(CvArr **)&_swig_go_0; 
  arg2 = *(CvHaarClassifierCascade **)&_swig_go_1; 
  arg3 = *(CvMemStorage **)&_swig_go_2; 
  arg4 = *(std::vector< int > **)&_swig_go_3; 
  arg5 = *(std::vector< double > **)&_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  
  argp9 = (CvSize *)_swig_go_8;
  if (argp9 == NULL) {
    _swig_gopanic("Attempt to dereference null CvSize");
  }
  arg9 = (CvSize)*argp9;
  
  
  argp10 = (CvSize *)_swig_go_9;
  if (argp10 == NULL) {
    _swig_gopanic("Attempt to dereference null CvSize");
  }
  arg10 = (CvSize)*argp10;
  
  
  result = (CvSeq *)cvHaarDetectObjectsForROC((void const *)arg1,arg2,arg3,*arg4,*arg5,arg6,arg7,arg8,arg9,arg10);
  *(CvSeq **)&_swig_go_result = (CvSeq *)result; 
  return _swig_go_result;
}


CvSeq *_wrap_cvHaarDetectObjectsForROC__SWIG_2_cv_dbcbba478e71899d(CvArr *_swig_go_0, CvHaarClassifierCascade *_swig_go_1, CvMemStorage *_swig_go_2, std::vector< int > *_swig_go_3, std::vector< double > *_swig_go_4, double _swig_go_5, intgo _swig_go_6, intgo _swig_go_7, CvSize *_swig_go_8) {
  CvArr *arg1 = (CvArr *) 0 ;
  CvHaarClassifierCascade *arg2 = (CvHaarClassifierCascade *) 0 ;
  CvMemStorage *arg3 = (CvMemStorage *) 0 ;
  std::vector< int > *arg4 = 0 ;
  std::vector< double > *arg5 = 0 ;
  double arg6 ;
  int arg7 ;
  int arg8 ;
  CvSize arg9 ;
  CvSize *argp9 ;
  CvSeq *result = 0 ;
  CvSeq *_swig_go_result;
  
  arg1 = *(CvArr **)&_swig_go_0; 
  arg2 = *(CvHaarClassifierCascade **)&_swig_go_1; 
  arg3 = *(CvMemStorage **)&_swig_go_2; 
  arg4 = *(std::vector< int > **)&_swig_go_3; 
  arg5 = *(std::vector< double > **)&_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  
  argp9 = (CvSize *)_swig_go_8;
  if (argp9 == NULL) {
    _swig_gopanic("Attempt to dereference null CvSize");
  }
  arg9 = (CvSize)*argp9;
  
  
  result = (CvSeq *)cvHaarDetectObjectsForROC((void const *)arg1,arg2,arg3,*arg4,*arg5,arg6,arg7,arg8,arg9);
  *(CvSeq **)&_swig_go_result = (CvSeq *)result; 
  return _swig_go_result;
}


CvSeq *_wrap_cvHaarDetectObjectsForROC__SWIG_3_cv_dbcbba478e71899d(CvArr *_swig_go_0, CvHaarClassifierCascade *_swig_go_1, CvMemStorage *_swig_go_2, std::vector< int > *_swig_go_3, std::vector< double > *_swig_go_4, double _swig_go_5, intgo _swig_go_6, intgo _swig_go_7) {
  CvArr *arg1 = (CvArr *) 0 ;
  CvHaarClassifierCascade *arg2 = (CvHaarClassifierCascade *) 0 ;
  CvMemStorage *arg3 = (CvMemStorage *) 0 ;
  std::vector< int > *arg4 = 0 ;
  std::vector< double > *arg5 = 0 ;
  double arg6 ;
  int arg7 ;
  int arg8 ;
  CvSeq *result = 0 ;
  CvSeq *_swig_go_result;
  
  arg1 = *(CvArr **)&_swig_go_0; 
  arg2 = *(CvHaarClassifierCascade **)&_swig_go_1; 
  arg3 = *(CvMemStorage **)&_swig_go_2; 
  arg4 = *(std::vector< int > **)&_swig_go_3; 
  arg5 = *(std::vector< double > **)&_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  
  result = (CvSeq *)cvHaarDetectObjectsForROC((void const *)arg1,arg2,arg3,*arg4,*arg5,arg6,arg7,arg8);
  *(CvSeq **)&_swig_go_result = (CvSeq *)result; 
  return _swig_go_result;
}


CvSeq *_wrap_cvHaarDetectObjectsForROC__SWIG_4_cv_dbcbba478e71899d(CvArr *_swig_go_0, CvHaarClassifierCascade *_swig_go_1, CvMemStorage *_swig_go_2, std::vector< int > *_swig_go_3, std::vector< double > *_swig_go_4, double _swig_go_5, intgo _swig_go_6) {
  CvArr *arg1 = (CvArr *) 0 ;
  CvHaarClassifierCascade *arg2 = (CvHaarClassifierCascade *) 0 ;
  CvMemStorage *arg3 = (CvMemStorage *) 0 ;
  std::vector< int > *arg4 = 0 ;
  std::vector< double > *arg5 = 0 ;
  double arg6 ;
  int arg7 ;
  CvSeq *result = 0 ;
  CvSeq *_swig_go_result;
  
  arg1 = *(CvArr **)&_swig_go_0; 
  arg2 = *(CvHaarClassifierCascade **)&_swig_go_1; 
  arg3 = *(CvMemStorage **)&_swig_go_2; 
  arg4 = *(std::vector< int > **)&_swig_go_3; 
  arg5 = *(std::vector< double > **)&_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  
  result = (CvSeq *)cvHaarDetectObjectsForROC((void const *)arg1,arg2,arg3,*arg4,*arg5,arg6,arg7);
  *(CvSeq **)&_swig_go_result = (CvSeq *)result; 
  return _swig_go_result;
}


CvSeq *_wrap_cvHaarDetectObjectsForROC__SWIG_5_cv_dbcbba478e71899d(CvArr *_swig_go_0, CvHaarClassifierCascade *_swig_go_1, CvMemStorage *_swig_go_2, std::vector< int > *_swig_go_3, std::vector< double > *_swig_go_4, double _swig_go_5) {
  CvArr *arg1 = (CvArr *) 0 ;
  CvHaarClassifierCascade *arg2 = (CvHaarClassifierCascade *) 0 ;
  CvMemStorage *arg3 = (CvMemStorage *) 0 ;
  std::vector< int > *arg4 = 0 ;
  std::vector< double > *arg5 = 0 ;
  double arg6 ;
  CvSeq *result = 0 ;
  CvSeq *_swig_go_result;
  
  arg1 = *(CvArr **)&_swig_go_0; 
  arg2 = *(CvHaarClassifierCascade **)&_swig_go_1; 
  arg3 = *(CvMemStorage **)&_swig_go_2; 
  arg4 = *(std::vector< int > **)&_swig_go_3; 
  arg5 = *(std::vector< double > **)&_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  
  result = (CvSeq *)cvHaarDetectObjectsForROC((void const *)arg1,arg2,arg3,*arg4,*arg5,arg6);
  *(CvSeq **)&_swig_go_result = (CvSeq *)result; 
  return _swig_go_result;
}


CvSeq *_wrap_cvHaarDetectObjectsForROC__SWIG_6_cv_dbcbba478e71899d(CvArr *_swig_go_0, CvHaarClassifierCascade *_swig_go_1, CvMemStorage *_swig_go_2, std::vector< int > *_swig_go_3, std::vector< double > *_swig_go_4) {
  CvArr *arg1 = (CvArr *) 0 ;
  CvHaarClassifierCascade *arg2 = (CvHaarClassifierCascade *) 0 ;
  CvMemStorage *arg3 = (CvMemStorage *) 0 ;
  std::vector< int > *arg4 = 0 ;
  std::vector< double > *arg5 = 0 ;
  CvSeq *result = 0 ;
  CvSeq *_swig_go_result;
  
  arg1 = *(CvArr **)&_swig_go_0; 
  arg2 = *(CvHaarClassifierCascade **)&_swig_go_1; 
  arg3 = *(CvMemStorage **)&_swig_go_2; 
  arg4 = *(std::vector< int > **)&_swig_go_3; 
  arg5 = *(std::vector< double > **)&_swig_go_4; 
  
  result = (CvSeq *)cvHaarDetectObjectsForROC((void const *)arg1,arg2,arg3,*arg4,*arg5);
  *(CvSeq **)&_swig_go_result = (CvSeq *)result; 
  return _swig_go_result;
}


cv::LatentSvmDetector *_wrap_new_LatentSvmDetector__SWIG_0_cv_dbcbba478e71899d() {
  cv::LatentSvmDetector *result = 0 ;
  cv::LatentSvmDetector *_swig_go_result;
  
  
  result = (cv::LatentSvmDetector *)new cv::LatentSvmDetector();
  *(cv::LatentSvmDetector **)&_swig_go_result = (cv::LatentSvmDetector *)result; 
  return _swig_go_result;
}


cv::LatentSvmDetector *_wrap_new_LatentSvmDetector__SWIG_1_cv_dbcbba478e71899d(std::vector< std::string > *_swig_go_0, std::vector< std::string > *_swig_go_1) {
  std::vector< cv::string > *arg1 = 0 ;
  std::vector< cv::string > *arg2 = 0 ;
  cv::LatentSvmDetector *result = 0 ;
  cv::LatentSvmDetector *_swig_go_result;
  
  arg1 = *(std::vector< cv::string > **)&_swig_go_0; 
  arg2 = *(std::vector< cv::string > **)&_swig_go_1; 
  
  result = (cv::LatentSvmDetector *)new cv::LatentSvmDetector((std::vector< cv::string > const &)*arg1,(std::vector< cv::string > const &)*arg2);
  *(cv::LatentSvmDetector **)&_swig_go_result = (cv::LatentSvmDetector *)result; 
  return _swig_go_result;
}


cv::LatentSvmDetector *_wrap_new_LatentSvmDetector__SWIG_2_cv_dbcbba478e71899d(std::vector< std::string > *_swig_go_0) {
  std::vector< cv::string > *arg1 = 0 ;
  cv::LatentSvmDetector *result = 0 ;
  cv::LatentSvmDetector *_swig_go_result;
  
  arg1 = *(std::vector< cv::string > **)&_swig_go_0; 
  
  result = (cv::LatentSvmDetector *)new cv::LatentSvmDetector((std::vector< cv::string > const &)*arg1);
  *(cv::LatentSvmDetector **)&_swig_go_result = (cv::LatentSvmDetector *)result; 
  return _swig_go_result;
}


void _wrap_delete_LatentSvmDetector_cv_dbcbba478e71899d(cv::LatentSvmDetector *_swig_go_0) {
  cv::LatentSvmDetector *arg1 = (cv::LatentSvmDetector *) 0 ;
  
  arg1 = *(cv::LatentSvmDetector **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_LatentSvmDetector_clear_cv_dbcbba478e71899d(cv::LatentSvmDetector *_swig_go_0) {
  cv::LatentSvmDetector *arg1 = (cv::LatentSvmDetector *) 0 ;
  
  arg1 = *(cv::LatentSvmDetector **)&_swig_go_0; 
  
  (arg1)->clear();
  
}


bool _wrap_LatentSvmDetector_empty_cv_dbcbba478e71899d(cv::LatentSvmDetector *_swig_go_0) {
  cv::LatentSvmDetector *arg1 = (cv::LatentSvmDetector *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::LatentSvmDetector **)&_swig_go_0; 
  
  result = (bool)((cv::LatentSvmDetector const *)arg1)->empty();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_LatentSvmDetector_load__SWIG_0_cv_dbcbba478e71899d(cv::LatentSvmDetector *_swig_go_0, std::vector< std::string > *_swig_go_1, std::vector< std::string > *_swig_go_2) {
  cv::LatentSvmDetector *arg1 = (cv::LatentSvmDetector *) 0 ;
  std::vector< cv::string > *arg2 = 0 ;
  std::vector< cv::string > *arg3 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::LatentSvmDetector **)&_swig_go_0; 
  arg2 = *(std::vector< cv::string > **)&_swig_go_1; 
  arg3 = *(std::vector< cv::string > **)&_swig_go_2; 
  
  result = (bool)(arg1)->load((std::vector< cv::string > const &)*arg2,(std::vector< cv::string > const &)*arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_LatentSvmDetector_load__SWIG_1_cv_dbcbba478e71899d(cv::LatentSvmDetector *_swig_go_0, std::vector< std::string > *_swig_go_1) {
  cv::LatentSvmDetector *arg1 = (cv::LatentSvmDetector *) 0 ;
  std::vector< cv::string > *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::LatentSvmDetector **)&_swig_go_0; 
  arg2 = *(std::vector< cv::string > **)&_swig_go_1; 
  
  result = (bool)(arg1)->load((std::vector< cv::string > const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_LatentSvmDetector_detect__SWIG_0_cv_dbcbba478e71899d(cv::LatentSvmDetector *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::LatentSvmDetector::ObjectDetection > *_swig_go_2, float _swig_go_3, intgo _swig_go_4) {
  cv::LatentSvmDetector *arg1 = (cv::LatentSvmDetector *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::LatentSvmDetector::ObjectDetection > *arg3 = 0 ;
  float arg4 ;
  int arg5 ;
  
  arg1 = *(cv::LatentSvmDetector **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::LatentSvmDetector::ObjectDetection > **)&_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  (arg1)->detect((cv::Mat const &)*arg2,*arg3,arg4,arg5);
  
}


void _wrap_LatentSvmDetector_detect__SWIG_1_cv_dbcbba478e71899d(cv::LatentSvmDetector *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::LatentSvmDetector::ObjectDetection > *_swig_go_2, float _swig_go_3) {
  cv::LatentSvmDetector *arg1 = (cv::LatentSvmDetector *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::LatentSvmDetector::ObjectDetection > *arg3 = 0 ;
  float arg4 ;
  
  arg1 = *(cv::LatentSvmDetector **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::LatentSvmDetector::ObjectDetection > **)&_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  (arg1)->detect((cv::Mat const &)*arg2,*arg3,arg4);
  
}


void _wrap_LatentSvmDetector_detect__SWIG_2_cv_dbcbba478e71899d(cv::LatentSvmDetector *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::LatentSvmDetector::ObjectDetection > *_swig_go_2) {
  cv::LatentSvmDetector *arg1 = (cv::LatentSvmDetector *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::LatentSvmDetector::ObjectDetection > *arg3 = 0 ;
  
  arg1 = *(cv::LatentSvmDetector **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::LatentSvmDetector::ObjectDetection > **)&_swig_go_2; 
  
  (arg1)->detect((cv::Mat const &)*arg2,*arg3);
  
}


std::vector< std::string > *_wrap_LatentSvmDetector_getClassNames_cv_dbcbba478e71899d(cv::LatentSvmDetector *_swig_go_0) {
  cv::LatentSvmDetector *arg1 = (cv::LatentSvmDetector *) 0 ;
  std::vector< cv::string > *result = 0 ;
  std::vector< std::string > *_swig_go_result;
  
  arg1 = *(cv::LatentSvmDetector **)&_swig_go_0; 
  
  result = (std::vector< cv::string > *) &((cv::LatentSvmDetector const *)arg1)->getClassNames();
  *(std::vector< cv::string > **)&_swig_go_result = result; 
  return _swig_go_result;
}


long long _wrap_LatentSvmDetector_getClassCount_cv_dbcbba478e71899d(cv::LatentSvmDetector *_swig_go_0) {
  cv::LatentSvmDetector *arg1 = (cv::LatentSvmDetector *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(cv::LatentSvmDetector **)&_swig_go_0; 
  
  result = ((cv::LatentSvmDetector const *)arg1)->getClassCount();
  _swig_go_result = result; 
  return _swig_go_result;
}


cv::SimilarRects *_wrap_new_SimilarRects_cv_dbcbba478e71899d(double _swig_go_0) {
  double arg1 ;
  cv::SimilarRects *result = 0 ;
  cv::SimilarRects *_swig_go_result;
  
  arg1 = (double)_swig_go_0; 
  
  result = (cv::SimilarRects *)new cv::SimilarRects(arg1);
  *(cv::SimilarRects **)&_swig_go_result = (cv::SimilarRects *)result; 
  return _swig_go_result;
}


void _wrap_SimilarRects_eps_set_cv_dbcbba478e71899d(cv::SimilarRects *_swig_go_0, double _swig_go_1) {
  cv::SimilarRects *arg1 = (cv::SimilarRects *) 0 ;
  double arg2 ;
  
  arg1 = *(cv::SimilarRects **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->eps = arg2;
  
}


double _wrap_SimilarRects_eps_get_cv_dbcbba478e71899d(cv::SimilarRects *_swig_go_0) {
  cv::SimilarRects *arg1 = (cv::SimilarRects *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::SimilarRects **)&_swig_go_0; 
  
  result = (double) ((arg1)->eps);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_SimilarRects_cv_dbcbba478e71899d(cv::SimilarRects *_swig_go_0) {
  cv::SimilarRects *arg1 = (cv::SimilarRects *) 0 ;
  
  arg1 = *(cv::SimilarRects **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_groupRectangles__SWIG_0_cv_dbcbba478e71899d(std::vector< cv::Rect_< int > > *_swig_go_0, intgo _swig_go_1, double _swig_go_2) {
  std::vector< cv::Rect > *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  arg1 = *(std::vector< cv::Rect > **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  cv::groupRectangles(*arg1,arg2,arg3);
  
}


void _wrap_groupRectangles__SWIG_1_cv_dbcbba478e71899d(std::vector< cv::Rect_< int > > *_swig_go_0, intgo _swig_go_1) {
  std::vector< cv::Rect > *arg1 = 0 ;
  int arg2 ;
  
  arg1 = *(std::vector< cv::Rect > **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  cv::groupRectangles(*arg1,arg2);
  
}


void _wrap_groupRectangles__SWIG_2_cv_dbcbba478e71899d(std::vector< cv::Rect_< int > > *_swig_go_0, std::vector< int > *_swig_go_1, intgo _swig_go_2, double _swig_go_3) {
  std::vector< cv::Rect > *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  
  arg1 = *(std::vector< cv::Rect > **)&_swig_go_0; 
  arg2 = *(std::vector< int > **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  cv::groupRectangles(*arg1,*arg2,arg3,arg4);
  
}


void _wrap_groupRectangles__SWIG_3_cv_dbcbba478e71899d(std::vector< cv::Rect_< int > > *_swig_go_0, std::vector< int > *_swig_go_1, intgo _swig_go_2) {
  std::vector< cv::Rect > *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  int arg3 ;
  
  arg1 = *(std::vector< cv::Rect > **)&_swig_go_0; 
  arg2 = *(std::vector< int > **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  cv::groupRectangles(*arg1,*arg2,arg3);
  
}


void _wrap_groupRectangles__SWIG_4_cv_dbcbba478e71899d(std::vector< cv::Rect_< int > > *_swig_go_0, intgo _swig_go_1, double _swig_go_2, std::vector< int > *_swig_go_3, std::vector< double > *_swig_go_4) {
  std::vector< cv::Rect > *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = (std::vector< int > *) 0 ;
  std::vector< double > *arg5 = (std::vector< double > *) 0 ;
  
  arg1 = *(std::vector< cv::Rect > **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = *(std::vector< int > **)&_swig_go_3; 
  arg5 = *(std::vector< double > **)&_swig_go_4; 
  
  cv::groupRectangles(*arg1,arg2,arg3,arg4,arg5);
  
}


void _wrap_groupRectangles__SWIG_5_cv_dbcbba478e71899d(std::vector< cv::Rect_< int > > *_swig_go_0, std::vector< int > *_swig_go_1, std::vector< double > *_swig_go_2, intgo _swig_go_3, double _swig_go_4) {
  std::vector< cv::Rect > *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  std::vector< double > *arg3 = 0 ;
  int arg4 ;
  double arg5 ;
  
  arg1 = *(std::vector< cv::Rect > **)&_swig_go_0; 
  arg2 = *(std::vector< int > **)&_swig_go_1; 
  arg3 = *(std::vector< double > **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  cv::groupRectangles(*arg1,*arg2,*arg3,arg4,arg5);
  
}


void _wrap_groupRectangles__SWIG_6_cv_dbcbba478e71899d(std::vector< cv::Rect_< int > > *_swig_go_0, std::vector< int > *_swig_go_1, std::vector< double > *_swig_go_2, intgo _swig_go_3) {
  std::vector< cv::Rect > *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  std::vector< double > *arg3 = 0 ;
  int arg4 ;
  
  arg1 = *(std::vector< cv::Rect > **)&_swig_go_0; 
  arg2 = *(std::vector< int > **)&_swig_go_1; 
  arg3 = *(std::vector< double > **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  cv::groupRectangles(*arg1,*arg2,*arg3,arg4);
  
}


void _wrap_groupRectangles_meanshift__SWIG_0_cv_dbcbba478e71899d(std::vector< cv::Rect_< int > > *_swig_go_0, std::vector< double > *_swig_go_1, std::vector< double > *_swig_go_2, double _swig_go_3, cv::Size_< int > *_swig_go_4) {
  std::vector< cv::Rect > *arg1 = 0 ;
  std::vector< double > *arg2 = 0 ;
  std::vector< double > *arg3 = 0 ;
  double arg4 ;
  SwigValueWrapper< cv::Size_< int > > arg5 ;
  cv::Size *argp5 ;
  
  arg1 = *(std::vector< cv::Rect > **)&_swig_go_0; 
  arg2 = *(std::vector< double > **)&_swig_go_1; 
  arg3 = *(std::vector< double > **)&_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  argp5 = (cv::Size *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg5 = (cv::Size)*argp5;
  
  
  cv::groupRectangles_meanshift(*arg1,*arg2,*arg3,arg4,arg5);
  
}


void _wrap_groupRectangles_meanshift__SWIG_1_cv_dbcbba478e71899d(std::vector< cv::Rect_< int > > *_swig_go_0, std::vector< double > *_swig_go_1, std::vector< double > *_swig_go_2, double _swig_go_3) {
  std::vector< cv::Rect > *arg1 = 0 ;
  std::vector< double > *arg2 = 0 ;
  std::vector< double > *arg3 = 0 ;
  double arg4 ;
  
  arg1 = *(std::vector< cv::Rect > **)&_swig_go_0; 
  arg2 = *(std::vector< double > **)&_swig_go_1; 
  arg3 = *(std::vector< double > **)&_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  cv::groupRectangles_meanshift(*arg1,*arg2,*arg3,arg4);
  
}


void _wrap_groupRectangles_meanshift__SWIG_2_cv_dbcbba478e71899d(std::vector< cv::Rect_< int > > *_swig_go_0, std::vector< double > *_swig_go_1, std::vector< double > *_swig_go_2) {
  std::vector< cv::Rect > *arg1 = 0 ;
  std::vector< double > *arg2 = 0 ;
  std::vector< double > *arg3 = 0 ;
  
  arg1 = *(std::vector< cv::Rect > **)&_swig_go_0; 
  arg2 = *(std::vector< double > **)&_swig_go_1; 
  arg3 = *(std::vector< double > **)&_swig_go_2; 
  
  cv::groupRectangles_meanshift(*arg1,*arg2,*arg3);
  
}


intgo _wrap_HAAR_FeatureEvaluator_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FeatureEvaluator::HAAR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_LBP_FeatureEvaluator_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FeatureEvaluator::LBP;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_HOG_FeatureEvaluator_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FeatureEvaluator::HOG;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_delete_FeatureEvaluator_cv_dbcbba478e71899d(cv::FeatureEvaluator *_swig_go_0) {
  cv::FeatureEvaluator *arg1 = (cv::FeatureEvaluator *) 0 ;
  
  arg1 = *(cv::FeatureEvaluator **)&_swig_go_0; 
  
  delete arg1;
  
}


bool _wrap_FeatureEvaluator_read_cv_dbcbba478e71899d(cv::FeatureEvaluator *_swig_go_0, cv::FileNode *_swig_go_1) {
  cv::FeatureEvaluator *arg1 = (cv::FeatureEvaluator *) 0 ;
  cv::FileNode *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::FeatureEvaluator **)&_swig_go_0; 
  arg2 = *(cv::FileNode **)&_swig_go_1; 
  
  result = (bool)(arg1)->read((cv::FileNode const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


cv::Ptr< cv::FeatureEvaluator > *_wrap_FeatureEvaluator_clone_cv_dbcbba478e71899d(cv::FeatureEvaluator *_swig_go_0) {
  cv::FeatureEvaluator *arg1 = (cv::FeatureEvaluator *) 0 ;
  SwigValueWrapper< cv::Ptr< cv::FeatureEvaluator > > result;
  cv::Ptr< cv::FeatureEvaluator > *_swig_go_result;
  
  arg1 = *(cv::FeatureEvaluator **)&_swig_go_0; 
  
  result = ((cv::FeatureEvaluator const *)arg1)->clone();
  *(cv::Ptr< cv::FeatureEvaluator > **)&_swig_go_result = new cv::Ptr< cv::FeatureEvaluator >(result); 
  return _swig_go_result;
}


intgo _wrap_FeatureEvaluator_getFeatureType_cv_dbcbba478e71899d(cv::FeatureEvaluator *_swig_go_0) {
  cv::FeatureEvaluator *arg1 = (cv::FeatureEvaluator *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::FeatureEvaluator **)&_swig_go_0; 
  
  result = (int)((cv::FeatureEvaluator const *)arg1)->getFeatureType();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_FeatureEvaluator_setImage_cv_dbcbba478e71899d(cv::FeatureEvaluator *_swig_go_0, cv::Mat *_swig_go_1, cv::Size_< int > *_swig_go_2) {
  cv::FeatureEvaluator *arg1 = (cv::FeatureEvaluator *) 0 ;
  cv::Mat *arg2 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg3 ;
  cv::Size *argp3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::FeatureEvaluator **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  
  argp3 = (cv::Size *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg3 = (cv::Size)*argp3;
  
  
  result = (bool)(arg1)->setImage((cv::Mat const &)*arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_FeatureEvaluator_setWindow_cv_dbcbba478e71899d(cv::FeatureEvaluator *_swig_go_0, cv::Point_< int > *_swig_go_1) {
  cv::FeatureEvaluator *arg1 = (cv::FeatureEvaluator *) 0 ;
  SwigValueWrapper< cv::Point_< int > > arg2 ;
  cv::Point *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::FeatureEvaluator **)&_swig_go_0; 
  
  argp2 = (cv::Point *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg2 = (cv::Point)*argp2;
  
  
  result = (bool)(arg1)->setWindow(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_FeatureEvaluator_calcOrd_cv_dbcbba478e71899d(cv::FeatureEvaluator *_swig_go_0, intgo _swig_go_1) {
  cv::FeatureEvaluator *arg1 = (cv::FeatureEvaluator *) 0 ;
  int arg2 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::FeatureEvaluator **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (double)((cv::FeatureEvaluator const *)arg1)->calcOrd(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_FeatureEvaluator_calcCat_cv_dbcbba478e71899d(cv::FeatureEvaluator *_swig_go_0, intgo _swig_go_1) {
  cv::FeatureEvaluator *arg1 = (cv::FeatureEvaluator *) 0 ;
  int arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::FeatureEvaluator **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (int)((cv::FeatureEvaluator const *)arg1)->calcCat(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


cv::Ptr< cv::FeatureEvaluator > *_wrap_FeatureEvaluator_create_cv_dbcbba478e71899d(intgo _swig_go_0) {
  int arg1 ;
  SwigValueWrapper< cv::Ptr< cv::FeatureEvaluator > > result;
  cv::Ptr< cv::FeatureEvaluator > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = cv::FeatureEvaluator::create(arg1);
  *(cv::Ptr< cv::FeatureEvaluator > **)&_swig_go_result = new cv::Ptr< cv::FeatureEvaluator >(result); 
  return _swig_go_result;
}


cv::FeatureEvaluator *_wrap_new_FeatureEvaluator_cv_dbcbba478e71899d() {
  cv::FeatureEvaluator *result = 0 ;
  cv::FeatureEvaluator *_swig_go_result;
  
  
  result = (cv::FeatureEvaluator *)new cv::FeatureEvaluator();
  *(cv::FeatureEvaluator **)&_swig_go_result = (cv::FeatureEvaluator *)result; 
  return _swig_go_result;
}


intgo _wrap_CASCADE_DO_CANNY_PRUNING_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::CASCADE_DO_CANNY_PRUNING;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CASCADE_SCALE_IMAGE_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::CASCADE_SCALE_IMAGE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CASCADE_FIND_BIGGEST_OBJECT_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::CASCADE_FIND_BIGGEST_OBJECT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CASCADE_DO_ROUGH_SEARCH_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::CASCADE_DO_ROUGH_SEARCH;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


cv::CascadeClassifier *_wrap_new_CascadeClassifier__SWIG_0_cv_dbcbba478e71899d() {
  cv::CascadeClassifier *result = 0 ;
  cv::CascadeClassifier *_swig_go_result;
  
  
  result = (cv::CascadeClassifier *)new cv::CascadeClassifier();
  *(cv::CascadeClassifier **)&_swig_go_result = (cv::CascadeClassifier *)result; 
  return _swig_go_result;
}


cv::CascadeClassifier *_wrap_new_CascadeClassifier__SWIG_1_cv_dbcbba478e71899d(_gostring_ _swig_go_0) {
  cv::string *arg1 = 0 ;
  cv::CascadeClassifier *result = 0 ;
  cv::CascadeClassifier *_swig_go_result;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  
  result = (cv::CascadeClassifier *)new cv::CascadeClassifier((cv::string const &)*arg1);
  *(cv::CascadeClassifier **)&_swig_go_result = (cv::CascadeClassifier *)result; 
  return _swig_go_result;
}


void _wrap_delete_CascadeClassifier_cv_dbcbba478e71899d(cv::CascadeClassifier *_swig_go_0) {
  cv::CascadeClassifier *arg1 = (cv::CascadeClassifier *) 0 ;
  
  arg1 = *(cv::CascadeClassifier **)&_swig_go_0; 
  
  delete arg1;
  
}


bool _wrap_CascadeClassifier_empty_cv_dbcbba478e71899d(cv::CascadeClassifier *_swig_go_0) {
  cv::CascadeClassifier *arg1 = (cv::CascadeClassifier *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::CascadeClassifier **)&_swig_go_0; 
  
  result = (bool)((cv::CascadeClassifier const *)arg1)->empty();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_CascadeClassifier_load_cv_dbcbba478e71899d(cv::CascadeClassifier *_swig_go_0, _gostring_ _swig_go_1) {
  cv::CascadeClassifier *arg1 = (cv::CascadeClassifier *) 0 ;
  cv::string *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::CascadeClassifier **)&_swig_go_0; 
  
  cv::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  result = (bool)(arg1)->load((cv::string const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_CascadeClassifier_read_cv_dbcbba478e71899d(cv::CascadeClassifier *_swig_go_0, cv::FileNode *_swig_go_1) {
  cv::CascadeClassifier *arg1 = (cv::CascadeClassifier *) 0 ;
  cv::FileNode *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::CascadeClassifier **)&_swig_go_0; 
  arg2 = *(cv::FileNode **)&_swig_go_1; 
  
  result = (bool)(arg1)->read((cv::FileNode const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CascadeClassifier_detectMultiScale__SWIG_0_cv_dbcbba478e71899d(cv::CascadeClassifier *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Rect_< int > > *_swig_go_2, double _swig_go_3, intgo _swig_go_4, intgo _swig_go_5, cv::Size_< int > *_swig_go_6, cv::Size_< int > *_swig_go_7) {
  cv::CascadeClassifier *arg1 = (cv::CascadeClassifier *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Rect > *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  int arg6 ;
  SwigValueWrapper< cv::Size_< int > > arg7 ;
  SwigValueWrapper< cv::Size_< int > > arg8 ;
  cv::Size *argp7 ;
  cv::Size *argp8 ;
  
  arg1 = *(cv::CascadeClassifier **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Rect > **)&_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  argp7 = (cv::Size *)_swig_go_6;
  if (argp7 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg7 = (cv::Size)*argp7;
  
  
  argp8 = (cv::Size *)_swig_go_7;
  if (argp8 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg8 = (cv::Size)*argp8;
  
  
  (arg1)->detectMultiScale((cv::Mat const &)*arg2,*arg3,arg4,arg5,arg6,arg7,arg8);
  
}


void _wrap_CascadeClassifier_detectMultiScale__SWIG_1_cv_dbcbba478e71899d(cv::CascadeClassifier *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Rect_< int > > *_swig_go_2, double _swig_go_3, intgo _swig_go_4, intgo _swig_go_5, cv::Size_< int > *_swig_go_6) {
  cv::CascadeClassifier *arg1 = (cv::CascadeClassifier *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Rect > *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  int arg6 ;
  SwigValueWrapper< cv::Size_< int > > arg7 ;
  cv::Size *argp7 ;
  
  arg1 = *(cv::CascadeClassifier **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Rect > **)&_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  argp7 = (cv::Size *)_swig_go_6;
  if (argp7 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg7 = (cv::Size)*argp7;
  
  
  (arg1)->detectMultiScale((cv::Mat const &)*arg2,*arg3,arg4,arg5,arg6,arg7);
  
}


void _wrap_CascadeClassifier_detectMultiScale__SWIG_2_cv_dbcbba478e71899d(cv::CascadeClassifier *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Rect_< int > > *_swig_go_2, double _swig_go_3, intgo _swig_go_4, intgo _swig_go_5) {
  cv::CascadeClassifier *arg1 = (cv::CascadeClassifier *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Rect > *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  int arg6 ;
  
  arg1 = *(cv::CascadeClassifier **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Rect > **)&_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  (arg1)->detectMultiScale((cv::Mat const &)*arg2,*arg3,arg4,arg5,arg6);
  
}


void _wrap_CascadeClassifier_detectMultiScale__SWIG_3_cv_dbcbba478e71899d(cv::CascadeClassifier *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Rect_< int > > *_swig_go_2, double _swig_go_3, intgo _swig_go_4) {
  cv::CascadeClassifier *arg1 = (cv::CascadeClassifier *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Rect > *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  
  arg1 = *(cv::CascadeClassifier **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Rect > **)&_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  (arg1)->detectMultiScale((cv::Mat const &)*arg2,*arg3,arg4,arg5);
  
}


void _wrap_CascadeClassifier_detectMultiScale__SWIG_4_cv_dbcbba478e71899d(cv::CascadeClassifier *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Rect_< int > > *_swig_go_2, double _swig_go_3) {
  cv::CascadeClassifier *arg1 = (cv::CascadeClassifier *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Rect > *arg3 = 0 ;
  double arg4 ;
  
  arg1 = *(cv::CascadeClassifier **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Rect > **)&_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  (arg1)->detectMultiScale((cv::Mat const &)*arg2,*arg3,arg4);
  
}


void _wrap_CascadeClassifier_detectMultiScale__SWIG_5_cv_dbcbba478e71899d(cv::CascadeClassifier *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Rect_< int > > *_swig_go_2) {
  cv::CascadeClassifier *arg1 = (cv::CascadeClassifier *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Rect > *arg3 = 0 ;
  
  arg1 = *(cv::CascadeClassifier **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Rect > **)&_swig_go_2; 
  
  (arg1)->detectMultiScale((cv::Mat const &)*arg2,*arg3);
  
}


void _wrap_CascadeClassifier_detectMultiScale__SWIG_6_cv_dbcbba478e71899d(cv::CascadeClassifier *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Rect_< int > > *_swig_go_2, std::vector< int > *_swig_go_3, std::vector< double > *_swig_go_4, double _swig_go_5, intgo _swig_go_6, intgo _swig_go_7, cv::Size_< int > *_swig_go_8, cv::Size_< int > *_swig_go_9, bool _swig_go_10) {
  cv::CascadeClassifier *arg1 = (cv::CascadeClassifier *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Rect > *arg3 = 0 ;
  std::vector< int > *arg4 = 0 ;
  std::vector< double > *arg5 = 0 ;
  double arg6 ;
  int arg7 ;
  int arg8 ;
  SwigValueWrapper< cv::Size_< int > > arg9 ;
  SwigValueWrapper< cv::Size_< int > > arg10 ;
  bool arg11 ;
  cv::Size *argp9 ;
  cv::Size *argp10 ;
  
  arg1 = *(cv::CascadeClassifier **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Rect > **)&_swig_go_2; 
  arg4 = *(std::vector< int > **)&_swig_go_3; 
  arg5 = *(std::vector< double > **)&_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  
  argp9 = (cv::Size *)_swig_go_8;
  if (argp9 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg9 = (cv::Size)*argp9;
  
  
  argp10 = (cv::Size *)_swig_go_9;
  if (argp10 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg10 = (cv::Size)*argp10;
  
  arg11 = (bool)_swig_go_10; 
  
  (arg1)->detectMultiScale((cv::Mat const &)*arg2,*arg3,*arg4,*arg5,arg6,arg7,arg8,arg9,arg10,arg11);
  
}


void _wrap_CascadeClassifier_detectMultiScale__SWIG_7_cv_dbcbba478e71899d(cv::CascadeClassifier *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Rect_< int > > *_swig_go_2, std::vector< int > *_swig_go_3, std::vector< double > *_swig_go_4, double _swig_go_5, intgo _swig_go_6, intgo _swig_go_7, cv::Size_< int > *_swig_go_8, cv::Size_< int > *_swig_go_9) {
  cv::CascadeClassifier *arg1 = (cv::CascadeClassifier *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Rect > *arg3 = 0 ;
  std::vector< int > *arg4 = 0 ;
  std::vector< double > *arg5 = 0 ;
  double arg6 ;
  int arg7 ;
  int arg8 ;
  SwigValueWrapper< cv::Size_< int > > arg9 ;
  SwigValueWrapper< cv::Size_< int > > arg10 ;
  cv::Size *argp9 ;
  cv::Size *argp10 ;
  
  arg1 = *(cv::CascadeClassifier **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Rect > **)&_swig_go_2; 
  arg4 = *(std::vector< int > **)&_swig_go_3; 
  arg5 = *(std::vector< double > **)&_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  
  argp9 = (cv::Size *)_swig_go_8;
  if (argp9 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg9 = (cv::Size)*argp9;
  
  
  argp10 = (cv::Size *)_swig_go_9;
  if (argp10 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg10 = (cv::Size)*argp10;
  
  
  (arg1)->detectMultiScale((cv::Mat const &)*arg2,*arg3,*arg4,*arg5,arg6,arg7,arg8,arg9,arg10);
  
}


void _wrap_CascadeClassifier_detectMultiScale__SWIG_8_cv_dbcbba478e71899d(cv::CascadeClassifier *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Rect_< int > > *_swig_go_2, std::vector< int > *_swig_go_3, std::vector< double > *_swig_go_4, double _swig_go_5, intgo _swig_go_6, intgo _swig_go_7, cv::Size_< int > *_swig_go_8) {
  cv::CascadeClassifier *arg1 = (cv::CascadeClassifier *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Rect > *arg3 = 0 ;
  std::vector< int > *arg4 = 0 ;
  std::vector< double > *arg5 = 0 ;
  double arg6 ;
  int arg7 ;
  int arg8 ;
  SwigValueWrapper< cv::Size_< int > > arg9 ;
  cv::Size *argp9 ;
  
  arg1 = *(cv::CascadeClassifier **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Rect > **)&_swig_go_2; 
  arg4 = *(std::vector< int > **)&_swig_go_3; 
  arg5 = *(std::vector< double > **)&_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  
  argp9 = (cv::Size *)_swig_go_8;
  if (argp9 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg9 = (cv::Size)*argp9;
  
  
  (arg1)->detectMultiScale((cv::Mat const &)*arg2,*arg3,*arg4,*arg5,arg6,arg7,arg8,arg9);
  
}


void _wrap_CascadeClassifier_detectMultiScale__SWIG_9_cv_dbcbba478e71899d(cv::CascadeClassifier *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Rect_< int > > *_swig_go_2, std::vector< int > *_swig_go_3, std::vector< double > *_swig_go_4, double _swig_go_5, intgo _swig_go_6, intgo _swig_go_7) {
  cv::CascadeClassifier *arg1 = (cv::CascadeClassifier *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Rect > *arg3 = 0 ;
  std::vector< int > *arg4 = 0 ;
  std::vector< double > *arg5 = 0 ;
  double arg6 ;
  int arg7 ;
  int arg8 ;
  
  arg1 = *(cv::CascadeClassifier **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Rect > **)&_swig_go_2; 
  arg4 = *(std::vector< int > **)&_swig_go_3; 
  arg5 = *(std::vector< double > **)&_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  
  (arg1)->detectMultiScale((cv::Mat const &)*arg2,*arg3,*arg4,*arg5,arg6,arg7,arg8);
  
}


void _wrap_CascadeClassifier_detectMultiScale__SWIG_10_cv_dbcbba478e71899d(cv::CascadeClassifier *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Rect_< int > > *_swig_go_2, std::vector< int > *_swig_go_3, std::vector< double > *_swig_go_4, double _swig_go_5, intgo _swig_go_6) {
  cv::CascadeClassifier *arg1 = (cv::CascadeClassifier *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Rect > *arg3 = 0 ;
  std::vector< int > *arg4 = 0 ;
  std::vector< double > *arg5 = 0 ;
  double arg6 ;
  int arg7 ;
  
  arg1 = *(cv::CascadeClassifier **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Rect > **)&_swig_go_2; 
  arg4 = *(std::vector< int > **)&_swig_go_3; 
  arg5 = *(std::vector< double > **)&_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  
  (arg1)->detectMultiScale((cv::Mat const &)*arg2,*arg3,*arg4,*arg5,arg6,arg7);
  
}


void _wrap_CascadeClassifier_detectMultiScale__SWIG_11_cv_dbcbba478e71899d(cv::CascadeClassifier *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Rect_< int > > *_swig_go_2, std::vector< int > *_swig_go_3, std::vector< double > *_swig_go_4, double _swig_go_5) {
  cv::CascadeClassifier *arg1 = (cv::CascadeClassifier *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Rect > *arg3 = 0 ;
  std::vector< int > *arg4 = 0 ;
  std::vector< double > *arg5 = 0 ;
  double arg6 ;
  
  arg1 = *(cv::CascadeClassifier **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Rect > **)&_swig_go_2; 
  arg4 = *(std::vector< int > **)&_swig_go_3; 
  arg5 = *(std::vector< double > **)&_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  
  (arg1)->detectMultiScale((cv::Mat const &)*arg2,*arg3,*arg4,*arg5,arg6);
  
}


void _wrap_CascadeClassifier_detectMultiScale__SWIG_12_cv_dbcbba478e71899d(cv::CascadeClassifier *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Rect_< int > > *_swig_go_2, std::vector< int > *_swig_go_3, std::vector< double > *_swig_go_4) {
  cv::CascadeClassifier *arg1 = (cv::CascadeClassifier *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Rect > *arg3 = 0 ;
  std::vector< int > *arg4 = 0 ;
  std::vector< double > *arg5 = 0 ;
  
  arg1 = *(cv::CascadeClassifier **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Rect > **)&_swig_go_2; 
  arg4 = *(std::vector< int > **)&_swig_go_3; 
  arg5 = *(std::vector< double > **)&_swig_go_4; 
  
  (arg1)->detectMultiScale((cv::Mat const &)*arg2,*arg3,*arg4,*arg5);
  
}


bool _wrap_CascadeClassifier_isOldFormatCascade_cv_dbcbba478e71899d(cv::CascadeClassifier *_swig_go_0) {
  cv::CascadeClassifier *arg1 = (cv::CascadeClassifier *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::CascadeClassifier **)&_swig_go_0; 
  
  result = (bool)((cv::CascadeClassifier const *)arg1)->isOldFormatCascade();
  _swig_go_result = result; 
  return _swig_go_result;
}


cv::Size_< int > *_wrap_CascadeClassifier_getOriginalWindowSize_cv_dbcbba478e71899d(cv::CascadeClassifier *_swig_go_0) {
  cv::CascadeClassifier *arg1 = (cv::CascadeClassifier *) 0 ;
  SwigValueWrapper< cv::Size_< int > > result;
  cv::Size_< int > *_swig_go_result;
  
  arg1 = *(cv::CascadeClassifier **)&_swig_go_0; 
  
  result = ((cv::CascadeClassifier const *)arg1)->getOriginalWindowSize();
  *(cv::Size **)&_swig_go_result = new cv::Size(result); 
  return _swig_go_result;
}


intgo _wrap_CascadeClassifier_getFeatureType_cv_dbcbba478e71899d(cv::CascadeClassifier *_swig_go_0) {
  cv::CascadeClassifier *arg1 = (cv::CascadeClassifier *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::CascadeClassifier **)&_swig_go_0; 
  
  result = (int)((cv::CascadeClassifier const *)arg1)->getFeatureType();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_CascadeClassifier_setImage_cv_dbcbba478e71899d(cv::CascadeClassifier *_swig_go_0, cv::Mat *_swig_go_1) {
  cv::CascadeClassifier *arg1 = (cv::CascadeClassifier *) 0 ;
  cv::Mat *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::CascadeClassifier **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  
  result = (bool)(arg1)->setImage((cv::Mat const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CascadeClassifier_setMaskGenerator_cv_dbcbba478e71899d(cv::CascadeClassifier *_swig_go_0, cv::Ptr< cv::CascadeClassifier::MaskGenerator > *_swig_go_1) {
  cv::CascadeClassifier *arg1 = (cv::CascadeClassifier *) 0 ;
  SwigValueWrapper< cv::Ptr< cv::CascadeClassifier::MaskGenerator > > arg2 ;
  cv::Ptr< cv::CascadeClassifier::MaskGenerator > *argp2 ;
  
  arg1 = *(cv::CascadeClassifier **)&_swig_go_0; 
  
  argp2 = (cv::Ptr< cv::CascadeClassifier::MaskGenerator > *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Ptr< cv::CascadeClassifier::MaskGenerator >");
  }
  arg2 = (cv::Ptr< cv::CascadeClassifier::MaskGenerator >)*argp2;
  
  
  (arg1)->setMaskGenerator(arg2);
  
}


cv::Ptr< cv::CascadeClassifier::MaskGenerator > *_wrap_CascadeClassifier_getMaskGenerator_cv_dbcbba478e71899d(cv::CascadeClassifier *_swig_go_0) {
  cv::CascadeClassifier *arg1 = (cv::CascadeClassifier *) 0 ;
  SwigValueWrapper< cv::Ptr< cv::CascadeClassifier::MaskGenerator > > result;
  cv::Ptr< cv::CascadeClassifier::MaskGenerator > *_swig_go_result;
  
  arg1 = *(cv::CascadeClassifier **)&_swig_go_0; 
  
  result = (arg1)->getMaskGenerator();
  *(cv::Ptr< cv::CascadeClassifier::MaskGenerator > **)&_swig_go_result = new cv::Ptr< cv::CascadeClassifier::MaskGenerator >(result); 
  return _swig_go_result;
}


void _wrap_CascadeClassifier_setFaceDetectionMaskGenerator_cv_dbcbba478e71899d(cv::CascadeClassifier *_swig_go_0) {
  cv::CascadeClassifier *arg1 = (cv::CascadeClassifier *) 0 ;
  
  arg1 = *(cv::CascadeClassifier **)&_swig_go_0; 
  
  (arg1)->setFaceDetectionMaskGenerator();
  
}


void _wrap_DetectionROI_scale_set_cv_dbcbba478e71899d(cv::DetectionROI *_swig_go_0, double _swig_go_1) {
  cv::DetectionROI *arg1 = (cv::DetectionROI *) 0 ;
  double arg2 ;
  
  arg1 = *(cv::DetectionROI **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->scale = arg2;
  
}


double _wrap_DetectionROI_scale_get_cv_dbcbba478e71899d(cv::DetectionROI *_swig_go_0) {
  cv::DetectionROI *arg1 = (cv::DetectionROI *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::DetectionROI **)&_swig_go_0; 
  
  result = (double) ((arg1)->scale);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_DetectionROI_locations_set_cv_dbcbba478e71899d(cv::DetectionROI *_swig_go_0, std::vector< cv::Point_< int > > *_swig_go_1) {
  cv::DetectionROI *arg1 = (cv::DetectionROI *) 0 ;
  std::vector< cv::Point > *arg2 = (std::vector< cv::Point > *) 0 ;
  
  arg1 = *(cv::DetectionROI **)&_swig_go_0; 
  arg2 = *(std::vector< cv::Point > **)&_swig_go_1; 
  
  if (arg1) (arg1)->locations = *arg2;
  
}


std::vector< cv::Point_< int > > *_wrap_DetectionROI_locations_get_cv_dbcbba478e71899d(cv::DetectionROI *_swig_go_0) {
  cv::DetectionROI *arg1 = (cv::DetectionROI *) 0 ;
  std::vector< cv::Point > *result = 0 ;
  std::vector< cv::Point_< int > > *_swig_go_result;
  
  arg1 = *(cv::DetectionROI **)&_swig_go_0; 
  
  result = (std::vector< cv::Point > *)& ((arg1)->locations);
  *(std::vector< cv::Point > **)&_swig_go_result = (std::vector< cv::Point > *)result; 
  return _swig_go_result;
}


void _wrap_DetectionROI_confidences_set_cv_dbcbba478e71899d(cv::DetectionROI *_swig_go_0, std::vector< double > *_swig_go_1) {
  cv::DetectionROI *arg1 = (cv::DetectionROI *) 0 ;
  std::vector< double > *arg2 = (std::vector< double > *) 0 ;
  
  arg1 = *(cv::DetectionROI **)&_swig_go_0; 
  arg2 = *(std::vector< double > **)&_swig_go_1; 
  
  if (arg1) (arg1)->confidences = *arg2;
  
}


std::vector< double > *_wrap_DetectionROI_confidences_get_cv_dbcbba478e71899d(cv::DetectionROI *_swig_go_0) {
  cv::DetectionROI *arg1 = (cv::DetectionROI *) 0 ;
  std::vector< double > *result = 0 ;
  std::vector< double > *_swig_go_result;
  
  arg1 = *(cv::DetectionROI **)&_swig_go_0; 
  
  result = (std::vector< double > *)& ((arg1)->confidences);
  *(std::vector< double > **)&_swig_go_result = (std::vector< double > *)result; 
  return _swig_go_result;
}


cv::DetectionROI *_wrap_new_DetectionROI_cv_dbcbba478e71899d() {
  cv::DetectionROI *result = 0 ;
  cv::DetectionROI *_swig_go_result;
  
  
  result = (cv::DetectionROI *)new cv::DetectionROI();
  *(cv::DetectionROI **)&_swig_go_result = (cv::DetectionROI *)result; 
  return _swig_go_result;
}


void _wrap_delete_DetectionROI_cv_dbcbba478e71899d(cv::DetectionROI *_swig_go_0) {
  cv::DetectionROI *arg1 = (cv::DetectionROI *) 0 ;
  
  arg1 = *(cv::DetectionROI **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_L2Hys_HOGDescriptor_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::HOGDescriptor::L2Hys;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DEFAULT_NLEVELS_HOGDescriptor_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::HOGDescriptor::DEFAULT_NLEVELS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


cv::HOGDescriptor *_wrap_new_HOGDescriptor__SWIG_0_cv_dbcbba478e71899d() {
  cv::HOGDescriptor *result = 0 ;
  cv::HOGDescriptor *_swig_go_result;
  
  
  result = (cv::HOGDescriptor *)new cv::HOGDescriptor();
  *(cv::HOGDescriptor **)&_swig_go_result = (cv::HOGDescriptor *)result; 
  return _swig_go_result;
}


cv::HOGDescriptor *_wrap_new_HOGDescriptor__SWIG_1_cv_dbcbba478e71899d(cv::Size_< int > *_swig_go_0, cv::Size_< int > *_swig_go_1, cv::Size_< int > *_swig_go_2, cv::Size_< int > *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5, double _swig_go_6, intgo _swig_go_7, double _swig_go_8, bool _swig_go_9, intgo _swig_go_10) {
  SwigValueWrapper< cv::Size_< int > > arg1 ;
  SwigValueWrapper< cv::Size_< int > > arg2 ;
  SwigValueWrapper< cv::Size_< int > > arg3 ;
  SwigValueWrapper< cv::Size_< int > > arg4 ;
  int arg5 ;
  int arg6 ;
  double arg7 ;
  int arg8 ;
  double arg9 ;
  bool arg10 ;
  int arg11 ;
  cv::Size *argp1 ;
  cv::Size *argp2 ;
  cv::Size *argp3 ;
  cv::Size *argp4 ;
  cv::HOGDescriptor *result = 0 ;
  cv::HOGDescriptor *_swig_go_result;
  
  
  argp1 = (cv::Size *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg1 = (cv::Size)*argp1;
  
  
  argp2 = (cv::Size *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg2 = (cv::Size)*argp2;
  
  
  argp3 = (cv::Size *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg3 = (cv::Size)*argp3;
  
  
  argp4 = (cv::Size *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg4 = (cv::Size)*argp4;
  
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  arg9 = (double)_swig_go_8; 
  arg10 = (bool)_swig_go_9; 
  arg11 = (int)_swig_go_10; 
  
  result = (cv::HOGDescriptor *)new cv::HOGDescriptor(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11);
  *(cv::HOGDescriptor **)&_swig_go_result = (cv::HOGDescriptor *)result; 
  return _swig_go_result;
}


cv::HOGDescriptor *_wrap_new_HOGDescriptor__SWIG_2_cv_dbcbba478e71899d(cv::Size_< int > *_swig_go_0, cv::Size_< int > *_swig_go_1, cv::Size_< int > *_swig_go_2, cv::Size_< int > *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5, double _swig_go_6, intgo _swig_go_7, double _swig_go_8, bool _swig_go_9) {
  SwigValueWrapper< cv::Size_< int > > arg1 ;
  SwigValueWrapper< cv::Size_< int > > arg2 ;
  SwigValueWrapper< cv::Size_< int > > arg3 ;
  SwigValueWrapper< cv::Size_< int > > arg4 ;
  int arg5 ;
  int arg6 ;
  double arg7 ;
  int arg8 ;
  double arg9 ;
  bool arg10 ;
  cv::Size *argp1 ;
  cv::Size *argp2 ;
  cv::Size *argp3 ;
  cv::Size *argp4 ;
  cv::HOGDescriptor *result = 0 ;
  cv::HOGDescriptor *_swig_go_result;
  
  
  argp1 = (cv::Size *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg1 = (cv::Size)*argp1;
  
  
  argp2 = (cv::Size *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg2 = (cv::Size)*argp2;
  
  
  argp3 = (cv::Size *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg3 = (cv::Size)*argp3;
  
  
  argp4 = (cv::Size *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg4 = (cv::Size)*argp4;
  
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  arg9 = (double)_swig_go_8; 
  arg10 = (bool)_swig_go_9; 
  
  result = (cv::HOGDescriptor *)new cv::HOGDescriptor(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  *(cv::HOGDescriptor **)&_swig_go_result = (cv::HOGDescriptor *)result; 
  return _swig_go_result;
}


cv::HOGDescriptor *_wrap_new_HOGDescriptor__SWIG_3_cv_dbcbba478e71899d(cv::Size_< int > *_swig_go_0, cv::Size_< int > *_swig_go_1, cv::Size_< int > *_swig_go_2, cv::Size_< int > *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5, double _swig_go_6, intgo _swig_go_7, double _swig_go_8) {
  SwigValueWrapper< cv::Size_< int > > arg1 ;
  SwigValueWrapper< cv::Size_< int > > arg2 ;
  SwigValueWrapper< cv::Size_< int > > arg3 ;
  SwigValueWrapper< cv::Size_< int > > arg4 ;
  int arg5 ;
  int arg6 ;
  double arg7 ;
  int arg8 ;
  double arg9 ;
  cv::Size *argp1 ;
  cv::Size *argp2 ;
  cv::Size *argp3 ;
  cv::Size *argp4 ;
  cv::HOGDescriptor *result = 0 ;
  cv::HOGDescriptor *_swig_go_result;
  
  
  argp1 = (cv::Size *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg1 = (cv::Size)*argp1;
  
  
  argp2 = (cv::Size *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg2 = (cv::Size)*argp2;
  
  
  argp3 = (cv::Size *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg3 = (cv::Size)*argp3;
  
  
  argp4 = (cv::Size *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg4 = (cv::Size)*argp4;
  
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  arg9 = (double)_swig_go_8; 
  
  result = (cv::HOGDescriptor *)new cv::HOGDescriptor(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  *(cv::HOGDescriptor **)&_swig_go_result = (cv::HOGDescriptor *)result; 
  return _swig_go_result;
}


cv::HOGDescriptor *_wrap_new_HOGDescriptor__SWIG_4_cv_dbcbba478e71899d(cv::Size_< int > *_swig_go_0, cv::Size_< int > *_swig_go_1, cv::Size_< int > *_swig_go_2, cv::Size_< int > *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5, double _swig_go_6, intgo _swig_go_7) {
  SwigValueWrapper< cv::Size_< int > > arg1 ;
  SwigValueWrapper< cv::Size_< int > > arg2 ;
  SwigValueWrapper< cv::Size_< int > > arg3 ;
  SwigValueWrapper< cv::Size_< int > > arg4 ;
  int arg5 ;
  int arg6 ;
  double arg7 ;
  int arg8 ;
  cv::Size *argp1 ;
  cv::Size *argp2 ;
  cv::Size *argp3 ;
  cv::Size *argp4 ;
  cv::HOGDescriptor *result = 0 ;
  cv::HOGDescriptor *_swig_go_result;
  
  
  argp1 = (cv::Size *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg1 = (cv::Size)*argp1;
  
  
  argp2 = (cv::Size *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg2 = (cv::Size)*argp2;
  
  
  argp3 = (cv::Size *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg3 = (cv::Size)*argp3;
  
  
  argp4 = (cv::Size *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg4 = (cv::Size)*argp4;
  
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  
  result = (cv::HOGDescriptor *)new cv::HOGDescriptor(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  *(cv::HOGDescriptor **)&_swig_go_result = (cv::HOGDescriptor *)result; 
  return _swig_go_result;
}


cv::HOGDescriptor *_wrap_new_HOGDescriptor__SWIG_5_cv_dbcbba478e71899d(cv::Size_< int > *_swig_go_0, cv::Size_< int > *_swig_go_1, cv::Size_< int > *_swig_go_2, cv::Size_< int > *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5, double _swig_go_6) {
  SwigValueWrapper< cv::Size_< int > > arg1 ;
  SwigValueWrapper< cv::Size_< int > > arg2 ;
  SwigValueWrapper< cv::Size_< int > > arg3 ;
  SwigValueWrapper< cv::Size_< int > > arg4 ;
  int arg5 ;
  int arg6 ;
  double arg7 ;
  cv::Size *argp1 ;
  cv::Size *argp2 ;
  cv::Size *argp3 ;
  cv::Size *argp4 ;
  cv::HOGDescriptor *result = 0 ;
  cv::HOGDescriptor *_swig_go_result;
  
  
  argp1 = (cv::Size *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg1 = (cv::Size)*argp1;
  
  
  argp2 = (cv::Size *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg2 = (cv::Size)*argp2;
  
  
  argp3 = (cv::Size *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg3 = (cv::Size)*argp3;
  
  
  argp4 = (cv::Size *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg4 = (cv::Size)*argp4;
  
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  
  result = (cv::HOGDescriptor *)new cv::HOGDescriptor(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  *(cv::HOGDescriptor **)&_swig_go_result = (cv::HOGDescriptor *)result; 
  return _swig_go_result;
}


cv::HOGDescriptor *_wrap_new_HOGDescriptor__SWIG_6_cv_dbcbba478e71899d(cv::Size_< int > *_swig_go_0, cv::Size_< int > *_swig_go_1, cv::Size_< int > *_swig_go_2, cv::Size_< int > *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5) {
  SwigValueWrapper< cv::Size_< int > > arg1 ;
  SwigValueWrapper< cv::Size_< int > > arg2 ;
  SwigValueWrapper< cv::Size_< int > > arg3 ;
  SwigValueWrapper< cv::Size_< int > > arg4 ;
  int arg5 ;
  int arg6 ;
  cv::Size *argp1 ;
  cv::Size *argp2 ;
  cv::Size *argp3 ;
  cv::Size *argp4 ;
  cv::HOGDescriptor *result = 0 ;
  cv::HOGDescriptor *_swig_go_result;
  
  
  argp1 = (cv::Size *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg1 = (cv::Size)*argp1;
  
  
  argp2 = (cv::Size *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg2 = (cv::Size)*argp2;
  
  
  argp3 = (cv::Size *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg3 = (cv::Size)*argp3;
  
  
  argp4 = (cv::Size *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg4 = (cv::Size)*argp4;
  
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  result = (cv::HOGDescriptor *)new cv::HOGDescriptor(arg1,arg2,arg3,arg4,arg5,arg6);
  *(cv::HOGDescriptor **)&_swig_go_result = (cv::HOGDescriptor *)result; 
  return _swig_go_result;
}


cv::HOGDescriptor *_wrap_new_HOGDescriptor__SWIG_7_cv_dbcbba478e71899d(cv::Size_< int > *_swig_go_0, cv::Size_< int > *_swig_go_1, cv::Size_< int > *_swig_go_2, cv::Size_< int > *_swig_go_3, intgo _swig_go_4) {
  SwigValueWrapper< cv::Size_< int > > arg1 ;
  SwigValueWrapper< cv::Size_< int > > arg2 ;
  SwigValueWrapper< cv::Size_< int > > arg3 ;
  SwigValueWrapper< cv::Size_< int > > arg4 ;
  int arg5 ;
  cv::Size *argp1 ;
  cv::Size *argp2 ;
  cv::Size *argp3 ;
  cv::Size *argp4 ;
  cv::HOGDescriptor *result = 0 ;
  cv::HOGDescriptor *_swig_go_result;
  
  
  argp1 = (cv::Size *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg1 = (cv::Size)*argp1;
  
  
  argp2 = (cv::Size *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg2 = (cv::Size)*argp2;
  
  
  argp3 = (cv::Size *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg3 = (cv::Size)*argp3;
  
  
  argp4 = (cv::Size *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg4 = (cv::Size)*argp4;
  
  arg5 = (int)_swig_go_4; 
  
  result = (cv::HOGDescriptor *)new cv::HOGDescriptor(arg1,arg2,arg3,arg4,arg5);
  *(cv::HOGDescriptor **)&_swig_go_result = (cv::HOGDescriptor *)result; 
  return _swig_go_result;
}


cv::HOGDescriptor *_wrap_new_HOGDescriptor__SWIG_8_cv_dbcbba478e71899d(_gostring_ _swig_go_0) {
  cv::String *arg1 = 0 ;
  cv::HOGDescriptor *result = 0 ;
  cv::HOGDescriptor *_swig_go_result;
  
  
  cv::String arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  
  result = (cv::HOGDescriptor *)new cv::HOGDescriptor((cv::String const &)*arg1);
  *(cv::HOGDescriptor **)&_swig_go_result = (cv::HOGDescriptor *)result; 
  return _swig_go_result;
}


cv::HOGDescriptor *_wrap_new_HOGDescriptor__SWIG_9_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0) {
  cv::HOGDescriptor *arg1 = 0 ;
  cv::HOGDescriptor *result = 0 ;
  cv::HOGDescriptor *_swig_go_result;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  
  result = (cv::HOGDescriptor *)new cv::HOGDescriptor((cv::HOGDescriptor const &)*arg1);
  *(cv::HOGDescriptor **)&_swig_go_result = (cv::HOGDescriptor *)result; 
  return _swig_go_result;
}


void _wrap_delete_HOGDescriptor_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  
  delete arg1;
  
}


long long _wrap_HOGDescriptor_getDescriptorSize_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  
  result = ((cv::HOGDescriptor const *)arg1)->getDescriptorSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_HOGDescriptor_checkDetectorSize_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  
  result = (bool)((cv::HOGDescriptor const *)arg1)->checkDetectorSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_HOGDescriptor_getWinSigma_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  
  result = (double)((cv::HOGDescriptor const *)arg1)->getWinSigma();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HOGDescriptor_setSVMDetector_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::_InputArray *_swig_go_1) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  
  (arg1)->setSVMDetector((cv::_InputArray const &)*arg2);
  
}


bool _wrap_HOGDescriptor_read_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::FileNode *_swig_go_1) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::FileNode *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::FileNode **)&_swig_go_1; 
  
  result = (bool)(arg1)->read(*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HOGDescriptor_write_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::FileStorage *_swig_go_1, _gostring_ _swig_go_2) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::FileStorage *arg2 = 0 ;
  cv::String *arg3 = 0 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::FileStorage **)&_swig_go_1; 
  
  cv::String arg3_str(_swig_go_2.p, _swig_go_2.n);
  arg3 = &arg3_str;
  
  
  ((cv::HOGDescriptor const *)arg1)->write(*arg2,(cv::String const &)*arg3);
  
}


bool _wrap_HOGDescriptor_load__SWIG_0_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::String *arg2 = 0 ;
  cv::String *arg3 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  
  cv::String arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  cv::String arg3_str(_swig_go_2.p, _swig_go_2.n);
  arg3 = &arg3_str;
  
  
  result = (bool)(arg1)->load((cv::String const &)*arg2,(cv::String const &)*arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_HOGDescriptor_load__SWIG_1_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, _gostring_ _swig_go_1) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::String *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  
  cv::String arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  result = (bool)(arg1)->load((cv::String const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HOGDescriptor_save__SWIG_0_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::String *arg2 = 0 ;
  cv::String *arg3 = 0 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  
  cv::String arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  cv::String arg3_str(_swig_go_2.p, _swig_go_2.n);
  arg3 = &arg3_str;
  
  
  ((cv::HOGDescriptor const *)arg1)->save((cv::String const &)*arg2,(cv::String const &)*arg3);
  
}


void _wrap_HOGDescriptor_save__SWIG_1_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, _gostring_ _swig_go_1) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::String *arg2 = 0 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  
  cv::String arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  ((cv::HOGDescriptor const *)arg1)->save((cv::String const &)*arg2);
  
}


void _wrap_HOGDescriptor_copyTo_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::HOGDescriptor *_swig_go_1) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::HOGDescriptor *arg2 = 0 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::HOGDescriptor **)&_swig_go_1; 
  
  ((cv::HOGDescriptor const *)arg1)->copyTo(*arg2);
  
}


void _wrap_HOGDescriptor_compute__SWIG_0_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< float > *_swig_go_2, cv::Size_< int > *_swig_go_3, cv::Size_< int > *_swig_go_4, std::vector< cv::Point_< int > > *_swig_go_5) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< float > *arg3 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg4 ;
  SwigValueWrapper< cv::Size_< int > > arg5 ;
  std::vector< cv::Point > *arg6 = 0 ;
  cv::Size *argp4 ;
  cv::Size *argp5 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< float > **)&_swig_go_2; 
  
  argp4 = (cv::Size *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg4 = (cv::Size)*argp4;
  
  
  argp5 = (cv::Size *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg5 = (cv::Size)*argp5;
  
  arg6 = *(std::vector< cv::Point > **)&_swig_go_5; 
  
  ((cv::HOGDescriptor const *)arg1)->compute((cv::Mat const &)*arg2,*arg3,arg4,arg5,(std::vector< cv::Point > const &)*arg6);
  
}


void _wrap_HOGDescriptor_compute__SWIG_1_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< float > *_swig_go_2, cv::Size_< int > *_swig_go_3, cv::Size_< int > *_swig_go_4) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< float > *arg3 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg4 ;
  SwigValueWrapper< cv::Size_< int > > arg5 ;
  cv::Size *argp4 ;
  cv::Size *argp5 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< float > **)&_swig_go_2; 
  
  argp4 = (cv::Size *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg4 = (cv::Size)*argp4;
  
  
  argp5 = (cv::Size *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg5 = (cv::Size)*argp5;
  
  
  ((cv::HOGDescriptor const *)arg1)->compute((cv::Mat const &)*arg2,*arg3,arg4,arg5);
  
}


void _wrap_HOGDescriptor_compute__SWIG_2_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< float > *_swig_go_2, cv::Size_< int > *_swig_go_3) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< float > *arg3 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg4 ;
  cv::Size *argp4 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< float > **)&_swig_go_2; 
  
  argp4 = (cv::Size *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg4 = (cv::Size)*argp4;
  
  
  ((cv::HOGDescriptor const *)arg1)->compute((cv::Mat const &)*arg2,*arg3,arg4);
  
}


void _wrap_HOGDescriptor_compute__SWIG_3_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< float > *_swig_go_2) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< float > *arg3 = 0 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< float > **)&_swig_go_2; 
  
  ((cv::HOGDescriptor const *)arg1)->compute((cv::Mat const &)*arg2,*arg3);
  
}


void _wrap_HOGDescriptor_detect__SWIG_0_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Point_< int > > *_swig_go_2, std::vector< double > *_swig_go_3, double _swig_go_4, cv::Size_< int > *_swig_go_5, cv::Size_< int > *_swig_go_6, std::vector< cv::Point_< int > > *_swig_go_7) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Point > *arg3 = 0 ;
  std::vector< double > *arg4 = 0 ;
  double arg5 ;
  SwigValueWrapper< cv::Size_< int > > arg6 ;
  SwigValueWrapper< cv::Size_< int > > arg7 ;
  std::vector< cv::Point > *arg8 = 0 ;
  cv::Size *argp6 ;
  cv::Size *argp7 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Point > **)&_swig_go_2; 
  arg4 = *(std::vector< double > **)&_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  argp6 = (cv::Size *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg6 = (cv::Size)*argp6;
  
  
  argp7 = (cv::Size *)_swig_go_6;
  if (argp7 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg7 = (cv::Size)*argp7;
  
  arg8 = *(std::vector< cv::Point > **)&_swig_go_7; 
  
  ((cv::HOGDescriptor const *)arg1)->detect((cv::Mat const &)*arg2,*arg3,*arg4,arg5,arg6,arg7,(std::vector< cv::Point > const &)*arg8);
  
}


void _wrap_HOGDescriptor_detect__SWIG_1_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Point_< int > > *_swig_go_2, std::vector< double > *_swig_go_3, double _swig_go_4, cv::Size_< int > *_swig_go_5, cv::Size_< int > *_swig_go_6) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Point > *arg3 = 0 ;
  std::vector< double > *arg4 = 0 ;
  double arg5 ;
  SwigValueWrapper< cv::Size_< int > > arg6 ;
  SwigValueWrapper< cv::Size_< int > > arg7 ;
  cv::Size *argp6 ;
  cv::Size *argp7 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Point > **)&_swig_go_2; 
  arg4 = *(std::vector< double > **)&_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  argp6 = (cv::Size *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg6 = (cv::Size)*argp6;
  
  
  argp7 = (cv::Size *)_swig_go_6;
  if (argp7 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg7 = (cv::Size)*argp7;
  
  
  ((cv::HOGDescriptor const *)arg1)->detect((cv::Mat const &)*arg2,*arg3,*arg4,arg5,arg6,arg7);
  
}


void _wrap_HOGDescriptor_detect__SWIG_2_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Point_< int > > *_swig_go_2, std::vector< double > *_swig_go_3, double _swig_go_4, cv::Size_< int > *_swig_go_5) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Point > *arg3 = 0 ;
  std::vector< double > *arg4 = 0 ;
  double arg5 ;
  SwigValueWrapper< cv::Size_< int > > arg6 ;
  cv::Size *argp6 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Point > **)&_swig_go_2; 
  arg4 = *(std::vector< double > **)&_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  argp6 = (cv::Size *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg6 = (cv::Size)*argp6;
  
  
  ((cv::HOGDescriptor const *)arg1)->detect((cv::Mat const &)*arg2,*arg3,*arg4,arg5,arg6);
  
}


void _wrap_HOGDescriptor_detect__SWIG_3_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Point_< int > > *_swig_go_2, std::vector< double > *_swig_go_3, double _swig_go_4) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Point > *arg3 = 0 ;
  std::vector< double > *arg4 = 0 ;
  double arg5 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Point > **)&_swig_go_2; 
  arg4 = *(std::vector< double > **)&_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  ((cv::HOGDescriptor const *)arg1)->detect((cv::Mat const &)*arg2,*arg3,*arg4,arg5);
  
}


void _wrap_HOGDescriptor_detect__SWIG_4_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Point_< int > > *_swig_go_2, std::vector< double > *_swig_go_3) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Point > *arg3 = 0 ;
  std::vector< double > *arg4 = 0 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Point > **)&_swig_go_2; 
  arg4 = *(std::vector< double > **)&_swig_go_3; 
  
  ((cv::HOGDescriptor const *)arg1)->detect((cv::Mat const &)*arg2,*arg3,*arg4);
  
}


void _wrap_HOGDescriptor_detect__SWIG_5_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Point_< int > > *_swig_go_2, double _swig_go_3, cv::Size_< int > *_swig_go_4, cv::Size_< int > *_swig_go_5, std::vector< cv::Point_< int > > *_swig_go_6) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Point > *arg3 = 0 ;
  double arg4 ;
  SwigValueWrapper< cv::Size_< int > > arg5 ;
  SwigValueWrapper< cv::Size_< int > > arg6 ;
  std::vector< cv::Point > *arg7 = 0 ;
  cv::Size *argp5 ;
  cv::Size *argp6 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Point > **)&_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  argp5 = (cv::Size *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg5 = (cv::Size)*argp5;
  
  
  argp6 = (cv::Size *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg6 = (cv::Size)*argp6;
  
  arg7 = *(std::vector< cv::Point > **)&_swig_go_6; 
  
  ((cv::HOGDescriptor const *)arg1)->detect((cv::Mat const &)*arg2,*arg3,arg4,arg5,arg6,(std::vector< cv::Point > const &)*arg7);
  
}


void _wrap_HOGDescriptor_detect__SWIG_6_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Point_< int > > *_swig_go_2, double _swig_go_3, cv::Size_< int > *_swig_go_4, cv::Size_< int > *_swig_go_5) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Point > *arg3 = 0 ;
  double arg4 ;
  SwigValueWrapper< cv::Size_< int > > arg5 ;
  SwigValueWrapper< cv::Size_< int > > arg6 ;
  cv::Size *argp5 ;
  cv::Size *argp6 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Point > **)&_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  argp5 = (cv::Size *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg5 = (cv::Size)*argp5;
  
  
  argp6 = (cv::Size *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg6 = (cv::Size)*argp6;
  
  
  ((cv::HOGDescriptor const *)arg1)->detect((cv::Mat const &)*arg2,*arg3,arg4,arg5,arg6);
  
}


void _wrap_HOGDescriptor_detect__SWIG_7_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Point_< int > > *_swig_go_2, double _swig_go_3, cv::Size_< int > *_swig_go_4) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Point > *arg3 = 0 ;
  double arg4 ;
  SwigValueWrapper< cv::Size_< int > > arg5 ;
  cv::Size *argp5 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Point > **)&_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  argp5 = (cv::Size *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg5 = (cv::Size)*argp5;
  
  
  ((cv::HOGDescriptor const *)arg1)->detect((cv::Mat const &)*arg2,*arg3,arg4,arg5);
  
}


void _wrap_HOGDescriptor_detect__SWIG_8_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Point_< int > > *_swig_go_2, double _swig_go_3) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Point > *arg3 = 0 ;
  double arg4 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Point > **)&_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  ((cv::HOGDescriptor const *)arg1)->detect((cv::Mat const &)*arg2,*arg3,arg4);
  
}


void _wrap_HOGDescriptor_detect__SWIG_9_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Point_< int > > *_swig_go_2) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Point > *arg3 = 0 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Point > **)&_swig_go_2; 
  
  ((cv::HOGDescriptor const *)arg1)->detect((cv::Mat const &)*arg2,*arg3);
  
}


void _wrap_HOGDescriptor_detectMultiScale__SWIG_0_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Rect_< int > > *_swig_go_2, std::vector< double > *_swig_go_3, double _swig_go_4, cv::Size_< int > *_swig_go_5, cv::Size_< int > *_swig_go_6, double _swig_go_7, double _swig_go_8, bool _swig_go_9) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Rect > *arg3 = 0 ;
  std::vector< double > *arg4 = 0 ;
  double arg5 ;
  SwigValueWrapper< cv::Size_< int > > arg6 ;
  SwigValueWrapper< cv::Size_< int > > arg7 ;
  double arg8 ;
  double arg9 ;
  bool arg10 ;
  cv::Size *argp6 ;
  cv::Size *argp7 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Rect > **)&_swig_go_2; 
  arg4 = *(std::vector< double > **)&_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  argp6 = (cv::Size *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg6 = (cv::Size)*argp6;
  
  
  argp7 = (cv::Size *)_swig_go_6;
  if (argp7 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg7 = (cv::Size)*argp7;
  
  arg8 = (double)_swig_go_7; 
  arg9 = (double)_swig_go_8; 
  arg10 = (bool)_swig_go_9; 
  
  ((cv::HOGDescriptor const *)arg1)->detectMultiScale((cv::Mat const &)*arg2,*arg3,*arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  
}


void _wrap_HOGDescriptor_detectMultiScale__SWIG_1_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Rect_< int > > *_swig_go_2, std::vector< double > *_swig_go_3, double _swig_go_4, cv::Size_< int > *_swig_go_5, cv::Size_< int > *_swig_go_6, double _swig_go_7, double _swig_go_8) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Rect > *arg3 = 0 ;
  std::vector< double > *arg4 = 0 ;
  double arg5 ;
  SwigValueWrapper< cv::Size_< int > > arg6 ;
  SwigValueWrapper< cv::Size_< int > > arg7 ;
  double arg8 ;
  double arg9 ;
  cv::Size *argp6 ;
  cv::Size *argp7 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Rect > **)&_swig_go_2; 
  arg4 = *(std::vector< double > **)&_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  argp6 = (cv::Size *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg6 = (cv::Size)*argp6;
  
  
  argp7 = (cv::Size *)_swig_go_6;
  if (argp7 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg7 = (cv::Size)*argp7;
  
  arg8 = (double)_swig_go_7; 
  arg9 = (double)_swig_go_8; 
  
  ((cv::HOGDescriptor const *)arg1)->detectMultiScale((cv::Mat const &)*arg2,*arg3,*arg4,arg5,arg6,arg7,arg8,arg9);
  
}


void _wrap_HOGDescriptor_detectMultiScale__SWIG_2_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Rect_< int > > *_swig_go_2, std::vector< double > *_swig_go_3, double _swig_go_4, cv::Size_< int > *_swig_go_5, cv::Size_< int > *_swig_go_6, double _swig_go_7) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Rect > *arg3 = 0 ;
  std::vector< double > *arg4 = 0 ;
  double arg5 ;
  SwigValueWrapper< cv::Size_< int > > arg6 ;
  SwigValueWrapper< cv::Size_< int > > arg7 ;
  double arg8 ;
  cv::Size *argp6 ;
  cv::Size *argp7 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Rect > **)&_swig_go_2; 
  arg4 = *(std::vector< double > **)&_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  argp6 = (cv::Size *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg6 = (cv::Size)*argp6;
  
  
  argp7 = (cv::Size *)_swig_go_6;
  if (argp7 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg7 = (cv::Size)*argp7;
  
  arg8 = (double)_swig_go_7; 
  
  ((cv::HOGDescriptor const *)arg1)->detectMultiScale((cv::Mat const &)*arg2,*arg3,*arg4,arg5,arg6,arg7,arg8);
  
}


void _wrap_HOGDescriptor_detectMultiScale__SWIG_3_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Rect_< int > > *_swig_go_2, std::vector< double > *_swig_go_3, double _swig_go_4, cv::Size_< int > *_swig_go_5, cv::Size_< int > *_swig_go_6) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Rect > *arg3 = 0 ;
  std::vector< double > *arg4 = 0 ;
  double arg5 ;
  SwigValueWrapper< cv::Size_< int > > arg6 ;
  SwigValueWrapper< cv::Size_< int > > arg7 ;
  cv::Size *argp6 ;
  cv::Size *argp7 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Rect > **)&_swig_go_2; 
  arg4 = *(std::vector< double > **)&_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  argp6 = (cv::Size *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg6 = (cv::Size)*argp6;
  
  
  argp7 = (cv::Size *)_swig_go_6;
  if (argp7 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg7 = (cv::Size)*argp7;
  
  
  ((cv::HOGDescriptor const *)arg1)->detectMultiScale((cv::Mat const &)*arg2,*arg3,*arg4,arg5,arg6,arg7);
  
}


void _wrap_HOGDescriptor_detectMultiScale__SWIG_4_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Rect_< int > > *_swig_go_2, std::vector< double > *_swig_go_3, double _swig_go_4, cv::Size_< int > *_swig_go_5) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Rect > *arg3 = 0 ;
  std::vector< double > *arg4 = 0 ;
  double arg5 ;
  SwigValueWrapper< cv::Size_< int > > arg6 ;
  cv::Size *argp6 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Rect > **)&_swig_go_2; 
  arg4 = *(std::vector< double > **)&_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  argp6 = (cv::Size *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg6 = (cv::Size)*argp6;
  
  
  ((cv::HOGDescriptor const *)arg1)->detectMultiScale((cv::Mat const &)*arg2,*arg3,*arg4,arg5,arg6);
  
}


void _wrap_HOGDescriptor_detectMultiScale__SWIG_5_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Rect_< int > > *_swig_go_2, std::vector< double > *_swig_go_3, double _swig_go_4) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Rect > *arg3 = 0 ;
  std::vector< double > *arg4 = 0 ;
  double arg5 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Rect > **)&_swig_go_2; 
  arg4 = *(std::vector< double > **)&_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  ((cv::HOGDescriptor const *)arg1)->detectMultiScale((cv::Mat const &)*arg2,*arg3,*arg4,arg5);
  
}


void _wrap_HOGDescriptor_detectMultiScale__SWIG_6_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Rect_< int > > *_swig_go_2, std::vector< double > *_swig_go_3) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Rect > *arg3 = 0 ;
  std::vector< double > *arg4 = 0 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Rect > **)&_swig_go_2; 
  arg4 = *(std::vector< double > **)&_swig_go_3; 
  
  ((cv::HOGDescriptor const *)arg1)->detectMultiScale((cv::Mat const &)*arg2,*arg3,*arg4);
  
}


void _wrap_HOGDescriptor_detectMultiScale__SWIG_7_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Rect_< int > > *_swig_go_2, double _swig_go_3, cv::Size_< int > *_swig_go_4, cv::Size_< int > *_swig_go_5, double _swig_go_6, double _swig_go_7, bool _swig_go_8) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Rect > *arg3 = 0 ;
  double arg4 ;
  SwigValueWrapper< cv::Size_< int > > arg5 ;
  SwigValueWrapper< cv::Size_< int > > arg6 ;
  double arg7 ;
  double arg8 ;
  bool arg9 ;
  cv::Size *argp5 ;
  cv::Size *argp6 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Rect > **)&_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  argp5 = (cv::Size *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg5 = (cv::Size)*argp5;
  
  
  argp6 = (cv::Size *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg6 = (cv::Size)*argp6;
  
  arg7 = (double)_swig_go_6; 
  arg8 = (double)_swig_go_7; 
  arg9 = (bool)_swig_go_8; 
  
  ((cv::HOGDescriptor const *)arg1)->detectMultiScale((cv::Mat const &)*arg2,*arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  
}


void _wrap_HOGDescriptor_detectMultiScale__SWIG_8_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Rect_< int > > *_swig_go_2, double _swig_go_3, cv::Size_< int > *_swig_go_4, cv::Size_< int > *_swig_go_5, double _swig_go_6, double _swig_go_7) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Rect > *arg3 = 0 ;
  double arg4 ;
  SwigValueWrapper< cv::Size_< int > > arg5 ;
  SwigValueWrapper< cv::Size_< int > > arg6 ;
  double arg7 ;
  double arg8 ;
  cv::Size *argp5 ;
  cv::Size *argp6 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Rect > **)&_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  argp5 = (cv::Size *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg5 = (cv::Size)*argp5;
  
  
  argp6 = (cv::Size *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg6 = (cv::Size)*argp6;
  
  arg7 = (double)_swig_go_6; 
  arg8 = (double)_swig_go_7; 
  
  ((cv::HOGDescriptor const *)arg1)->detectMultiScale((cv::Mat const &)*arg2,*arg3,arg4,arg5,arg6,arg7,arg8);
  
}


void _wrap_HOGDescriptor_detectMultiScale__SWIG_9_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Rect_< int > > *_swig_go_2, double _swig_go_3, cv::Size_< int > *_swig_go_4, cv::Size_< int > *_swig_go_5, double _swig_go_6) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Rect > *arg3 = 0 ;
  double arg4 ;
  SwigValueWrapper< cv::Size_< int > > arg5 ;
  SwigValueWrapper< cv::Size_< int > > arg6 ;
  double arg7 ;
  cv::Size *argp5 ;
  cv::Size *argp6 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Rect > **)&_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  argp5 = (cv::Size *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg5 = (cv::Size)*argp5;
  
  
  argp6 = (cv::Size *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg6 = (cv::Size)*argp6;
  
  arg7 = (double)_swig_go_6; 
  
  ((cv::HOGDescriptor const *)arg1)->detectMultiScale((cv::Mat const &)*arg2,*arg3,arg4,arg5,arg6,arg7);
  
}


void _wrap_HOGDescriptor_detectMultiScale__SWIG_10_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Rect_< int > > *_swig_go_2, double _swig_go_3, cv::Size_< int > *_swig_go_4, cv::Size_< int > *_swig_go_5) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Rect > *arg3 = 0 ;
  double arg4 ;
  SwigValueWrapper< cv::Size_< int > > arg5 ;
  SwigValueWrapper< cv::Size_< int > > arg6 ;
  cv::Size *argp5 ;
  cv::Size *argp6 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Rect > **)&_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  argp5 = (cv::Size *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg5 = (cv::Size)*argp5;
  
  
  argp6 = (cv::Size *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg6 = (cv::Size)*argp6;
  
  
  ((cv::HOGDescriptor const *)arg1)->detectMultiScale((cv::Mat const &)*arg2,*arg3,arg4,arg5,arg6);
  
}


void _wrap_HOGDescriptor_detectMultiScale__SWIG_11_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Rect_< int > > *_swig_go_2, double _swig_go_3, cv::Size_< int > *_swig_go_4) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Rect > *arg3 = 0 ;
  double arg4 ;
  SwigValueWrapper< cv::Size_< int > > arg5 ;
  cv::Size *argp5 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Rect > **)&_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  argp5 = (cv::Size *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg5 = (cv::Size)*argp5;
  
  
  ((cv::HOGDescriptor const *)arg1)->detectMultiScale((cv::Mat const &)*arg2,*arg3,arg4,arg5);
  
}


void _wrap_HOGDescriptor_detectMultiScale__SWIG_12_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Rect_< int > > *_swig_go_2, double _swig_go_3) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Rect > *arg3 = 0 ;
  double arg4 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Rect > **)&_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  ((cv::HOGDescriptor const *)arg1)->detectMultiScale((cv::Mat const &)*arg2,*arg3,arg4);
  
}


void _wrap_HOGDescriptor_detectMultiScale__SWIG_13_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Rect_< int > > *_swig_go_2) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Rect > *arg3 = 0 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Rect > **)&_swig_go_2; 
  
  ((cv::HOGDescriptor const *)arg1)->detectMultiScale((cv::Mat const &)*arg2,*arg3);
  
}


void _wrap_HOGDescriptor_computeGradient__SWIG_0_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, cv::Mat *_swig_go_2, cv::Mat *_swig_go_3, cv::Size_< int > *_swig_go_4, cv::Size_< int > *_swig_go_5) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  cv::Mat *arg3 = 0 ;
  cv::Mat *arg4 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg5 ;
  SwigValueWrapper< cv::Size_< int > > arg6 ;
  cv::Size *argp5 ;
  cv::Size *argp6 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(cv::Mat **)&_swig_go_2; 
  arg4 = *(cv::Mat **)&_swig_go_3; 
  
  argp5 = (cv::Size *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg5 = (cv::Size)*argp5;
  
  
  argp6 = (cv::Size *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg6 = (cv::Size)*argp6;
  
  
  ((cv::HOGDescriptor const *)arg1)->computeGradient((cv::Mat const &)*arg2,*arg3,*arg4,arg5,arg6);
  
}


void _wrap_HOGDescriptor_computeGradient__SWIG_1_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, cv::Mat *_swig_go_2, cv::Mat *_swig_go_3, cv::Size_< int > *_swig_go_4) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  cv::Mat *arg3 = 0 ;
  cv::Mat *arg4 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg5 ;
  cv::Size *argp5 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(cv::Mat **)&_swig_go_2; 
  arg4 = *(cv::Mat **)&_swig_go_3; 
  
  argp5 = (cv::Size *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg5 = (cv::Size)*argp5;
  
  
  ((cv::HOGDescriptor const *)arg1)->computeGradient((cv::Mat const &)*arg2,*arg3,*arg4,arg5);
  
}


void _wrap_HOGDescriptor_computeGradient__SWIG_2_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, cv::Mat *_swig_go_2, cv::Mat *_swig_go_3) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  cv::Mat *arg3 = 0 ;
  cv::Mat *arg4 = 0 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(cv::Mat **)&_swig_go_2; 
  arg4 = *(cv::Mat **)&_swig_go_3; 
  
  ((cv::HOGDescriptor const *)arg1)->computeGradient((cv::Mat const &)*arg2,*arg3,*arg4);
  
}


std::vector< float > *_wrap_HOGDescriptor_getDefaultPeopleDetector_cv_dbcbba478e71899d() {
  SwigValueWrapper< std::vector< float > > result;
  std::vector< float > *_swig_go_result;
  
  
  result = cv::HOGDescriptor::getDefaultPeopleDetector();
  *(std::vector< float > **)&_swig_go_result = new std::vector< float >(result); 
  return _swig_go_result;
}


std::vector< float > *_wrap_HOGDescriptor_getDaimlerPeopleDetector_cv_dbcbba478e71899d() {
  SwigValueWrapper< std::vector< float > > result;
  std::vector< float > *_swig_go_result;
  
  
  result = cv::HOGDescriptor::getDaimlerPeopleDetector();
  *(std::vector< float > **)&_swig_go_result = new std::vector< float >(result); 
  return _swig_go_result;
}


void _wrap_HOGDescriptor_winSize_set_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Size_< int > *_swig_go_1) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Size *arg2 = (cv::Size *) 0 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Size **)&_swig_go_1; 
  
  if (arg1) (arg1)->winSize = *arg2;
  
}


cv::Size_< int > *_wrap_HOGDescriptor_winSize_get_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Size *result = 0 ;
  cv::Size_< int > *_swig_go_result;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  
  result = (cv::Size *)& ((arg1)->winSize);
  *(cv::Size **)&_swig_go_result = (cv::Size *)result; 
  return _swig_go_result;
}


void _wrap_HOGDescriptor_blockSize_set_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Size_< int > *_swig_go_1) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Size *arg2 = (cv::Size *) 0 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Size **)&_swig_go_1; 
  
  if (arg1) (arg1)->blockSize = *arg2;
  
}


cv::Size_< int > *_wrap_HOGDescriptor_blockSize_get_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Size *result = 0 ;
  cv::Size_< int > *_swig_go_result;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  
  result = (cv::Size *)& ((arg1)->blockSize);
  *(cv::Size **)&_swig_go_result = (cv::Size *)result; 
  return _swig_go_result;
}


void _wrap_HOGDescriptor_blockStride_set_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Size_< int > *_swig_go_1) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Size *arg2 = (cv::Size *) 0 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Size **)&_swig_go_1; 
  
  if (arg1) (arg1)->blockStride = *arg2;
  
}


cv::Size_< int > *_wrap_HOGDescriptor_blockStride_get_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Size *result = 0 ;
  cv::Size_< int > *_swig_go_result;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  
  result = (cv::Size *)& ((arg1)->blockStride);
  *(cv::Size **)&_swig_go_result = (cv::Size *)result; 
  return _swig_go_result;
}


void _wrap_HOGDescriptor_cellSize_set_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Size_< int > *_swig_go_1) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Size *arg2 = (cv::Size *) 0 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Size **)&_swig_go_1; 
  
  if (arg1) (arg1)->cellSize = *arg2;
  
}


cv::Size_< int > *_wrap_HOGDescriptor_cellSize_get_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Size *result = 0 ;
  cv::Size_< int > *_swig_go_result;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  
  result = (cv::Size *)& ((arg1)->cellSize);
  *(cv::Size **)&_swig_go_result = (cv::Size *)result; 
  return _swig_go_result;
}


void _wrap_HOGDescriptor_nbins_set_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, intgo _swig_go_1) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->nbins = arg2;
  
}


intgo _wrap_HOGDescriptor_nbins_get_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  
  result = (int) ((arg1)->nbins);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HOGDescriptor_derivAperture_set_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, intgo _swig_go_1) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->derivAperture = arg2;
  
}


intgo _wrap_HOGDescriptor_derivAperture_get_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  
  result = (int) ((arg1)->derivAperture);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HOGDescriptor_winSigma_set_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, double _swig_go_1) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  double arg2 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->winSigma = arg2;
  
}


void _wrap_HOGDescriptor_histogramNormType_set_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, intgo _swig_go_1) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->histogramNormType = arg2;
  
}


intgo _wrap_HOGDescriptor_histogramNormType_get_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  
  result = (int) ((arg1)->histogramNormType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HOGDescriptor_L2HysThreshold_set_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, double _swig_go_1) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  double arg2 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->L2HysThreshold = arg2;
  
}


double _wrap_HOGDescriptor_L2HysThreshold_get_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  
  result = (double) ((arg1)->L2HysThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HOGDescriptor_gammaCorrection_set_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, bool _swig_go_1) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  bool arg2 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->gammaCorrection = arg2;
  
}


bool _wrap_HOGDescriptor_gammaCorrection_get_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  
  result = (bool) ((arg1)->gammaCorrection);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HOGDescriptor_svmDetector_set_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, std::vector< float > *_swig_go_1) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  std::vector< float > *arg2 = (std::vector< float > *) 0 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(std::vector< float > **)&_swig_go_1; 
  
  if (arg1) (arg1)->svmDetector = *arg2;
  
}


std::vector< float > *_wrap_HOGDescriptor_svmDetector_get_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  std::vector< float > *result = 0 ;
  std::vector< float > *_swig_go_result;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  
  result = (std::vector< float > *)& ((arg1)->svmDetector);
  *(std::vector< float > **)&_swig_go_result = (std::vector< float > *)result; 
  return _swig_go_result;
}


void _wrap_HOGDescriptor_nlevels_set_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, intgo _swig_go_1) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->nlevels = arg2;
  
}


intgo _wrap_HOGDescriptor_nlevels_get_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  
  result = (int) ((arg1)->nlevels);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_HOGDescriptor_detectROI__SWIG_0_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Point_< int > > *_swig_go_2, std::vector< cv::Point_< int > > *_swig_go_3, std::vector< double > *_swig_go_4, double _swig_go_5, cv::Size_< int > *_swig_go_6, cv::Size_< int > *_swig_go_7) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Point > *arg3 = 0 ;
  std::vector< cv::Point > *arg4 = 0 ;
  std::vector< double > *arg5 = 0 ;
  double arg6 ;
  SwigValueWrapper< cv::Size_< int > > arg7 ;
  SwigValueWrapper< cv::Size_< int > > arg8 ;
  cv::Size *argp7 ;
  cv::Size *argp8 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Point > **)&_swig_go_2; 
  arg4 = *(std::vector< cv::Point > **)&_swig_go_3; 
  arg5 = *(std::vector< double > **)&_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  
  argp7 = (cv::Size *)_swig_go_6;
  if (argp7 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg7 = (cv::Size)*argp7;
  
  
  argp8 = (cv::Size *)_swig_go_7;
  if (argp8 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg8 = (cv::Size)*argp8;
  
  
  ((cv::HOGDescriptor const *)arg1)->detectROI((cv::Mat const &)*arg2,(std::vector< cv::Point > const &)*arg3,*arg4,*arg5,arg6,arg7,arg8);
  
}


void _wrap_HOGDescriptor_detectROI__SWIG_1_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Point_< int > > *_swig_go_2, std::vector< cv::Point_< int > > *_swig_go_3, std::vector< double > *_swig_go_4, double _swig_go_5, cv::Size_< int > *_swig_go_6) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Point > *arg3 = 0 ;
  std::vector< cv::Point > *arg4 = 0 ;
  std::vector< double > *arg5 = 0 ;
  double arg6 ;
  SwigValueWrapper< cv::Size_< int > > arg7 ;
  cv::Size *argp7 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Point > **)&_swig_go_2; 
  arg4 = *(std::vector< cv::Point > **)&_swig_go_3; 
  arg5 = *(std::vector< double > **)&_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  
  argp7 = (cv::Size *)_swig_go_6;
  if (argp7 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg7 = (cv::Size)*argp7;
  
  
  ((cv::HOGDescriptor const *)arg1)->detectROI((cv::Mat const &)*arg2,(std::vector< cv::Point > const &)*arg3,*arg4,*arg5,arg6,arg7);
  
}


void _wrap_HOGDescriptor_detectROI__SWIG_2_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Point_< int > > *_swig_go_2, std::vector< cv::Point_< int > > *_swig_go_3, std::vector< double > *_swig_go_4, double _swig_go_5) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Point > *arg3 = 0 ;
  std::vector< cv::Point > *arg4 = 0 ;
  std::vector< double > *arg5 = 0 ;
  double arg6 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Point > **)&_swig_go_2; 
  arg4 = *(std::vector< cv::Point > **)&_swig_go_3; 
  arg5 = *(std::vector< double > **)&_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  
  ((cv::HOGDescriptor const *)arg1)->detectROI((cv::Mat const &)*arg2,(std::vector< cv::Point > const &)*arg3,*arg4,*arg5,arg6);
  
}


void _wrap_HOGDescriptor_detectROI__SWIG_3_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Point_< int > > *_swig_go_2, std::vector< cv::Point_< int > > *_swig_go_3, std::vector< double > *_swig_go_4) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Point > *arg3 = 0 ;
  std::vector< cv::Point > *arg4 = 0 ;
  std::vector< double > *arg5 = 0 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Point > **)&_swig_go_2; 
  arg4 = *(std::vector< cv::Point > **)&_swig_go_3; 
  arg5 = *(std::vector< double > **)&_swig_go_4; 
  
  ((cv::HOGDescriptor const *)arg1)->detectROI((cv::Mat const &)*arg2,(std::vector< cv::Point > const &)*arg3,*arg4,*arg5);
  
}


void _wrap_HOGDescriptor_detectMultiScaleROI__SWIG_0_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Rect_< int > > *_swig_go_2, std::vector< cv::DetectionROI > *_swig_go_3, double _swig_go_4, intgo _swig_go_5) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Rect > *arg3 = 0 ;
  std::vector< cv::DetectionROI > *arg4 = 0 ;
  double arg5 ;
  int arg6 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Rect > **)&_swig_go_2; 
  arg4 = *(std::vector< cv::DetectionROI > **)&_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  ((cv::HOGDescriptor const *)arg1)->detectMultiScaleROI((cv::Mat const &)*arg2,*arg3,*arg4,arg5,arg6);
  
}


void _wrap_HOGDescriptor_detectMultiScaleROI__SWIG_1_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Rect_< int > > *_swig_go_2, std::vector< cv::DetectionROI > *_swig_go_3, double _swig_go_4) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Rect > *arg3 = 0 ;
  std::vector< cv::DetectionROI > *arg4 = 0 ;
  double arg5 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Rect > **)&_swig_go_2; 
  arg4 = *(std::vector< cv::DetectionROI > **)&_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  ((cv::HOGDescriptor const *)arg1)->detectMultiScaleROI((cv::Mat const &)*arg2,*arg3,*arg4,arg5);
  
}


void _wrap_HOGDescriptor_detectMultiScaleROI__SWIG_2_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, cv::Mat *_swig_go_1, std::vector< cv::Rect_< int > > *_swig_go_2, std::vector< cv::DetectionROI > *_swig_go_3) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  cv::Mat *arg2 = 0 ;
  std::vector< cv::Rect > *arg3 = 0 ;
  std::vector< cv::DetectionROI > *arg4 = 0 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(std::vector< cv::Rect > **)&_swig_go_2; 
  arg4 = *(std::vector< cv::DetectionROI > **)&_swig_go_3; 
  
  ((cv::HOGDescriptor const *)arg1)->detectMultiScaleROI((cv::Mat const &)*arg2,*arg3,*arg4);
  
}


void _wrap_HOGDescriptor_readALTModel_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, _gostring_ _swig_go_1) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  std::string arg2 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  (&arg2)->assign(_swig_go_1.p, _swig_go_1.n); 
  
  (arg1)->readALTModel(arg2);
  
}


void _wrap_HOGDescriptor_groupRectangles_cv_dbcbba478e71899d(cv::HOGDescriptor *_swig_go_0, std::vector< cv::Rect_< int > > *_swig_go_1, std::vector< double > *_swig_go_2, intgo _swig_go_3, double _swig_go_4) {
  cv::HOGDescriptor *arg1 = (cv::HOGDescriptor *) 0 ;
  std::vector< cv::Rect > *arg2 = 0 ;
  std::vector< double > *arg3 = 0 ;
  int arg4 ;
  double arg5 ;
  
  arg1 = *(cv::HOGDescriptor **)&_swig_go_0; 
  arg2 = *(std::vector< cv::Rect > **)&_swig_go_1; 
  arg3 = *(std::vector< double > **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  ((cv::HOGDescriptor const *)arg1)->groupRectangles(*arg2,*arg3,arg4,arg5);
  
}


void _wrap_findDataMatrix__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, std::vector< std::string > *_swig_go_1, cv::_OutputArray *_swig_go_2, cv::_OutputArray *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  std::vector< std::string > *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  cv::_OutputArray *arg4 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(std::vector< std::string > **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = *(cv::_OutputArray **)&_swig_go_3; 
  
  cv::findDataMatrix((cv::_InputArray const &)*arg1,*arg2,(cv::_OutputArray const &)*arg3,(cv::_OutputArray const &)*arg4);
  
}


void _wrap_findDataMatrix__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, std::vector< std::string > *_swig_go_1, cv::_OutputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  std::vector< std::string > *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(std::vector< std::string > **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  cv::findDataMatrix((cv::_InputArray const &)*arg1,*arg2,(cv::_OutputArray const &)*arg3);
  
}


void _wrap_findDataMatrix__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, std::vector< std::string > *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  std::vector< std::string > *arg2 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(std::vector< std::string > **)&_swig_go_1; 
  
  cv::findDataMatrix((cv::_InputArray const &)*arg1,*arg2);
  
}


void _wrap_drawDataMatrixCodes_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, std::vector< std::string > *_swig_go_1, cv::_InputArray *_swig_go_2) {
  cv::_OutputArray *arg1 = 0 ;
  std::vector< std::string > *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(std::vector< std::string > **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  cv::drawDataMatrixCodes((cv::_OutputArray const &)*arg1,(std::vector< std::string > const &)*arg2,(cv::_InputArray const &)*arg3);
  
}


void _wrap_CvDataMatrixCode_msg_set_cv_dbcbba478e71899d(CvDataMatrixCode *_swig_go_0, _gostring_ _swig_go_1) {
  CvDataMatrixCode *arg1 = (CvDataMatrixCode *) 0 ;
  char *arg2 ;
  
  arg1 = *(CvDataMatrixCode **)&_swig_go_0; 
  arg2 = (char *)_swig_go_1.p; 
  
  {
    if(arg2) {
      strncpy((char*)arg1->msg, (const char *)arg2, 4-1);
      arg1->msg[4-1] = 0;
    } else {
      arg1->msg[0] = 0;
    }
  }
  
}


_gostring_ _wrap_CvDataMatrixCode_msg_get_cv_dbcbba478e71899d(CvDataMatrixCode *_swig_go_0) {
  CvDataMatrixCode *arg1 = (CvDataMatrixCode *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(CvDataMatrixCode **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->msg);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_CvDataMatrixCode_original_set_cv_dbcbba478e71899d(CvDataMatrixCode *_swig_go_0, CvMat *_swig_go_1) {
  CvDataMatrixCode *arg1 = (CvDataMatrixCode *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  
  arg1 = *(CvDataMatrixCode **)&_swig_go_0; 
  arg2 = *(CvMat **)&_swig_go_1; 
  
  if (arg1) (arg1)->original = arg2;
  
}


CvMat *_wrap_CvDataMatrixCode_original_get_cv_dbcbba478e71899d(CvDataMatrixCode *_swig_go_0) {
  CvDataMatrixCode *arg1 = (CvDataMatrixCode *) 0 ;
  CvMat *result = 0 ;
  CvMat *_swig_go_result;
  
  arg1 = *(CvDataMatrixCode **)&_swig_go_0; 
  
  result = (CvMat *) ((arg1)->original);
  *(CvMat **)&_swig_go_result = (CvMat *)result; 
  return _swig_go_result;
}


void _wrap_CvDataMatrixCode_corners_set_cv_dbcbba478e71899d(CvDataMatrixCode *_swig_go_0, CvMat *_swig_go_1) {
  CvDataMatrixCode *arg1 = (CvDataMatrixCode *) 0 ;
  CvMat *arg2 = (CvMat *) 0 ;
  
  arg1 = *(CvDataMatrixCode **)&_swig_go_0; 
  arg2 = *(CvMat **)&_swig_go_1; 
  
  if (arg1) (arg1)->corners = arg2;
  
}


CvMat *_wrap_CvDataMatrixCode_corners_get_cv_dbcbba478e71899d(CvDataMatrixCode *_swig_go_0) {
  CvDataMatrixCode *arg1 = (CvDataMatrixCode *) 0 ;
  CvMat *result = 0 ;
  CvMat *_swig_go_result;
  
  arg1 = *(CvDataMatrixCode **)&_swig_go_0; 
  
  result = (CvMat *) ((arg1)->corners);
  *(CvMat **)&_swig_go_result = (CvMat *)result; 
  return _swig_go_result;
}


CvDataMatrixCode *_wrap_new_CvDataMatrixCode_cv_dbcbba478e71899d() {
  CvDataMatrixCode *result = 0 ;
  CvDataMatrixCode *_swig_go_result;
  
  
  result = (CvDataMatrixCode *)new CvDataMatrixCode();
  *(CvDataMatrixCode **)&_swig_go_result = (CvDataMatrixCode *)result; 
  return _swig_go_result;
}


void _wrap_delete_CvDataMatrixCode_cv_dbcbba478e71899d(CvDataMatrixCode *_swig_go_0) {
  CvDataMatrixCode *arg1 = (CvDataMatrixCode *) 0 ;
  
  arg1 = *(CvDataMatrixCode **)&_swig_go_0; 
  
  delete arg1;
  
}


std::deque< CvDataMatrixCode > *_wrap_cvFindDataMatrix_cv_dbcbba478e71899d(CvMat *_swig_go_0) {
  CvMat *arg1 = (CvMat *) 0 ;
  SwigValueWrapper< std::deque< CvDataMatrixCode > > result;
  std::deque< CvDataMatrixCode > *_swig_go_result;
  
  arg1 = *(CvMat **)&_swig_go_0; 
  
  result = cvFindDataMatrix(arg1);
  *(std::deque< CvDataMatrixCode > **)&_swig_go_result = new std::deque< CvDataMatrixCode >(result); 
  return _swig_go_result;
}


void _wrap_Feature_x_set_cv_dbcbba478e71899d(cv::linemod::Feature *_swig_go_0, intgo _swig_go_1) {
  cv::linemod::Feature *arg1 = (cv::linemod::Feature *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::linemod::Feature **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->x = arg2;
  
}


intgo _wrap_Feature_x_get_cv_dbcbba478e71899d(cv::linemod::Feature *_swig_go_0) {
  cv::linemod::Feature *arg1 = (cv::linemod::Feature *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::linemod::Feature **)&_swig_go_0; 
  
  result = (int) ((arg1)->x);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Feature_y_set_cv_dbcbba478e71899d(cv::linemod::Feature *_swig_go_0, intgo _swig_go_1) {
  cv::linemod::Feature *arg1 = (cv::linemod::Feature *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::linemod::Feature **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->y = arg2;
  
}


intgo _wrap_Feature_y_get_cv_dbcbba478e71899d(cv::linemod::Feature *_swig_go_0) {
  cv::linemod::Feature *arg1 = (cv::linemod::Feature *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::linemod::Feature **)&_swig_go_0; 
  
  result = (int) ((arg1)->y);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Feature_label_set_cv_dbcbba478e71899d(cv::linemod::Feature *_swig_go_0, intgo _swig_go_1) {
  cv::linemod::Feature *arg1 = (cv::linemod::Feature *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::linemod::Feature **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->label = arg2;
  
}


intgo _wrap_Feature_label_get_cv_dbcbba478e71899d(cv::linemod::Feature *_swig_go_0) {
  cv::linemod::Feature *arg1 = (cv::linemod::Feature *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::linemod::Feature **)&_swig_go_0; 
  
  result = (int) ((arg1)->label);
  _swig_go_result = result; 
  return _swig_go_result;
}


cv::linemod::Feature *_wrap_new_Feature__SWIG_0_cv_dbcbba478e71899d() {
  cv::linemod::Feature *result = 0 ;
  cv::linemod::Feature *_swig_go_result;
  
  
  result = (cv::linemod::Feature *)new cv::linemod::Feature();
  *(cv::linemod::Feature **)&_swig_go_result = (cv::linemod::Feature *)result; 
  return _swig_go_result;
}


cv::linemod::Feature *_wrap_new_Feature__SWIG_1_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  int arg1 ;
  int arg2 ;
  int arg3 ;
  cv::linemod::Feature *result = 0 ;
  cv::linemod::Feature *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (cv::linemod::Feature *)new cv::linemod::Feature(arg1,arg2,arg3);
  *(cv::linemod::Feature **)&_swig_go_result = (cv::linemod::Feature *)result; 
  return _swig_go_result;
}


void _wrap_Feature_read_cv_dbcbba478e71899d(cv::linemod::Feature *_swig_go_0, cv::FileNode *_swig_go_1) {
  cv::linemod::Feature *arg1 = (cv::linemod::Feature *) 0 ;
  cv::linemod::FileNode *arg2 = 0 ;
  
  arg1 = *(cv::linemod::Feature **)&_swig_go_0; 
  arg2 = *(cv::linemod::FileNode **)&_swig_go_1; 
  
  (arg1)->read((cv::linemod::FileNode const &)*arg2);
  
}


void _wrap_Feature_write_cv_dbcbba478e71899d(cv::linemod::Feature *_swig_go_0, cv::FileStorage *_swig_go_1) {
  cv::linemod::Feature *arg1 = (cv::linemod::Feature *) 0 ;
  cv::linemod::FileStorage *arg2 = 0 ;
  
  arg1 = *(cv::linemod::Feature **)&_swig_go_0; 
  arg2 = *(cv::linemod::FileStorage **)&_swig_go_1; 
  
  ((cv::linemod::Feature const *)arg1)->write(*arg2);
  
}


void _wrap_delete_Feature_cv_dbcbba478e71899d(cv::linemod::Feature *_swig_go_0) {
  cv::linemod::Feature *arg1 = (cv::linemod::Feature *) 0 ;
  
  arg1 = *(cv::linemod::Feature **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_Template_width_set_cv_dbcbba478e71899d(cv::linemod::Template *_swig_go_0, intgo _swig_go_1) {
  cv::linemod::Template *arg1 = (cv::linemod::Template *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::linemod::Template **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->width = arg2;
  
}


intgo _wrap_Template_width_get_cv_dbcbba478e71899d(cv::linemod::Template *_swig_go_0) {
  cv::linemod::Template *arg1 = (cv::linemod::Template *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::linemod::Template **)&_swig_go_0; 
  
  result = (int) ((arg1)->width);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Template_height_set_cv_dbcbba478e71899d(cv::linemod::Template *_swig_go_0, intgo _swig_go_1) {
  cv::linemod::Template *arg1 = (cv::linemod::Template *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::linemod::Template **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->height = arg2;
  
}


intgo _wrap_Template_height_get_cv_dbcbba478e71899d(cv::linemod::Template *_swig_go_0) {
  cv::linemod::Template *arg1 = (cv::linemod::Template *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::linemod::Template **)&_swig_go_0; 
  
  result = (int) ((arg1)->height);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Template_pyramid_level_set_cv_dbcbba478e71899d(cv::linemod::Template *_swig_go_0, intgo _swig_go_1) {
  cv::linemod::Template *arg1 = (cv::linemod::Template *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::linemod::Template **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->pyramid_level = arg2;
  
}


intgo _wrap_Template_pyramid_level_get_cv_dbcbba478e71899d(cv::linemod::Template *_swig_go_0) {
  cv::linemod::Template *arg1 = (cv::linemod::Template *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::linemod::Template **)&_swig_go_0; 
  
  result = (int) ((arg1)->pyramid_level);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Template_features_set_cv_dbcbba478e71899d(cv::linemod::Template *_swig_go_0, std::vector< cv::linemod::Feature > *_swig_go_1) {
  cv::linemod::Template *arg1 = (cv::linemod::Template *) 0 ;
  std::vector< cv::linemod::Feature > *arg2 = (std::vector< cv::linemod::Feature > *) 0 ;
  
  arg1 = *(cv::linemod::Template **)&_swig_go_0; 
  arg2 = *(std::vector< cv::linemod::Feature > **)&_swig_go_1; 
  
  if (arg1) (arg1)->features = *arg2;
  
}


std::vector< cv::linemod::Feature > *_wrap_Template_features_get_cv_dbcbba478e71899d(cv::linemod::Template *_swig_go_0) {
  cv::linemod::Template *arg1 = (cv::linemod::Template *) 0 ;
  std::vector< cv::linemod::Feature > *result = 0 ;
  std::vector< cv::linemod::Feature > *_swig_go_result;
  
  arg1 = *(cv::linemod::Template **)&_swig_go_0; 
  
  result = (std::vector< cv::linemod::Feature > *)& ((arg1)->features);
  *(std::vector< cv::linemod::Feature > **)&_swig_go_result = (std::vector< cv::linemod::Feature > *)result; 
  return _swig_go_result;
}


void _wrap_Template_read_cv_dbcbba478e71899d(cv::linemod::Template *_swig_go_0, cv::FileNode *_swig_go_1) {
  cv::linemod::Template *arg1 = (cv::linemod::Template *) 0 ;
  cv::linemod::FileNode *arg2 = 0 ;
  
  arg1 = *(cv::linemod::Template **)&_swig_go_0; 
  arg2 = *(cv::linemod::FileNode **)&_swig_go_1; 
  
  (arg1)->read((cv::linemod::FileNode const &)*arg2);
  
}


void _wrap_Template_write_cv_dbcbba478e71899d(cv::linemod::Template *_swig_go_0, cv::FileStorage *_swig_go_1) {
  cv::linemod::Template *arg1 = (cv::linemod::Template *) 0 ;
  cv::linemod::FileStorage *arg2 = 0 ;
  
  arg1 = *(cv::linemod::Template **)&_swig_go_0; 
  arg2 = *(cv::linemod::FileStorage **)&_swig_go_1; 
  
  ((cv::linemod::Template const *)arg1)->write(*arg2);
  
}


cv::linemod::Template *_wrap_new_Template_cv_dbcbba478e71899d() {
  cv::linemod::Template *result = 0 ;
  cv::linemod::Template *_swig_go_result;
  
  
  result = (cv::linemod::Template *)new cv::linemod::Template();
  *(cv::linemod::Template **)&_swig_go_result = (cv::linemod::Template *)result; 
  return _swig_go_result;
}


void _wrap_delete_Template_cv_dbcbba478e71899d(cv::linemod::Template *_swig_go_0) {
  cv::linemod::Template *arg1 = (cv::linemod::Template *) 0 ;
  
  arg1 = *(cv::linemod::Template **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_delete_QuantizedPyramid_cv_dbcbba478e71899d(cv::linemod::QuantizedPyramid *_swig_go_0) {
  cv::linemod::QuantizedPyramid *arg1 = (cv::linemod::QuantizedPyramid *) 0 ;
  
  arg1 = *(cv::linemod::QuantizedPyramid **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_QuantizedPyramid_quantize_cv_dbcbba478e71899d(cv::linemod::QuantizedPyramid *_swig_go_0, cv::Mat *_swig_go_1) {
  cv::linemod::QuantizedPyramid *arg1 = (cv::linemod::QuantizedPyramid *) 0 ;
  cv::linemod::Mat *arg2 = 0 ;
  
  arg1 = *(cv::linemod::QuantizedPyramid **)&_swig_go_0; 
  arg2 = *(cv::linemod::Mat **)&_swig_go_1; 
  
  ((cv::linemod::QuantizedPyramid const *)arg1)->quantize(*arg2);
  
}


bool _wrap_QuantizedPyramid_extractTemplate_cv_dbcbba478e71899d(cv::linemod::QuantizedPyramid *_swig_go_0, cv::linemod::Template *_swig_go_1) {
  cv::linemod::QuantizedPyramid *arg1 = (cv::linemod::QuantizedPyramid *) 0 ;
  cv::linemod::Template *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::linemod::QuantizedPyramid **)&_swig_go_0; 
  arg2 = *(cv::linemod::Template **)&_swig_go_1; 
  
  result = (bool)((cv::linemod::QuantizedPyramid const *)arg1)->extractTemplate(*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_QuantizedPyramid_pyrDown_cv_dbcbba478e71899d(cv::linemod::QuantizedPyramid *_swig_go_0) {
  cv::linemod::QuantizedPyramid *arg1 = (cv::linemod::QuantizedPyramid *) 0 ;
  
  arg1 = *(cv::linemod::QuantizedPyramid **)&_swig_go_0; 
  
  (arg1)->pyrDown();
  
}


void _wrap_delete_Modality_cv_dbcbba478e71899d(cv::linemod::Modality *_swig_go_0) {
  cv::linemod::Modality *arg1 = (cv::linemod::Modality *) 0 ;
  
  arg1 = *(cv::linemod::Modality **)&_swig_go_0; 
  
  delete arg1;
  
}


cv::Ptr< cv::linemod::QuantizedPyramid > *_wrap_Modality_process__SWIG_0_cv_dbcbba478e71899d(cv::linemod::Modality *_swig_go_0, cv::Mat *_swig_go_1, cv::Mat *_swig_go_2) {
  cv::linemod::Modality *arg1 = (cv::linemod::Modality *) 0 ;
  cv::linemod::Mat *arg2 = 0 ;
  cv::linemod::Mat *arg3 = 0 ;
  SwigValueWrapper< cv::Ptr< cv::linemod::QuantizedPyramid > > result;
  cv::Ptr< cv::linemod::QuantizedPyramid > *_swig_go_result;
  
  arg1 = *(cv::linemod::Modality **)&_swig_go_0; 
  arg2 = *(cv::linemod::Mat **)&_swig_go_1; 
  arg3 = *(cv::linemod::Mat **)&_swig_go_2; 
  
  result = ((cv::linemod::Modality const *)arg1)->process((cv::linemod::Mat const &)*arg2,(cv::linemod::Mat const &)*arg3);
  *(cv::Ptr< cv::linemod::QuantizedPyramid > **)&_swig_go_result = new cv::Ptr< cv::linemod::QuantizedPyramid >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::linemod::QuantizedPyramid > *_wrap_Modality_process__SWIG_1_cv_dbcbba478e71899d(cv::linemod::Modality *_swig_go_0, cv::Mat *_swig_go_1) {
  cv::linemod::Modality *arg1 = (cv::linemod::Modality *) 0 ;
  cv::linemod::Mat *arg2 = 0 ;
  SwigValueWrapper< cv::Ptr< cv::linemod::QuantizedPyramid > > result;
  cv::Ptr< cv::linemod::QuantizedPyramid > *_swig_go_result;
  
  arg1 = *(cv::linemod::Modality **)&_swig_go_0; 
  arg2 = *(cv::linemod::Mat **)&_swig_go_1; 
  
  result = ((cv::linemod::Modality const *)arg1)->process((cv::linemod::Mat const &)*arg2);
  *(cv::Ptr< cv::linemod::QuantizedPyramid > **)&_swig_go_result = new cv::Ptr< cv::linemod::QuantizedPyramid >(result); 
  return _swig_go_result;
}


_gostring_ _wrap_Modality_name_cv_dbcbba478e71899d(cv::linemod::Modality *_swig_go_0) {
  cv::linemod::Modality *arg1 = (cv::linemod::Modality *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::linemod::Modality **)&_swig_go_0; 
  
  result = ((cv::linemod::Modality const *)arg1)->name();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


void _wrap_Modality_read_cv_dbcbba478e71899d(cv::linemod::Modality *_swig_go_0, cv::FileNode *_swig_go_1) {
  cv::linemod::Modality *arg1 = (cv::linemod::Modality *) 0 ;
  cv::linemod::FileNode *arg2 = 0 ;
  
  arg1 = *(cv::linemod::Modality **)&_swig_go_0; 
  arg2 = *(cv::linemod::FileNode **)&_swig_go_1; 
  
  (arg1)->read((cv::linemod::FileNode const &)*arg2);
  
}


void _wrap_Modality_write_cv_dbcbba478e71899d(cv::linemod::Modality *_swig_go_0, cv::FileStorage *_swig_go_1) {
  cv::linemod::Modality *arg1 = (cv::linemod::Modality *) 0 ;
  cv::linemod::FileStorage *arg2 = 0 ;
  
  arg1 = *(cv::linemod::Modality **)&_swig_go_0; 
  arg2 = *(cv::linemod::FileStorage **)&_swig_go_1; 
  
  ((cv::linemod::Modality const *)arg1)->write(*arg2);
  
}


cv::Ptr< cv::linemod::Modality > *_wrap_Modality_create__SWIG_0_cv_dbcbba478e71899d(_gostring_ _swig_go_0) {
  std::string *arg1 = 0 ;
  SwigValueWrapper< cv::Ptr< cv::linemod::Modality > > result;
  cv::Ptr< cv::linemod::Modality > *_swig_go_result;
  
  
  std::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  
  result = cv::linemod::Modality::create((std::string const &)*arg1);
  *(cv::Ptr< cv::linemod::Modality > **)&_swig_go_result = new cv::Ptr< cv::linemod::Modality >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::linemod::Modality > *_wrap_Modality_create__SWIG_1_cv_dbcbba478e71899d(cv::FileNode *_swig_go_0) {
  cv::linemod::FileNode *arg1 = 0 ;
  SwigValueWrapper< cv::Ptr< cv::linemod::Modality > > result;
  cv::Ptr< cv::linemod::Modality > *_swig_go_result;
  
  arg1 = *(cv::linemod::FileNode **)&_swig_go_0; 
  
  result = cv::linemod::Modality::create((cv::FileNode const &)*arg1);
  *(cv::Ptr< cv::linemod::Modality > **)&_swig_go_result = new cv::Ptr< cv::linemod::Modality >(result); 
  return _swig_go_result;
}


cv::linemod::ColorGradient *_wrap_new_ColorGradient__SWIG_0_cv_dbcbba478e71899d() {
  cv::linemod::ColorGradient *result = 0 ;
  cv::linemod::ColorGradient *_swig_go_result;
  
  
  result = (cv::linemod::ColorGradient *)new cv::linemod::ColorGradient();
  *(cv::linemod::ColorGradient **)&_swig_go_result = (cv::linemod::ColorGradient *)result; 
  return _swig_go_result;
}


cv::linemod::ColorGradient *_wrap_new_ColorGradient__SWIG_1_cv_dbcbba478e71899d(float _swig_go_0, long long _swig_go_1, float _swig_go_2) {
  float arg1 ;
  size_t arg2 ;
  float arg3 ;
  cv::linemod::ColorGradient *result = 0 ;
  cv::linemod::ColorGradient *_swig_go_result;
  
  arg1 = (float)_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  result = (cv::linemod::ColorGradient *)new cv::linemod::ColorGradient(arg1,arg2,arg3);
  *(cv::linemod::ColorGradient **)&_swig_go_result = (cv::linemod::ColorGradient *)result; 
  return _swig_go_result;
}


_gostring_ _wrap_ColorGradient_name_cv_dbcbba478e71899d(cv::linemod::ColorGradient *_swig_go_0) {
  cv::linemod::ColorGradient *arg1 = (cv::linemod::ColorGradient *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::linemod::ColorGradient **)&_swig_go_0; 
  
  result = ((cv::linemod::ColorGradient const *)arg1)->name();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


void _wrap_ColorGradient_read_cv_dbcbba478e71899d(cv::linemod::ColorGradient *_swig_go_0, cv::FileNode *_swig_go_1) {
  cv::linemod::ColorGradient *arg1 = (cv::linemod::ColorGradient *) 0 ;
  cv::linemod::FileNode *arg2 = 0 ;
  
  arg1 = *(cv::linemod::ColorGradient **)&_swig_go_0; 
  arg2 = *(cv::linemod::FileNode **)&_swig_go_1; 
  
  (arg1)->read((cv::linemod::FileNode const &)*arg2);
  
}


void _wrap_ColorGradient_write_cv_dbcbba478e71899d(cv::linemod::ColorGradient *_swig_go_0, cv::FileStorage *_swig_go_1) {
  cv::linemod::ColorGradient *arg1 = (cv::linemod::ColorGradient *) 0 ;
  cv::linemod::FileStorage *arg2 = 0 ;
  
  arg1 = *(cv::linemod::ColorGradient **)&_swig_go_0; 
  arg2 = *(cv::linemod::FileStorage **)&_swig_go_1; 
  
  ((cv::linemod::ColorGradient const *)arg1)->write(*arg2);
  
}


void _wrap_ColorGradient_weak_threshold_set_cv_dbcbba478e71899d(cv::linemod::ColorGradient *_swig_go_0, float _swig_go_1) {
  cv::linemod::ColorGradient *arg1 = (cv::linemod::ColorGradient *) 0 ;
  float arg2 ;
  
  arg1 = *(cv::linemod::ColorGradient **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->weak_threshold = arg2;
  
}


float _wrap_ColorGradient_weak_threshold_get_cv_dbcbba478e71899d(cv::linemod::ColorGradient *_swig_go_0) {
  cv::linemod::ColorGradient *arg1 = (cv::linemod::ColorGradient *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(cv::linemod::ColorGradient **)&_swig_go_0; 
  
  result = (float) ((arg1)->weak_threshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ColorGradient_num_features_set_cv_dbcbba478e71899d(cv::linemod::ColorGradient *_swig_go_0, long long _swig_go_1) {
  cv::linemod::ColorGradient *arg1 = (cv::linemod::ColorGradient *) 0 ;
  size_t arg2 ;
  
  arg1 = *(cv::linemod::ColorGradient **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  
  if (arg1) (arg1)->num_features = arg2;
  
}


long long _wrap_ColorGradient_num_features_get_cv_dbcbba478e71899d(cv::linemod::ColorGradient *_swig_go_0) {
  cv::linemod::ColorGradient *arg1 = (cv::linemod::ColorGradient *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(cv::linemod::ColorGradient **)&_swig_go_0; 
  
  result =  ((arg1)->num_features);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ColorGradient_strong_threshold_set_cv_dbcbba478e71899d(cv::linemod::ColorGradient *_swig_go_0, float _swig_go_1) {
  cv::linemod::ColorGradient *arg1 = (cv::linemod::ColorGradient *) 0 ;
  float arg2 ;
  
  arg1 = *(cv::linemod::ColorGradient **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->strong_threshold = arg2;
  
}


float _wrap_ColorGradient_strong_threshold_get_cv_dbcbba478e71899d(cv::linemod::ColorGradient *_swig_go_0) {
  cv::linemod::ColorGradient *arg1 = (cv::linemod::ColorGradient *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(cv::linemod::ColorGradient **)&_swig_go_0; 
  
  result = (float) ((arg1)->strong_threshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_ColorGradient_cv_dbcbba478e71899d(cv::linemod::ColorGradient *_swig_go_0) {
  cv::linemod::ColorGradient *arg1 = (cv::linemod::ColorGradient *) 0 ;
  
  arg1 = *(cv::linemod::ColorGradient **)&_swig_go_0; 
  
  delete arg1;
  
}


cv::Ptr< cv::linemod::QuantizedPyramid > *_wrap_ColorGradient_process__SWIG_0_cv_dbcbba478e71899d(cv::linemod::ColorGradient *_swig_go_0, cv::Mat *_swig_go_1, cv::Mat *_swig_go_2) {
  cv::linemod::ColorGradient *arg1 = (cv::linemod::ColorGradient *) 0 ;
  cv::linemod::Mat *arg2 = 0 ;
  cv::linemod::Mat *arg3 = 0 ;
  SwigValueWrapper< cv::Ptr< cv::linemod::QuantizedPyramid > > result;
  cv::Ptr< cv::linemod::QuantizedPyramid > *_swig_go_result;
  
  arg1 = *(cv::linemod::ColorGradient **)&_swig_go_0; 
  arg2 = *(cv::linemod::Mat **)&_swig_go_1; 
  arg3 = *(cv::linemod::Mat **)&_swig_go_2; 
  
  cv::linemod::Modality *swig_b0 = (cv::linemod::Modality *)arg1;
  result = ((cv::linemod::Modality const *)swig_b0)->process((cv::linemod::Mat const &)*arg2,(cv::linemod::Mat const &)*arg3);
  *(cv::Ptr< cv::linemod::QuantizedPyramid > **)&_swig_go_result = new cv::Ptr< cv::linemod::QuantizedPyramid >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::linemod::QuantizedPyramid > *_wrap_ColorGradient_process__SWIG_1_cv_dbcbba478e71899d(cv::linemod::ColorGradient *_swig_go_0, cv::Mat *_swig_go_1) {
  cv::linemod::ColorGradient *arg1 = (cv::linemod::ColorGradient *) 0 ;
  cv::linemod::Mat *arg2 = 0 ;
  SwigValueWrapper< cv::Ptr< cv::linemod::QuantizedPyramid > > result;
  cv::Ptr< cv::linemod::QuantizedPyramid > *_swig_go_result;
  
  arg1 = *(cv::linemod::ColorGradient **)&_swig_go_0; 
  arg2 = *(cv::linemod::Mat **)&_swig_go_1; 
  
  cv::linemod::Modality *swig_b0 = (cv::linemod::Modality *)arg1;
  result = ((cv::linemod::Modality const *)swig_b0)->process((cv::linemod::Mat const &)*arg2);
  *(cv::Ptr< cv::linemod::QuantizedPyramid > **)&_swig_go_result = new cv::Ptr< cv::linemod::QuantizedPyramid >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::linemod::Modality > *_wrap_ColorGradient_create__SWIG_0_cv_dbcbba478e71899d(_gostring_ _swig_go_0) {
  std::string *arg1 = 0 ;
  SwigValueWrapper< cv::Ptr< cv::linemod::Modality > > result;
  cv::Ptr< cv::linemod::Modality > *_swig_go_result;
  
  
  std::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  
  result = cv::linemod::Modality::create((std::string const &)*arg1);
  *(cv::Ptr< cv::linemod::Modality > **)&_swig_go_result = new cv::Ptr< cv::linemod::Modality >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::linemod::Modality > *_wrap_ColorGradient_create__SWIG_1_cv_dbcbba478e71899d(cv::FileNode *_swig_go_0) {
  cv::linemod::FileNode *arg1 = 0 ;
  SwigValueWrapper< cv::Ptr< cv::linemod::Modality > > result;
  cv::Ptr< cv::linemod::Modality > *_swig_go_result;
  
  arg1 = *(cv::linemod::FileNode **)&_swig_go_0; 
  
  result = cv::linemod::Modality::create((cv::FileNode const &)*arg1);
  *(cv::Ptr< cv::linemod::Modality > **)&_swig_go_result = new cv::Ptr< cv::linemod::Modality >(result); 
  return _swig_go_result;
}


cv::linemod::DepthNormal *_wrap_new_DepthNormal__SWIG_0_cv_dbcbba478e71899d() {
  cv::linemod::DepthNormal *result = 0 ;
  cv::linemod::DepthNormal *_swig_go_result;
  
  
  result = (cv::linemod::DepthNormal *)new cv::linemod::DepthNormal();
  *(cv::linemod::DepthNormal **)&_swig_go_result = (cv::linemod::DepthNormal *)result; 
  return _swig_go_result;
}


cv::linemod::DepthNormal *_wrap_new_DepthNormal__SWIG_1_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, long long _swig_go_2, intgo _swig_go_3) {
  int arg1 ;
  int arg2 ;
  size_t arg3 ;
  int arg4 ;
  cv::linemod::DepthNormal *result = 0 ;
  cv::linemod::DepthNormal *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (size_t)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = (cv::linemod::DepthNormal *)new cv::linemod::DepthNormal(arg1,arg2,arg3,arg4);
  *(cv::linemod::DepthNormal **)&_swig_go_result = (cv::linemod::DepthNormal *)result; 
  return _swig_go_result;
}


_gostring_ _wrap_DepthNormal_name_cv_dbcbba478e71899d(cv::linemod::DepthNormal *_swig_go_0) {
  cv::linemod::DepthNormal *arg1 = (cv::linemod::DepthNormal *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::linemod::DepthNormal **)&_swig_go_0; 
  
  result = ((cv::linemod::DepthNormal const *)arg1)->name();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


void _wrap_DepthNormal_read_cv_dbcbba478e71899d(cv::linemod::DepthNormal *_swig_go_0, cv::FileNode *_swig_go_1) {
  cv::linemod::DepthNormal *arg1 = (cv::linemod::DepthNormal *) 0 ;
  cv::linemod::FileNode *arg2 = 0 ;
  
  arg1 = *(cv::linemod::DepthNormal **)&_swig_go_0; 
  arg2 = *(cv::linemod::FileNode **)&_swig_go_1; 
  
  (arg1)->read((cv::linemod::FileNode const &)*arg2);
  
}


void _wrap_DepthNormal_write_cv_dbcbba478e71899d(cv::linemod::DepthNormal *_swig_go_0, cv::FileStorage *_swig_go_1) {
  cv::linemod::DepthNormal *arg1 = (cv::linemod::DepthNormal *) 0 ;
  cv::linemod::FileStorage *arg2 = 0 ;
  
  arg1 = *(cv::linemod::DepthNormal **)&_swig_go_0; 
  arg2 = *(cv::linemod::FileStorage **)&_swig_go_1; 
  
  ((cv::linemod::DepthNormal const *)arg1)->write(*arg2);
  
}


void _wrap_DepthNormal_distance_threshold_set_cv_dbcbba478e71899d(cv::linemod::DepthNormal *_swig_go_0, intgo _swig_go_1) {
  cv::linemod::DepthNormal *arg1 = (cv::linemod::DepthNormal *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::linemod::DepthNormal **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->distance_threshold = arg2;
  
}


intgo _wrap_DepthNormal_distance_threshold_get_cv_dbcbba478e71899d(cv::linemod::DepthNormal *_swig_go_0) {
  cv::linemod::DepthNormal *arg1 = (cv::linemod::DepthNormal *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::linemod::DepthNormal **)&_swig_go_0; 
  
  result = (int) ((arg1)->distance_threshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_DepthNormal_difference_threshold_set_cv_dbcbba478e71899d(cv::linemod::DepthNormal *_swig_go_0, intgo _swig_go_1) {
  cv::linemod::DepthNormal *arg1 = (cv::linemod::DepthNormal *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::linemod::DepthNormal **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->difference_threshold = arg2;
  
}


intgo _wrap_DepthNormal_difference_threshold_get_cv_dbcbba478e71899d(cv::linemod::DepthNormal *_swig_go_0) {
  cv::linemod::DepthNormal *arg1 = (cv::linemod::DepthNormal *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::linemod::DepthNormal **)&_swig_go_0; 
  
  result = (int) ((arg1)->difference_threshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_DepthNormal_num_features_set_cv_dbcbba478e71899d(cv::linemod::DepthNormal *_swig_go_0, long long _swig_go_1) {
  cv::linemod::DepthNormal *arg1 = (cv::linemod::DepthNormal *) 0 ;
  size_t arg2 ;
  
  arg1 = *(cv::linemod::DepthNormal **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  
  if (arg1) (arg1)->num_features = arg2;
  
}


long long _wrap_DepthNormal_num_features_get_cv_dbcbba478e71899d(cv::linemod::DepthNormal *_swig_go_0) {
  cv::linemod::DepthNormal *arg1 = (cv::linemod::DepthNormal *) 0 ;
  size_t result;
  long long _swig_go_result;
  
  arg1 = *(cv::linemod::DepthNormal **)&_swig_go_0; 
  
  result =  ((arg1)->num_features);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_DepthNormal_extract_threshold_set_cv_dbcbba478e71899d(cv::linemod::DepthNormal *_swig_go_0, intgo _swig_go_1) {
  cv::linemod::DepthNormal *arg1 = (cv::linemod::DepthNormal *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::linemod::DepthNormal **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->extract_threshold = arg2;
  
}


intgo _wrap_DepthNormal_extract_threshold_get_cv_dbcbba478e71899d(cv::linemod::DepthNormal *_swig_go_0) {
  cv::linemod::DepthNormal *arg1 = (cv::linemod::DepthNormal *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::linemod::DepthNormal **)&_swig_go_0; 
  
  result = (int) ((arg1)->extract_threshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_DepthNormal_cv_dbcbba478e71899d(cv::linemod::DepthNormal *_swig_go_0) {
  cv::linemod::DepthNormal *arg1 = (cv::linemod::DepthNormal *) 0 ;
  
  arg1 = *(cv::linemod::DepthNormal **)&_swig_go_0; 
  
  delete arg1;
  
}


cv::Ptr< cv::linemod::QuantizedPyramid > *_wrap_DepthNormal_process__SWIG_0_cv_dbcbba478e71899d(cv::linemod::DepthNormal *_swig_go_0, cv::Mat *_swig_go_1, cv::Mat *_swig_go_2) {
  cv::linemod::DepthNormal *arg1 = (cv::linemod::DepthNormal *) 0 ;
  cv::linemod::Mat *arg2 = 0 ;
  cv::linemod::Mat *arg3 = 0 ;
  SwigValueWrapper< cv::Ptr< cv::linemod::QuantizedPyramid > > result;
  cv::Ptr< cv::linemod::QuantizedPyramid > *_swig_go_result;
  
  arg1 = *(cv::linemod::DepthNormal **)&_swig_go_0; 
  arg2 = *(cv::linemod::Mat **)&_swig_go_1; 
  arg3 = *(cv::linemod::Mat **)&_swig_go_2; 
  
  cv::linemod::Modality *swig_b0 = (cv::linemod::Modality *)arg1;
  result = ((cv::linemod::Modality const *)swig_b0)->process((cv::linemod::Mat const &)*arg2,(cv::linemod::Mat const &)*arg3);
  *(cv::Ptr< cv::linemod::QuantizedPyramid > **)&_swig_go_result = new cv::Ptr< cv::linemod::QuantizedPyramid >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::linemod::QuantizedPyramid > *_wrap_DepthNormal_process__SWIG_1_cv_dbcbba478e71899d(cv::linemod::DepthNormal *_swig_go_0, cv::Mat *_swig_go_1) {
  cv::linemod::DepthNormal *arg1 = (cv::linemod::DepthNormal *) 0 ;
  cv::linemod::Mat *arg2 = 0 ;
  SwigValueWrapper< cv::Ptr< cv::linemod::QuantizedPyramid > > result;
  cv::Ptr< cv::linemod::QuantizedPyramid > *_swig_go_result;
  
  arg1 = *(cv::linemod::DepthNormal **)&_swig_go_0; 
  arg2 = *(cv::linemod::Mat **)&_swig_go_1; 
  
  cv::linemod::Modality *swig_b0 = (cv::linemod::Modality *)arg1;
  result = ((cv::linemod::Modality const *)swig_b0)->process((cv::linemod::Mat const &)*arg2);
  *(cv::Ptr< cv::linemod::QuantizedPyramid > **)&_swig_go_result = new cv::Ptr< cv::linemod::QuantizedPyramid >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::linemod::Modality > *_wrap_DepthNormal_create__SWIG_0_cv_dbcbba478e71899d(_gostring_ _swig_go_0) {
  std::string *arg1 = 0 ;
  SwigValueWrapper< cv::Ptr< cv::linemod::Modality > > result;
  cv::Ptr< cv::linemod::Modality > *_swig_go_result;
  
  
  std::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  
  result = cv::linemod::Modality::create((std::string const &)*arg1);
  *(cv::Ptr< cv::linemod::Modality > **)&_swig_go_result = new cv::Ptr< cv::linemod::Modality >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::linemod::Modality > *_wrap_DepthNormal_create__SWIG_1_cv_dbcbba478e71899d(cv::FileNode *_swig_go_0) {
  cv::linemod::FileNode *arg1 = 0 ;
  SwigValueWrapper< cv::Ptr< cv::linemod::Modality > > result;
  cv::Ptr< cv::linemod::Modality > *_swig_go_result;
  
  arg1 = *(cv::linemod::FileNode **)&_swig_go_0; 
  
  result = cv::linemod::Modality::create((cv::FileNode const &)*arg1);
  *(cv::Ptr< cv::linemod::Modality > **)&_swig_go_result = new cv::Ptr< cv::linemod::Modality >(result); 
  return _swig_go_result;
}


void _wrap_colormap_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, cv::Mat *_swig_go_1) {
  cv::linemod::Mat *arg1 = 0 ;
  cv::linemod::Mat *arg2 = 0 ;
  
  arg1 = *(cv::linemod::Mat **)&_swig_go_0; 
  arg2 = *(cv::linemod::Mat **)&_swig_go_1; 
  
  cv::linemod::colormap((cv::Mat const &)*arg1,*arg2);
  
}


cv::linemod::Match *_wrap_new_Match__SWIG_0_cv_dbcbba478e71899d() {
  cv::linemod::Match *result = 0 ;
  cv::linemod::Match *_swig_go_result;
  
  
  result = (cv::linemod::Match *)new cv::linemod::Match();
  *(cv::linemod::Match **)&_swig_go_result = (cv::linemod::Match *)result; 
  return _swig_go_result;
}


cv::linemod::Match *_wrap_new_Match__SWIG_1_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, float _swig_go_2, _gostring_ _swig_go_3, intgo _swig_go_4) {
  int arg1 ;
  int arg2 ;
  float arg3 ;
  std::string *arg4 = 0 ;
  int arg5 ;
  cv::linemod::Match *result = 0 ;
  cv::linemod::Match *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  std::string arg4_str(_swig_go_3.p, _swig_go_3.n);
  arg4 = &arg4_str;
  
  arg5 = (int)_swig_go_4; 
  
  result = (cv::linemod::Match *)new cv::linemod::Match(arg1,arg2,arg3,(std::string const &)*arg4,arg5);
  *(cv::linemod::Match **)&_swig_go_result = (cv::linemod::Match *)result; 
  return _swig_go_result;
}


void _wrap_Match_x_set_cv_dbcbba478e71899d(cv::linemod::Match *_swig_go_0, intgo _swig_go_1) {
  cv::linemod::Match *arg1 = (cv::linemod::Match *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::linemod::Match **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->x = arg2;
  
}


intgo _wrap_Match_x_get_cv_dbcbba478e71899d(cv::linemod::Match *_swig_go_0) {
  cv::linemod::Match *arg1 = (cv::linemod::Match *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::linemod::Match **)&_swig_go_0; 
  
  result = (int) ((arg1)->x);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Match_y_set_cv_dbcbba478e71899d(cv::linemod::Match *_swig_go_0, intgo _swig_go_1) {
  cv::linemod::Match *arg1 = (cv::linemod::Match *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::linemod::Match **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->y = arg2;
  
}


intgo _wrap_Match_y_get_cv_dbcbba478e71899d(cv::linemod::Match *_swig_go_0) {
  cv::linemod::Match *arg1 = (cv::linemod::Match *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::linemod::Match **)&_swig_go_0; 
  
  result = (int) ((arg1)->y);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Match_similarity_set_cv_dbcbba478e71899d(cv::linemod::Match *_swig_go_0, float _swig_go_1) {
  cv::linemod::Match *arg1 = (cv::linemod::Match *) 0 ;
  float arg2 ;
  
  arg1 = *(cv::linemod::Match **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->similarity = arg2;
  
}


float _wrap_Match_similarity_get_cv_dbcbba478e71899d(cv::linemod::Match *_swig_go_0) {
  cv::linemod::Match *arg1 = (cv::linemod::Match *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(cv::linemod::Match **)&_swig_go_0; 
  
  result = (float) ((arg1)->similarity);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Match_class_id_set_cv_dbcbba478e71899d(cv::linemod::Match *_swig_go_0, _gostring_ _swig_go_1) {
  cv::linemod::Match *arg1 = (cv::linemod::Match *) 0 ;
  std::string *arg2 = 0 ;
  
  arg1 = *(cv::linemod::Match **)&_swig_go_0; 
  
  std::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  if (arg1) (arg1)->class_id = *arg2;
  
}


_gostring_ _wrap_Match_class_id_get_cv_dbcbba478e71899d(cv::linemod::Match *_swig_go_0) {
  cv::linemod::Match *arg1 = (cv::linemod::Match *) 0 ;
  std::string *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::linemod::Match **)&_swig_go_0; 
  
  result = (std::string *) & ((arg1)->class_id);
  _swig_go_result = Swig_AllocateString((*result).data(), (*result).length()); 
  return _swig_go_result;
}


void _wrap_Match_template_id_set_cv_dbcbba478e71899d(cv::linemod::Match *_swig_go_0, intgo _swig_go_1) {
  cv::linemod::Match *arg1 = (cv::linemod::Match *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::linemod::Match **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->template_id = arg2;
  
}


intgo _wrap_Match_template_id_get_cv_dbcbba478e71899d(cv::linemod::Match *_swig_go_0) {
  cv::linemod::Match *arg1 = (cv::linemod::Match *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::linemod::Match **)&_swig_go_0; 
  
  result = (int) ((arg1)->template_id);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_Match_cv_dbcbba478e71899d(cv::linemod::Match *_swig_go_0) {
  cv::linemod::Match *arg1 = (cv::linemod::Match *) 0 ;
  
  arg1 = *(cv::linemod::Match **)&_swig_go_0; 
  
  delete arg1;
  
}


cv::linemod::Detector *_wrap_new_Detector__SWIG_0_cv_dbcbba478e71899d() {
  cv::linemod::Detector *result = 0 ;
  cv::linemod::Detector *_swig_go_result;
  
  
  result = (cv::linemod::Detector *)new cv::linemod::Detector();
  *(cv::linemod::Detector **)&_swig_go_result = (cv::linemod::Detector *)result; 
  return _swig_go_result;
}


cv::linemod::Detector *_wrap_new_Detector__SWIG_1_cv_dbcbba478e71899d(std::vector< cv::Ptr< cv::linemod::Modality > > *_swig_go_0, std::vector< int > *_swig_go_1) {
  std::vector< cv::Ptr< cv::linemod::Modality > > *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  cv::linemod::Detector *result = 0 ;
  cv::linemod::Detector *_swig_go_result;
  
  arg1 = *(std::vector< cv::Ptr< cv::linemod::Modality > > **)&_swig_go_0; 
  arg2 = *(std::vector< int > **)&_swig_go_1; 
  
  result = (cv::linemod::Detector *)new cv::linemod::Detector((std::vector< cv::Ptr< cv::linemod::Modality > > const &)*arg1,(std::vector< int > const &)*arg2);
  *(cv::linemod::Detector **)&_swig_go_result = (cv::linemod::Detector *)result; 
  return _swig_go_result;
}


intgo _wrap_Detector_addTemplate__SWIG_0_cv_dbcbba478e71899d(cv::linemod::Detector *_swig_go_0, std::vector< cv::Mat > *_swig_go_1, _gostring_ _swig_go_2, cv::Mat *_swig_go_3, cv::Rect_< int > *_swig_go_4) {
  cv::linemod::Detector *arg1 = (cv::linemod::Detector *) 0 ;
  std::vector< cv::linemod::Mat > *arg2 = 0 ;
  std::string *arg3 = 0 ;
  cv::linemod::Mat *arg4 = 0 ;
  cv::linemod::Rect *arg5 = (cv::linemod::Rect *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::linemod::Detector **)&_swig_go_0; 
  arg2 = *(std::vector< cv::linemod::Mat > **)&_swig_go_1; 
  
  std::string arg3_str(_swig_go_2.p, _swig_go_2.n);
  arg3 = &arg3_str;
  
  arg4 = *(cv::linemod::Mat **)&_swig_go_3; 
  arg5 = *(cv::linemod::Rect **)&_swig_go_4; 
  
  result = (int)(arg1)->addTemplate((std::vector< cv::linemod::Mat > const &)*arg2,(std::string const &)*arg3,(cv::linemod::Mat const &)*arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_Detector_addTemplate__SWIG_1_cv_dbcbba478e71899d(cv::linemod::Detector *_swig_go_0, std::vector< cv::Mat > *_swig_go_1, _gostring_ _swig_go_2, cv::Mat *_swig_go_3) {
  cv::linemod::Detector *arg1 = (cv::linemod::Detector *) 0 ;
  std::vector< cv::linemod::Mat > *arg2 = 0 ;
  std::string *arg3 = 0 ;
  cv::linemod::Mat *arg4 = 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::linemod::Detector **)&_swig_go_0; 
  arg2 = *(std::vector< cv::linemod::Mat > **)&_swig_go_1; 
  
  std::string arg3_str(_swig_go_2.p, _swig_go_2.n);
  arg3 = &arg3_str;
  
  arg4 = *(cv::linemod::Mat **)&_swig_go_3; 
  
  result = (int)(arg1)->addTemplate((std::vector< cv::linemod::Mat > const &)*arg2,(std::string const &)*arg3,(cv::linemod::Mat const &)*arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_Detector_addSyntheticTemplate_cv_dbcbba478e71899d(cv::linemod::Detector *_swig_go_0, std::vector< cv::linemod::Template > *_swig_go_1, _gostring_ _swig_go_2) {
  cv::linemod::Detector *arg1 = (cv::linemod::Detector *) 0 ;
  std::vector< cv::linemod::Template > *arg2 = 0 ;
  std::string *arg3 = 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::linemod::Detector **)&_swig_go_0; 
  arg2 = *(std::vector< cv::linemod::Template > **)&_swig_go_1; 
  
  std::string arg3_str(_swig_go_2.p, _swig_go_2.n);
  arg3 = &arg3_str;
  
  
  result = (int)(arg1)->addSyntheticTemplate((std::vector< cv::linemod::Template > const &)*arg2,(std::string const &)*arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


std::vector< cv::Ptr< cv::linemod::Modality > > *_wrap_Detector_getModalities_cv_dbcbba478e71899d(cv::linemod::Detector *_swig_go_0) {
  cv::linemod::Detector *arg1 = (cv::linemod::Detector *) 0 ;
  std::vector< cv::Ptr< cv::linemod::Modality > > *result = 0 ;
  std::vector< cv::Ptr< cv::linemod::Modality > > *_swig_go_result;
  
  arg1 = *(cv::linemod::Detector **)&_swig_go_0; 
  
  result = (std::vector< cv::Ptr< cv::linemod::Modality > > *) &((cv::linemod::Detector const *)arg1)->getModalities();
  *(std::vector< cv::Ptr< cv::linemod::Modality > > **)&_swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_Detector_getT_cv_dbcbba478e71899d(cv::linemod::Detector *_swig_go_0, intgo _swig_go_1) {
  cv::linemod::Detector *arg1 = (cv::linemod::Detector *) 0 ;
  int arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::linemod::Detector **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (int)((cv::linemod::Detector const *)arg1)->getT(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_Detector_pyramidLevels_cv_dbcbba478e71899d(cv::linemod::Detector *_swig_go_0) {
  cv::linemod::Detector *arg1 = (cv::linemod::Detector *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::linemod::Detector **)&_swig_go_0; 
  
  result = (int)((cv::linemod::Detector const *)arg1)->pyramidLevels();
  _swig_go_result = result; 
  return _swig_go_result;
}


std::vector< cv::linemod::Template > *_wrap_Detector_getTemplates_cv_dbcbba478e71899d(cv::linemod::Detector *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  cv::linemod::Detector *arg1 = (cv::linemod::Detector *) 0 ;
  std::string *arg2 = 0 ;
  int arg3 ;
  std::vector< cv::linemod::Template > *result = 0 ;
  std::vector< cv::linemod::Template > *_swig_go_result;
  
  arg1 = *(cv::linemod::Detector **)&_swig_go_0; 
  
  std::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  arg3 = (int)_swig_go_2; 
  
  result = (std::vector< cv::linemod::Template > *) &((cv::linemod::Detector const *)arg1)->getTemplates((std::string const &)*arg2,arg3);
  *(std::vector< cv::linemod::Template > **)&_swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_Detector_numTemplates__SWIG_0_cv_dbcbba478e71899d(cv::linemod::Detector *_swig_go_0) {
  cv::linemod::Detector *arg1 = (cv::linemod::Detector *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::linemod::Detector **)&_swig_go_0; 
  
  result = (int)((cv::linemod::Detector const *)arg1)->numTemplates();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_Detector_numTemplates__SWIG_1_cv_dbcbba478e71899d(cv::linemod::Detector *_swig_go_0, _gostring_ _swig_go_1) {
  cv::linemod::Detector *arg1 = (cv::linemod::Detector *) 0 ;
  std::string *arg2 = 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::linemod::Detector **)&_swig_go_0; 
  
  std::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  result = (int)((cv::linemod::Detector const *)arg1)->numTemplates((std::string const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_Detector_numClasses_cv_dbcbba478e71899d(cv::linemod::Detector *_swig_go_0) {
  cv::linemod::Detector *arg1 = (cv::linemod::Detector *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::linemod::Detector **)&_swig_go_0; 
  
  result = (int)((cv::linemod::Detector const *)arg1)->numClasses();
  _swig_go_result = result; 
  return _swig_go_result;
}


std::vector< std::string > *_wrap_Detector_classIds_cv_dbcbba478e71899d(cv::linemod::Detector *_swig_go_0) {
  cv::linemod::Detector *arg1 = (cv::linemod::Detector *) 0 ;
  SwigValueWrapper< std::vector< std::string > > result;
  std::vector< std::string > *_swig_go_result;
  
  arg1 = *(cv::linemod::Detector **)&_swig_go_0; 
  
  result = ((cv::linemod::Detector const *)arg1)->classIds();
  *(std::vector< std::string > **)&_swig_go_result = new std::vector< std::string >(result); 
  return _swig_go_result;
}


void _wrap_Detector_read_cv_dbcbba478e71899d(cv::linemod::Detector *_swig_go_0, cv::FileNode *_swig_go_1) {
  cv::linemod::Detector *arg1 = (cv::linemod::Detector *) 0 ;
  cv::linemod::FileNode *arg2 = 0 ;
  
  arg1 = *(cv::linemod::Detector **)&_swig_go_0; 
  arg2 = *(cv::linemod::FileNode **)&_swig_go_1; 
  
  (arg1)->read((cv::linemod::FileNode const &)*arg2);
  
}


void _wrap_Detector_write_cv_dbcbba478e71899d(cv::linemod::Detector *_swig_go_0, cv::FileStorage *_swig_go_1) {
  cv::linemod::Detector *arg1 = (cv::linemod::Detector *) 0 ;
  cv::linemod::FileStorage *arg2 = 0 ;
  
  arg1 = *(cv::linemod::Detector **)&_swig_go_0; 
  arg2 = *(cv::linemod::FileStorage **)&_swig_go_1; 
  
  ((cv::linemod::Detector const *)arg1)->write(*arg2);
  
}


_gostring_ _wrap_Detector_readClass__SWIG_0_cv_dbcbba478e71899d(cv::linemod::Detector *_swig_go_0, cv::FileNode *_swig_go_1, _gostring_ _swig_go_2) {
  cv::linemod::Detector *arg1 = (cv::linemod::Detector *) 0 ;
  cv::linemod::FileNode *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::linemod::Detector **)&_swig_go_0; 
  arg2 = *(cv::linemod::FileNode **)&_swig_go_1; 
  
  std::string arg3_str(_swig_go_2.p, _swig_go_2.n);
  arg3 = &arg3_str;
  
  
  result = (arg1)->readClass((cv::linemod::FileNode const &)*arg2,(std::string const &)*arg3);
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


_gostring_ _wrap_Detector_readClass__SWIG_1_cv_dbcbba478e71899d(cv::linemod::Detector *_swig_go_0, cv::FileNode *_swig_go_1) {
  cv::linemod::Detector *arg1 = (cv::linemod::Detector *) 0 ;
  cv::linemod::FileNode *arg2 = 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(cv::linemod::Detector **)&_swig_go_0; 
  arg2 = *(cv::linemod::FileNode **)&_swig_go_1; 
  
  result = (arg1)->readClass((cv::linemod::FileNode const &)*arg2);
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


void _wrap_Detector_writeClass_cv_dbcbba478e71899d(cv::linemod::Detector *_swig_go_0, _gostring_ _swig_go_1, cv::FileStorage *_swig_go_2) {
  cv::linemod::Detector *arg1 = (cv::linemod::Detector *) 0 ;
  std::string *arg2 = 0 ;
  cv::linemod::FileStorage *arg3 = 0 ;
  
  arg1 = *(cv::linemod::Detector **)&_swig_go_0; 
  
  std::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  arg3 = *(cv::linemod::FileStorage **)&_swig_go_2; 
  
  ((cv::linemod::Detector const *)arg1)->writeClass((std::string const &)*arg2,*arg3);
  
}


void _wrap_Detector_readClasses__SWIG_0_cv_dbcbba478e71899d(cv::linemod::Detector *_swig_go_0, std::vector< std::string > *_swig_go_1, _gostring_ _swig_go_2) {
  cv::linemod::Detector *arg1 = (cv::linemod::Detector *) 0 ;
  std::vector< std::string > *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  arg1 = *(cv::linemod::Detector **)&_swig_go_0; 
  arg2 = *(std::vector< std::string > **)&_swig_go_1; 
  
  std::string arg3_str(_swig_go_2.p, _swig_go_2.n);
  arg3 = &arg3_str;
  
  
  (arg1)->readClasses((std::vector< std::string > const &)*arg2,(std::string const &)*arg3);
  
}


void _wrap_Detector_readClasses__SWIG_1_cv_dbcbba478e71899d(cv::linemod::Detector *_swig_go_0, std::vector< std::string > *_swig_go_1) {
  cv::linemod::Detector *arg1 = (cv::linemod::Detector *) 0 ;
  std::vector< std::string > *arg2 = 0 ;
  
  arg1 = *(cv::linemod::Detector **)&_swig_go_0; 
  arg2 = *(std::vector< std::string > **)&_swig_go_1; 
  
  (arg1)->readClasses((std::vector< std::string > const &)*arg2);
  
}


void _wrap_Detector_writeClasses__SWIG_0_cv_dbcbba478e71899d(cv::linemod::Detector *_swig_go_0, _gostring_ _swig_go_1) {
  cv::linemod::Detector *arg1 = (cv::linemod::Detector *) 0 ;
  std::string *arg2 = 0 ;
  
  arg1 = *(cv::linemod::Detector **)&_swig_go_0; 
  
  std::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  ((cv::linemod::Detector const *)arg1)->writeClasses((std::string const &)*arg2);
  
}


void _wrap_Detector_writeClasses__SWIG_1_cv_dbcbba478e71899d(cv::linemod::Detector *_swig_go_0) {
  cv::linemod::Detector *arg1 = (cv::linemod::Detector *) 0 ;
  
  arg1 = *(cv::linemod::Detector **)&_swig_go_0; 
  
  ((cv::linemod::Detector const *)arg1)->writeClasses();
  
}


void _wrap_delete_Detector_cv_dbcbba478e71899d(cv::linemod::Detector *_swig_go_0) {
  cv::linemod::Detector *arg1 = (cv::linemod::Detector *) 0 ;
  
  arg1 = *(cv::linemod::Detector **)&_swig_go_0; 
  
  delete arg1;
  
}


cv::Ptr< cv::linemod::Detector > *_wrap_getDefaultLINE_cv_dbcbba478e71899d() {
  SwigValueWrapper< cv::Ptr< cv::linemod::Detector > > result;
  cv::Ptr< cv::linemod::Detector > *_swig_go_result;
  
  
  result = cv::linemod::getDefaultLINE();
  *(cv::Ptr< cv::linemod::Detector > **)&_swig_go_result = new cv::Ptr< cv::linemod::Detector >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::linemod::Detector > *_wrap_getDefaultLINEMOD_cv_dbcbba478e71899d() {
  SwigValueWrapper< cv::Ptr< cv::linemod::Detector > > result;
  cv::Ptr< cv::linemod::Detector > *_swig_go_result;
  
  
  result = cv::linemod::getDefaultLINEMOD();
  *(cv::Ptr< cv::linemod::Detector > **)&_swig_go_result = new cv::Ptr< cv::linemod::Detector >(result); 
  return _swig_go_result;
}


intgo _wrap_WINDOW_NORMAL_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::WINDOW_NORMAL;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_WINDOW_AUTOSIZE_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::WINDOW_AUTOSIZE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_WINDOW_OPENGL_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::WINDOW_OPENGL;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_WND_PROP_FULLSCREEN_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::WND_PROP_FULLSCREEN;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_WND_PROP_AUTOSIZE_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::WND_PROP_AUTOSIZE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_WND_PROP_ASPECT_RATIO_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::WND_PROP_ASPECT_RATIO;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_WND_PROP_OPENGL_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::WND_PROP_OPENGL;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_namedWindow__SWIG_0_cv_dbcbba478e71899d(_gostring_ _swig_go_0, intgo _swig_go_1) {
  cv::string *arg1 = 0 ;
  int arg2 ;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  arg2 = (int)_swig_go_1; 
  
  cv::namedWindow((std::string const &)*arg1,arg2);
  
}


void _wrap_namedWindow__SWIG_1_cv_dbcbba478e71899d(_gostring_ _swig_go_0) {
  cv::string *arg1 = 0 ;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  
  cv::namedWindow((std::string const &)*arg1);
  
}


void _wrap_destroyWindow_cv_dbcbba478e71899d(_gostring_ _swig_go_0) {
  cv::string *arg1 = 0 ;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  
  cv::destroyWindow((std::string const &)*arg1);
  
}


void _wrap_destroyAllWindows_cv_dbcbba478e71899d() {
  cv::destroyAllWindows();
  
}


intgo _wrap_startWindowThread_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)cv::startWindowThread();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_waitKey__SWIG_0_cv_dbcbba478e71899d(intgo _swig_go_0) {
  int arg1 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (int)cv::waitKey(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_waitKey__SWIG_1_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)cv::waitKey();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_imshow_cv_dbcbba478e71899d(_gostring_ _swig_go_0, cv::_InputArray *_swig_go_1) {
  cv::string *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  
  cv::imshow((std::string const &)*arg1,(cv::_InputArray const &)*arg2);
  
}


void _wrap_resizeWindow_cv_dbcbba478e71899d(_gostring_ _swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  cv::string *arg1 = 0 ;
  int arg2 ;
  int arg3 ;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  cv::resizeWindow((std::string const &)*arg1,arg2,arg3);
  
}


void _wrap_moveWindow_cv_dbcbba478e71899d(_gostring_ _swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  cv::string *arg1 = 0 ;
  int arg2 ;
  int arg3 ;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  cv::moveWindow((std::string const &)*arg1,arg2,arg3);
  
}


void _wrap_setWindowProperty_cv_dbcbba478e71899d(_gostring_ _swig_go_0, intgo _swig_go_1, double _swig_go_2) {
  cv::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  arg2 = (int)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  cv::setWindowProperty((std::string const &)*arg1,arg2,arg3);
  
}


double _wrap_getWindowProperty_cv_dbcbba478e71899d(_gostring_ _swig_go_0, intgo _swig_go_1) {
  cv::string *arg1 = 0 ;
  int arg2 ;
  double result;
  double _swig_go_result;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  arg2 = (int)_swig_go_1; 
  
  result = (double)cv::getWindowProperty((std::string const &)*arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_EVENT_MOUSEMOVE_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::EVENT_MOUSEMOVE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_EVENT_LBUTTONDOWN_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::EVENT_LBUTTONDOWN;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_EVENT_RBUTTONDOWN_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::EVENT_RBUTTONDOWN;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_EVENT_MBUTTONDOWN_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::EVENT_MBUTTONDOWN;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_EVENT_LBUTTONUP_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::EVENT_LBUTTONUP;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_EVENT_RBUTTONUP_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::EVENT_RBUTTONUP;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_EVENT_MBUTTONUP_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::EVENT_MBUTTONUP;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_EVENT_LBUTTONDBLCLK_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::EVENT_LBUTTONDBLCLK;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_EVENT_RBUTTONDBLCLK_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::EVENT_RBUTTONDBLCLK;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_EVENT_MBUTTONDBLCLK_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::EVENT_MBUTTONDBLCLK;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_EVENT_FLAG_LBUTTON_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::EVENT_FLAG_LBUTTON;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_EVENT_FLAG_RBUTTON_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::EVENT_FLAG_RBUTTON;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_EVENT_FLAG_MBUTTON_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::EVENT_FLAG_MBUTTON;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_EVENT_FLAG_CTRLKEY_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::EVENT_FLAG_CTRLKEY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_EVENT_FLAG_SHIFTKEY_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::EVENT_FLAG_SHIFTKEY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_EVENT_FLAG_ALTKEY_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::EVENT_FLAG_ALTKEY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_setMouseCallback__SWIG_0_cv_dbcbba478e71899d(_gostring_ _swig_go_0, void** _swig_go_1, void *_swig_go_2) {
  cv::string *arg1 = 0 ;
  cv::MouseCallback arg2 = (cv::MouseCallback) 0 ;
  void *arg3 = (void *) 0 ;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  arg2 = *(cv::MouseCallback *)&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  
  cv::setMouseCallback((std::string const &)*arg1,arg2,arg3);
  
}


void _wrap_setMouseCallback__SWIG_1_cv_dbcbba478e71899d(_gostring_ _swig_go_0, void** _swig_go_1) {
  cv::string *arg1 = 0 ;
  cv::MouseCallback arg2 = (cv::MouseCallback) 0 ;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  arg2 = *(cv::MouseCallback *)&_swig_go_1; 
  
  cv::setMouseCallback((std::string const &)*arg1,arg2);
  
}


intgo _wrap_createTrackbar__SWIG_0_cv_dbcbba478e71899d(_gostring_ _swig_go_0, _gostring_ _swig_go_1, intgo *_swig_go_2, intgo _swig_go_3, void** _swig_go_4, void *_swig_go_5) {
  cv::string *arg1 = 0 ;
  cv::string *arg2 = 0 ;
  int *arg3 = (int *) 0 ;
  int arg4 ;
  cv::TrackbarCallback arg5 = (cv::TrackbarCallback) 0 ;
  void *arg6 = (void *) 0 ;
  int result;
  intgo _swig_go_result;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  
  cv::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  arg3 = *(int **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(cv::TrackbarCallback *)&_swig_go_4; 
  arg6 = *(void **)&_swig_go_5; 
  
  result = (int)cv::createTrackbar((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_createTrackbar__SWIG_1_cv_dbcbba478e71899d(_gostring_ _swig_go_0, _gostring_ _swig_go_1, intgo *_swig_go_2, intgo _swig_go_3, void** _swig_go_4) {
  cv::string *arg1 = 0 ;
  cv::string *arg2 = 0 ;
  int *arg3 = (int *) 0 ;
  int arg4 ;
  cv::TrackbarCallback arg5 = (cv::TrackbarCallback) 0 ;
  int result;
  intgo _swig_go_result;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  
  cv::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  arg3 = *(int **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(cv::TrackbarCallback *)&_swig_go_4; 
  
  result = (int)cv::createTrackbar((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_createTrackbar__SWIG_2_cv_dbcbba478e71899d(_gostring_ _swig_go_0, _gostring_ _swig_go_1, intgo *_swig_go_2, intgo _swig_go_3) {
  cv::string *arg1 = 0 ;
  cv::string *arg2 = 0 ;
  int *arg3 = (int *) 0 ;
  int arg4 ;
  int result;
  intgo _swig_go_result;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  
  cv::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  arg3 = *(int **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = (int)cv::createTrackbar((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_getTrackbarPos_cv_dbcbba478e71899d(_gostring_ _swig_go_0, _gostring_ _swig_go_1) {
  cv::string *arg1 = 0 ;
  cv::string *arg2 = 0 ;
  int result;
  intgo _swig_go_result;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  
  cv::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  result = (int)cv::getTrackbarPos((std::string const &)*arg1,(std::string const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_setTrackbarPos_cv_dbcbba478e71899d(_gostring_ _swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  cv::string *arg1 = 0 ;
  cv::string *arg2 = 0 ;
  int arg3 ;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  
  cv::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  arg3 = (int)_swig_go_2; 
  
  cv::setTrackbarPos((std::string const &)*arg1,(std::string const &)*arg2,arg3);
  
}


void _wrap_setOpenGlDrawCallback__SWIG_0_cv_dbcbba478e71899d(_gostring_ _swig_go_0, void** _swig_go_1, void *_swig_go_2) {
  cv::string *arg1 = 0 ;
  cv::OpenGlDrawCallback arg2 = (cv::OpenGlDrawCallback) 0 ;
  void *arg3 = (void *) 0 ;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  arg2 = *(cv::OpenGlDrawCallback *)&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  
  cv::setOpenGlDrawCallback((std::string const &)*arg1,arg2,arg3);
  
}


void _wrap_setOpenGlDrawCallback__SWIG_1_cv_dbcbba478e71899d(_gostring_ _swig_go_0, void** _swig_go_1) {
  cv::string *arg1 = 0 ;
  cv::OpenGlDrawCallback arg2 = (cv::OpenGlDrawCallback) 0 ;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  arg2 = *(cv::OpenGlDrawCallback *)&_swig_go_1; 
  
  cv::setOpenGlDrawCallback((std::string const &)*arg1,arg2);
  
}


void _wrap_setOpenGlContext_cv_dbcbba478e71899d(_gostring_ _swig_go_0) {
  cv::string *arg1 = 0 ;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  
  cv::setOpenGlContext((std::string const &)*arg1);
  
}


void _wrap_updateWindow_cv_dbcbba478e71899d(_gostring_ _swig_go_0) {
  cv::string *arg1 = 0 ;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  
  cv::updateWindow((std::string const &)*arg1);
  
}


void _wrap_pointCloudShow__SWIG_0_cv_dbcbba478e71899d(_gostring_ _swig_go_0, cv::GlCamera *_swig_go_1, cv::GlArrays *_swig_go_2) {
  cv::string *arg1 = 0 ;
  cv::GlCamera *arg2 = 0 ;
  cv::GlArrays *arg3 = 0 ;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  arg2 = *(cv::GlCamera **)&_swig_go_1; 
  arg3 = *(cv::GlArrays **)&_swig_go_2; 
  
  cv::pointCloudShow((std::string const &)*arg1,(cv::GlCamera const &)*arg2,(cv::GlArrays const &)*arg3);
  
}


void _wrap_pointCloudShow__SWIG_1_cv_dbcbba478e71899d(_gostring_ _swig_go_0, cv::GlCamera *_swig_go_1, cv::_InputArray *_swig_go_2, cv::_InputArray *_swig_go_3) {
  cv::string *arg1 = 0 ;
  cv::GlCamera *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  cv::_InputArray *arg4 = 0 ;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  arg2 = *(cv::GlCamera **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  
  cv::pointCloudShow((std::string const &)*arg1,(cv::GlCamera const &)*arg2,(cv::_InputArray const &)*arg3,(cv::_InputArray const &)*arg4);
  
}


void _wrap_pointCloudShow__SWIG_2_cv_dbcbba478e71899d(_gostring_ _swig_go_0, cv::GlCamera *_swig_go_1, cv::_InputArray *_swig_go_2) {
  cv::string *arg1 = 0 ;
  cv::GlCamera *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  arg2 = *(cv::GlCamera **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  cv::pointCloudShow((std::string const &)*arg1,(cv::GlCamera const &)*arg2,(cv::_InputArray const &)*arg3);
  
}


CvFont *_wrap_fontQt__SWIG_0_cv_dbcbba478e71899d(_gostring_ _swig_go_0, intgo _swig_go_1, cv::Scalar_< double > *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4, intgo _swig_go_5) {
  cv::string *arg1 = 0 ;
  int arg2 ;
  SwigValueWrapper< cv::Scalar_< double > > arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  cv::Scalar *argp3 ;
  CvFont result;
  CvFont *_swig_go_result;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  arg2 = (int)_swig_go_1; 
  
  argp3 = (cv::Scalar *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Scalar");
  }
  arg3 = (cv::Scalar)*argp3;
  
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  result = cv::fontQt((std::string const &)*arg1,arg2,arg3,arg4,arg5,arg6);
  *(CvFont **)&_swig_go_result = new CvFont(result); 
  return _swig_go_result;
}


CvFont *_wrap_fontQt__SWIG_1_cv_dbcbba478e71899d(_gostring_ _swig_go_0, intgo _swig_go_1, cv::Scalar_< double > *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  cv::string *arg1 = 0 ;
  int arg2 ;
  SwigValueWrapper< cv::Scalar_< double > > arg3 ;
  int arg4 ;
  int arg5 ;
  cv::Scalar *argp3 ;
  CvFont result;
  CvFont *_swig_go_result;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  arg2 = (int)_swig_go_1; 
  
  argp3 = (cv::Scalar *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Scalar");
  }
  arg3 = (cv::Scalar)*argp3;
  
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  result = cv::fontQt((std::string const &)*arg1,arg2,arg3,arg4,arg5);
  *(CvFont **)&_swig_go_result = new CvFont(result); 
  return _swig_go_result;
}


CvFont *_wrap_fontQt__SWIG_2_cv_dbcbba478e71899d(_gostring_ _swig_go_0, intgo _swig_go_1, cv::Scalar_< double > *_swig_go_2, intgo _swig_go_3) {
  cv::string *arg1 = 0 ;
  int arg2 ;
  SwigValueWrapper< cv::Scalar_< double > > arg3 ;
  int arg4 ;
  cv::Scalar *argp3 ;
  CvFont result;
  CvFont *_swig_go_result;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  arg2 = (int)_swig_go_1; 
  
  argp3 = (cv::Scalar *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Scalar");
  }
  arg3 = (cv::Scalar)*argp3;
  
  arg4 = (int)_swig_go_3; 
  
  result = cv::fontQt((std::string const &)*arg1,arg2,arg3,arg4);
  *(CvFont **)&_swig_go_result = new CvFont(result); 
  return _swig_go_result;
}


CvFont *_wrap_fontQt__SWIG_3_cv_dbcbba478e71899d(_gostring_ _swig_go_0, intgo _swig_go_1, cv::Scalar_< double > *_swig_go_2) {
  cv::string *arg1 = 0 ;
  int arg2 ;
  SwigValueWrapper< cv::Scalar_< double > > arg3 ;
  cv::Scalar *argp3 ;
  CvFont result;
  CvFont *_swig_go_result;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  arg2 = (int)_swig_go_1; 
  
  argp3 = (cv::Scalar *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Scalar");
  }
  arg3 = (cv::Scalar)*argp3;
  
  
  result = cv::fontQt((std::string const &)*arg1,arg2,arg3);
  *(CvFont **)&_swig_go_result = new CvFont(result); 
  return _swig_go_result;
}


CvFont *_wrap_fontQt__SWIG_4_cv_dbcbba478e71899d(_gostring_ _swig_go_0, intgo _swig_go_1) {
  cv::string *arg1 = 0 ;
  int arg2 ;
  CvFont result;
  CvFont *_swig_go_result;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  arg2 = (int)_swig_go_1; 
  
  result = cv::fontQt((std::string const &)*arg1,arg2);
  *(CvFont **)&_swig_go_result = new CvFont(result); 
  return _swig_go_result;
}


CvFont *_wrap_fontQt__SWIG_5_cv_dbcbba478e71899d(_gostring_ _swig_go_0) {
  cv::string *arg1 = 0 ;
  CvFont result;
  CvFont *_swig_go_result;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  
  result = cv::fontQt((std::string const &)*arg1);
  *(CvFont **)&_swig_go_result = new CvFont(result); 
  return _swig_go_result;
}


void _wrap_addText_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, _gostring_ _swig_go_1, cv::Point_< int > *_swig_go_2, CvFont *_swig_go_3) {
  cv::Mat *arg1 = 0 ;
  cv::string *arg2 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg3 ;
  CvFont arg4 ;
  cv::Point *argp3 ;
  CvFont *argp4 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  
  cv::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  argp3 = (cv::Point *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg3 = (cv::Point)*argp3;
  
  
  argp4 = (CvFont *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null CvFont");
  }
  arg4 = (CvFont)*argp4;
  
  
  cv::addText((cv::Mat const &)*arg1,(std::string const &)*arg2,arg3,arg4);
  
}


void _wrap_displayOverlay__SWIG_0_cv_dbcbba478e71899d(_gostring_ _swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  cv::string *arg1 = 0 ;
  cv::string *arg2 = 0 ;
  int arg3 ;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  
  cv::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  arg3 = (int)_swig_go_2; 
  
  cv::displayOverlay((std::string const &)*arg1,(std::string const &)*arg2,arg3);
  
}


void _wrap_displayOverlay__SWIG_1_cv_dbcbba478e71899d(_gostring_ _swig_go_0, _gostring_ _swig_go_1) {
  cv::string *arg1 = 0 ;
  cv::string *arg2 = 0 ;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  
  cv::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  cv::displayOverlay((std::string const &)*arg1,(std::string const &)*arg2);
  
}


void _wrap_displayStatusBar__SWIG_0_cv_dbcbba478e71899d(_gostring_ _swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  cv::string *arg1 = 0 ;
  cv::string *arg2 = 0 ;
  int arg3 ;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  
  cv::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  arg3 = (int)_swig_go_2; 
  
  cv::displayStatusBar((std::string const &)*arg1,(std::string const &)*arg2,arg3);
  
}


void _wrap_displayStatusBar__SWIG_1_cv_dbcbba478e71899d(_gostring_ _swig_go_0, _gostring_ _swig_go_1) {
  cv::string *arg1 = 0 ;
  cv::string *arg2 = 0 ;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  
  cv::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  cv::displayStatusBar((std::string const &)*arg1,(std::string const &)*arg2);
  
}


void _wrap_saveWindowParameters_cv_dbcbba478e71899d(_gostring_ _swig_go_0) {
  cv::string *arg1 = 0 ;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  
  cv::saveWindowParameters((std::string const &)*arg1);
  
}


void _wrap_loadWindowParameters_cv_dbcbba478e71899d(_gostring_ _swig_go_0) {
  cv::string *arg1 = 0 ;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  
  cv::loadWindowParameters((std::string const &)*arg1);
  
}


intgo _wrap_startLoop_cv_dbcbba478e71899d(void* _swig_go_0, intgo _swig_go_1, _gostring_* _swig_go_2) {
  int (*arg1)(int,char *[]) = (int (*)(int,char *[])) 0 ;
  int arg2 ;
  char **arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(int (**)(int,char *[]))&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(char ***)&_swig_go_2; 
  
  result = (int)cv::startLoop(arg1,arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_stopLoop_cv_dbcbba478e71899d() {
  cv::stopLoop();
  
}


intgo _wrap_createButton__SWIG_0_cv_dbcbba478e71899d(_gostring_ _swig_go_0, void** _swig_go_1, void *_swig_go_2, intgo _swig_go_3, bool _swig_go_4) {
  cv::string *arg1 = 0 ;
  cv::ButtonCallback arg2 = (cv::ButtonCallback) 0 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  bool arg5 ;
  int result;
  intgo _swig_go_result;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  arg2 = *(cv::ButtonCallback *)&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (bool)_swig_go_4; 
  
  result = (int)cv::createButton((std::string const &)*arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_createButton__SWIG_1_cv_dbcbba478e71899d(_gostring_ _swig_go_0, void** _swig_go_1, void *_swig_go_2, intgo _swig_go_3) {
  cv::string *arg1 = 0 ;
  cv::ButtonCallback arg2 = (cv::ButtonCallback) 0 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  int result;
  intgo _swig_go_result;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  arg2 = *(cv::ButtonCallback *)&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = (int)cv::createButton((std::string const &)*arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_createButton__SWIG_2_cv_dbcbba478e71899d(_gostring_ _swig_go_0, void** _swig_go_1, void *_swig_go_2) {
  cv::string *arg1 = 0 ;
  cv::ButtonCallback arg2 = (cv::ButtonCallback) 0 ;
  void *arg3 = (void *) 0 ;
  int result;
  intgo _swig_go_result;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  arg2 = *(cv::ButtonCallback *)&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  
  result = (int)cv::createButton((std::string const &)*arg1,arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_createButton__SWIG_3_cv_dbcbba478e71899d(_gostring_ _swig_go_0, void** _swig_go_1) {
  cv::string *arg1 = 0 ;
  cv::ButtonCallback arg2 = (cv::ButtonCallback) 0 ;
  int result;
  intgo _swig_go_result;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  arg2 = *(cv::ButtonCallback *)&_swig_go_1; 
  
  result = (int)cv::createButton((std::string const &)*arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_IMREAD_UNCHANGED_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::IMREAD_UNCHANGED;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_IMREAD_GRAYSCALE_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::IMREAD_GRAYSCALE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_IMREAD_COLOR_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::IMREAD_COLOR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_IMREAD_ANYDEPTH_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::IMREAD_ANYDEPTH;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_IMREAD_ANYCOLOR_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::IMREAD_ANYCOLOR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_IMWRITE_JPEG_QUALITY_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::IMWRITE_JPEG_QUALITY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_IMWRITE_PNG_COMPRESSION_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::IMWRITE_PNG_COMPRESSION;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_IMWRITE_PNG_STRATEGY_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::IMWRITE_PNG_STRATEGY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_IMWRITE_PNG_BILEVEL_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::IMWRITE_PNG_BILEVEL;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_IMWRITE_PNG_STRATEGY_DEFAULT_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::IMWRITE_PNG_STRATEGY_DEFAULT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_IMWRITE_PNG_STRATEGY_FILTERED_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::IMWRITE_PNG_STRATEGY_FILTERED;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_IMWRITE_PNG_STRATEGY_HUFFMAN_ONLY_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::IMWRITE_PNG_STRATEGY_HUFFMAN_ONLY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_IMWRITE_PNG_STRATEGY_RLE_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::IMWRITE_PNG_STRATEGY_RLE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_IMWRITE_PNG_STRATEGY_FIXED_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::IMWRITE_PNG_STRATEGY_FIXED;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_IMWRITE_PXM_BINARY_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::IMWRITE_PXM_BINARY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


cv::Mat *_wrap_imread__SWIG_0_cv_dbcbba478e71899d(_gostring_ _swig_go_0, intgo _swig_go_1) {
  cv::string *arg1 = 0 ;
  int arg2 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  arg2 = (int)_swig_go_1; 
  
  result = cv::imread((std::string const &)*arg1,arg2);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


cv::Mat *_wrap_imread__SWIG_1_cv_dbcbba478e71899d(_gostring_ _swig_go_0) {
  cv::string *arg1 = 0 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  
  result = cv::imread((std::string const &)*arg1);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


bool _wrap_imwrite__SWIG_0_cv_dbcbba478e71899d(_gostring_ _swig_go_0, cv::_InputArray *_swig_go_1, std::vector< int > *_swig_go_2) {
  cv::string *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  std::vector< int > *arg3 = 0 ;
  bool result;
  bool _swig_go_result;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(std::vector< int > **)&_swig_go_2; 
  
  result = (bool)cv::imwrite((std::string const &)*arg1,(cv::_InputArray const &)*arg2,(std::vector< int > const &)*arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_imwrite__SWIG_1_cv_dbcbba478e71899d(_gostring_ _swig_go_0, cv::_InputArray *_swig_go_1) {
  cv::string *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  
  result = (bool)cv::imwrite((std::string const &)*arg1,(cv::_InputArray const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


cv::Mat *_wrap_imdecode__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, intgo _swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  int arg2 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = cv::imdecode((cv::_InputArray const &)*arg1,arg2);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


cv::Mat *_wrap_imdecode__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, intgo _swig_go_1, cv::Mat *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  int arg2 ;
  cv::Mat *arg3 = (cv::Mat *) 0 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::Mat **)&_swig_go_2; 
  
  result = cv::imdecode((cv::_InputArray const &)*arg1,arg2,arg3);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


bool _wrap_imencode__SWIG_0_cv_dbcbba478e71899d(_gostring_ _swig_go_0, cv::_InputArray *_swig_go_1, std::vector< unsigned char > *_swig_go_2, std::vector< int > *_swig_go_3) {
  cv::string *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  std::vector< uchar > *arg3 = 0 ;
  std::vector< int > *arg4 = 0 ;
  bool result;
  bool _swig_go_result;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(std::vector< uchar > **)&_swig_go_2; 
  arg4 = *(std::vector< int > **)&_swig_go_3; 
  
  result = (bool)cv::imencode((std::string const &)*arg1,(cv::_InputArray const &)*arg2,*arg3,(std::vector< int > const &)*arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_imencode__SWIG_1_cv_dbcbba478e71899d(_gostring_ _swig_go_0, cv::_InputArray *_swig_go_1, std::vector< unsigned char > *_swig_go_2) {
  cv::string *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  std::vector< uchar > *arg3 = 0 ;
  bool result;
  bool _swig_go_result;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(std::vector< uchar > **)&_swig_go_2; 
  
  result = (bool)cv::imencode((std::string const &)*arg1,(cv::_InputArray const &)*arg2,*arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


cv::VideoCapture *_wrap_new_VideoCapture__SWIG_0_cv_dbcbba478e71899d() {
  cv::VideoCapture *result = 0 ;
  cv::VideoCapture *_swig_go_result;
  
  
  result = (cv::VideoCapture *)new cv::VideoCapture();
  *(cv::VideoCapture **)&_swig_go_result = (cv::VideoCapture *)result; 
  return _swig_go_result;
}


cv::VideoCapture *_wrap_new_VideoCapture__SWIG_1_cv_dbcbba478e71899d(_gostring_ _swig_go_0) {
  cv::string *arg1 = 0 ;
  cv::VideoCapture *result = 0 ;
  cv::VideoCapture *_swig_go_result;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  
  result = (cv::VideoCapture *)new cv::VideoCapture((cv::string const &)*arg1);
  *(cv::VideoCapture **)&_swig_go_result = (cv::VideoCapture *)result; 
  return _swig_go_result;
}


cv::VideoCapture *_wrap_new_VideoCapture__SWIG_2_cv_dbcbba478e71899d(intgo _swig_go_0) {
  int arg1 ;
  cv::VideoCapture *result = 0 ;
  cv::VideoCapture *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (cv::VideoCapture *)new cv::VideoCapture(arg1);
  *(cv::VideoCapture **)&_swig_go_result = (cv::VideoCapture *)result; 
  return _swig_go_result;
}


void _wrap_delete_VideoCapture_cv_dbcbba478e71899d(cv::VideoCapture *_swig_go_0) {
  cv::VideoCapture *arg1 = (cv::VideoCapture *) 0 ;
  
  arg1 = *(cv::VideoCapture **)&_swig_go_0; 
  
  delete arg1;
  
}


bool _wrap_VideoCapture_open__SWIG_0_cv_dbcbba478e71899d(cv::VideoCapture *_swig_go_0, _gostring_ _swig_go_1) {
  cv::VideoCapture *arg1 = (cv::VideoCapture *) 0 ;
  cv::string *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::VideoCapture **)&_swig_go_0; 
  
  cv::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  result = (bool)(arg1)->open((cv::string const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_VideoCapture_open__SWIG_1_cv_dbcbba478e71899d(cv::VideoCapture *_swig_go_0, intgo _swig_go_1) {
  cv::VideoCapture *arg1 = (cv::VideoCapture *) 0 ;
  int arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::VideoCapture **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (bool)(arg1)->open(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_VideoCapture_isOpened_cv_dbcbba478e71899d(cv::VideoCapture *_swig_go_0) {
  cv::VideoCapture *arg1 = (cv::VideoCapture *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::VideoCapture **)&_swig_go_0; 
  
  result = (bool)((cv::VideoCapture const *)arg1)->isOpened();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_VideoCapture_release_cv_dbcbba478e71899d(cv::VideoCapture *_swig_go_0) {
  cv::VideoCapture *arg1 = (cv::VideoCapture *) 0 ;
  
  arg1 = *(cv::VideoCapture **)&_swig_go_0; 
  
  (arg1)->release();
  
}


bool _wrap_VideoCapture_grab_cv_dbcbba478e71899d(cv::VideoCapture *_swig_go_0) {
  cv::VideoCapture *arg1 = (cv::VideoCapture *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::VideoCapture **)&_swig_go_0; 
  
  result = (bool)(arg1)->grab();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_VideoCapture_retrieve__SWIG_0_cv_dbcbba478e71899d(cv::VideoCapture *_swig_go_0, cv::Mat *_swig_go_1, intgo _swig_go_2) {
  cv::VideoCapture *arg1 = (cv::VideoCapture *) 0 ;
  cv::Mat *arg2 = 0 ;
  int arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::VideoCapture **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (bool)(arg1)->retrieve(*arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_VideoCapture_retrieve__SWIG_1_cv_dbcbba478e71899d(cv::VideoCapture *_swig_go_0, cv::Mat *_swig_go_1) {
  cv::VideoCapture *arg1 = (cv::VideoCapture *) 0 ;
  cv::Mat *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::VideoCapture **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  
  result = (bool)(arg1)->retrieve(*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_VideoCapture_read_cv_dbcbba478e71899d(cv::VideoCapture *_swig_go_0, cv::Mat *_swig_go_1) {
  cv::VideoCapture *arg1 = (cv::VideoCapture *) 0 ;
  cv::Mat *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::VideoCapture **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  
  result = (bool)(arg1)->read(*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_VideoCapture_set_cv_dbcbba478e71899d(cv::VideoCapture *_swig_go_0, intgo _swig_go_1, double _swig_go_2) {
  cv::VideoCapture *arg1 = (cv::VideoCapture *) 0 ;
  int arg2 ;
  double arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::VideoCapture **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  result = (bool)(arg1)->set(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_VideoCapture_get_cv_dbcbba478e71899d(cv::VideoCapture *_swig_go_0, intgo _swig_go_1) {
  cv::VideoCapture *arg1 = (cv::VideoCapture *) 0 ;
  int arg2 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::VideoCapture **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (double)(arg1)->get(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


cv::VideoWriter *_wrap_new_VideoWriter__SWIG_0_cv_dbcbba478e71899d() {
  cv::VideoWriter *result = 0 ;
  cv::VideoWriter *_swig_go_result;
  
  
  result = (cv::VideoWriter *)new cv::VideoWriter();
  *(cv::VideoWriter **)&_swig_go_result = (cv::VideoWriter *)result; 
  return _swig_go_result;
}


cv::VideoWriter *_wrap_new_VideoWriter__SWIG_1_cv_dbcbba478e71899d(_gostring_ _swig_go_0, intgo _swig_go_1, double _swig_go_2, cv::Size_< int > *_swig_go_3, bool _swig_go_4) {
  cv::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  SwigValueWrapper< cv::Size_< int > > arg4 ;
  bool arg5 ;
  cv::Size *argp4 ;
  cv::VideoWriter *result = 0 ;
  cv::VideoWriter *_swig_go_result;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  arg2 = (int)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  argp4 = (cv::Size *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg4 = (cv::Size)*argp4;
  
  arg5 = (bool)_swig_go_4; 
  
  result = (cv::VideoWriter *)new cv::VideoWriter((cv::string const &)*arg1,arg2,arg3,arg4,arg5);
  *(cv::VideoWriter **)&_swig_go_result = (cv::VideoWriter *)result; 
  return _swig_go_result;
}


cv::VideoWriter *_wrap_new_VideoWriter__SWIG_2_cv_dbcbba478e71899d(_gostring_ _swig_go_0, intgo _swig_go_1, double _swig_go_2, cv::Size_< int > *_swig_go_3) {
  cv::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  SwigValueWrapper< cv::Size_< int > > arg4 ;
  cv::Size *argp4 ;
  cv::VideoWriter *result = 0 ;
  cv::VideoWriter *_swig_go_result;
  
  
  cv::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  arg2 = (int)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  argp4 = (cv::Size *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg4 = (cv::Size)*argp4;
  
  
  result = (cv::VideoWriter *)new cv::VideoWriter((cv::string const &)*arg1,arg2,arg3,arg4);
  *(cv::VideoWriter **)&_swig_go_result = (cv::VideoWriter *)result; 
  return _swig_go_result;
}


void _wrap_delete_VideoWriter_cv_dbcbba478e71899d(cv::VideoWriter *_swig_go_0) {
  cv::VideoWriter *arg1 = (cv::VideoWriter *) 0 ;
  
  arg1 = *(cv::VideoWriter **)&_swig_go_0; 
  
  delete arg1;
  
}


bool _wrap_VideoWriter_open__SWIG_0_cv_dbcbba478e71899d(cv::VideoWriter *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, double _swig_go_3, cv::Size_< int > *_swig_go_4, bool _swig_go_5) {
  cv::VideoWriter *arg1 = (cv::VideoWriter *) 0 ;
  cv::string *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  SwigValueWrapper< cv::Size_< int > > arg5 ;
  bool arg6 ;
  cv::Size *argp5 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::VideoWriter **)&_swig_go_0; 
  
  cv::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  arg3 = (int)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  argp5 = (cv::Size *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg5 = (cv::Size)*argp5;
  
  arg6 = (bool)_swig_go_5; 
  
  result = (bool)(arg1)->open((cv::string const &)*arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_VideoWriter_open__SWIG_1_cv_dbcbba478e71899d(cv::VideoWriter *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, double _swig_go_3, cv::Size_< int > *_swig_go_4) {
  cv::VideoWriter *arg1 = (cv::VideoWriter *) 0 ;
  cv::string *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  SwigValueWrapper< cv::Size_< int > > arg5 ;
  cv::Size *argp5 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::VideoWriter **)&_swig_go_0; 
  
  cv::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  arg3 = (int)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  argp5 = (cv::Size *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg5 = (cv::Size)*argp5;
  
  
  result = (bool)(arg1)->open((cv::string const &)*arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_VideoWriter_isOpened_cv_dbcbba478e71899d(cv::VideoWriter *_swig_go_0) {
  cv::VideoWriter *arg1 = (cv::VideoWriter *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::VideoWriter **)&_swig_go_0; 
  
  result = (bool)((cv::VideoWriter const *)arg1)->isOpened();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_VideoWriter_release_cv_dbcbba478e71899d(cv::VideoWriter *_swig_go_0) {
  cv::VideoWriter *arg1 = (cv::VideoWriter *) 0 ;
  
  arg1 = *(cv::VideoWriter **)&_swig_go_0; 
  
  (arg1)->release();
  
}


void _wrap_VideoWriter_write_cv_dbcbba478e71899d(cv::VideoWriter *_swig_go_0, cv::Mat *_swig_go_1) {
  cv::VideoWriter *arg1 = (cv::VideoWriter *) 0 ;
  cv::Mat *arg2 = 0 ;
  
  arg1 = *(cv::VideoWriter **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  
  (arg1)->write((cv::Mat const &)*arg2);
  
}


intgo _wrap_BORDER_REPLICATE_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::BORDER_REPLICATE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BORDER_CONSTANT_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::BORDER_CONSTANT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BORDER_REFLECT_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::BORDER_REFLECT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BORDER_WRAP_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::BORDER_WRAP;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BORDER_REFLECT_101_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::BORDER_REFLECT_101;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BORDER_REFLECT101_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::BORDER_REFLECT101;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BORDER_TRANSPARENT_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::BORDER_TRANSPARENT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BORDER_DEFAULT_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::BORDER_DEFAULT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_BORDER_ISOLATED_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::BORDER_ISOLATED;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_borderInterpolate_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)cv::borderInterpolate(arg1,arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_BaseRowFilter_cv_dbcbba478e71899d(cv::BaseRowFilter *_swig_go_0) {
  cv::BaseRowFilter *arg1 = (cv::BaseRowFilter *) 0 ;
  
  arg1 = *(cv::BaseRowFilter **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_BaseRowFilter_ksize_set_cv_dbcbba478e71899d(cv::BaseRowFilter *_swig_go_0, intgo _swig_go_1) {
  cv::BaseRowFilter *arg1 = (cv::BaseRowFilter *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::BaseRowFilter **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->ksize = arg2;
  
}


intgo _wrap_BaseRowFilter_ksize_get_cv_dbcbba478e71899d(cv::BaseRowFilter *_swig_go_0) {
  cv::BaseRowFilter *arg1 = (cv::BaseRowFilter *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::BaseRowFilter **)&_swig_go_0; 
  
  result = (int) ((arg1)->ksize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_BaseRowFilter_anchor_set_cv_dbcbba478e71899d(cv::BaseRowFilter *_swig_go_0, intgo _swig_go_1) {
  cv::BaseRowFilter *arg1 = (cv::BaseRowFilter *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::BaseRowFilter **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->anchor = arg2;
  
}


intgo _wrap_BaseRowFilter_anchor_get_cv_dbcbba478e71899d(cv::BaseRowFilter *_swig_go_0) {
  cv::BaseRowFilter *arg1 = (cv::BaseRowFilter *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::BaseRowFilter **)&_swig_go_0; 
  
  result = (int) ((arg1)->anchor);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_BaseColumnFilter_cv_dbcbba478e71899d(cv::BaseColumnFilter *_swig_go_0) {
  cv::BaseColumnFilter *arg1 = (cv::BaseColumnFilter *) 0 ;
  
  arg1 = *(cv::BaseColumnFilter **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_BaseColumnFilter_reset_cv_dbcbba478e71899d(cv::BaseColumnFilter *_swig_go_0) {
  cv::BaseColumnFilter *arg1 = (cv::BaseColumnFilter *) 0 ;
  
  arg1 = *(cv::BaseColumnFilter **)&_swig_go_0; 
  
  (arg1)->reset();
  
}


void _wrap_BaseColumnFilter_ksize_set_cv_dbcbba478e71899d(cv::BaseColumnFilter *_swig_go_0, intgo _swig_go_1) {
  cv::BaseColumnFilter *arg1 = (cv::BaseColumnFilter *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::BaseColumnFilter **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->ksize = arg2;
  
}


intgo _wrap_BaseColumnFilter_ksize_get_cv_dbcbba478e71899d(cv::BaseColumnFilter *_swig_go_0) {
  cv::BaseColumnFilter *arg1 = (cv::BaseColumnFilter *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::BaseColumnFilter **)&_swig_go_0; 
  
  result = (int) ((arg1)->ksize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_BaseColumnFilter_anchor_set_cv_dbcbba478e71899d(cv::BaseColumnFilter *_swig_go_0, intgo _swig_go_1) {
  cv::BaseColumnFilter *arg1 = (cv::BaseColumnFilter *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::BaseColumnFilter **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->anchor = arg2;
  
}


intgo _wrap_BaseColumnFilter_anchor_get_cv_dbcbba478e71899d(cv::BaseColumnFilter *_swig_go_0) {
  cv::BaseColumnFilter *arg1 = (cv::BaseColumnFilter *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::BaseColumnFilter **)&_swig_go_0; 
  
  result = (int) ((arg1)->anchor);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_BaseFilter_cv_dbcbba478e71899d(cv::BaseFilter *_swig_go_0) {
  cv::BaseFilter *arg1 = (cv::BaseFilter *) 0 ;
  
  arg1 = *(cv::BaseFilter **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_BaseFilter_reset_cv_dbcbba478e71899d(cv::BaseFilter *_swig_go_0) {
  cv::BaseFilter *arg1 = (cv::BaseFilter *) 0 ;
  
  arg1 = *(cv::BaseFilter **)&_swig_go_0; 
  
  (arg1)->reset();
  
}


void _wrap_BaseFilter_ksize_set_cv_dbcbba478e71899d(cv::BaseFilter *_swig_go_0, cv::Size_< int > *_swig_go_1) {
  cv::BaseFilter *arg1 = (cv::BaseFilter *) 0 ;
  cv::Size *arg2 = (cv::Size *) 0 ;
  
  arg1 = *(cv::BaseFilter **)&_swig_go_0; 
  arg2 = *(cv::Size **)&_swig_go_1; 
  
  if (arg1) (arg1)->ksize = *arg2;
  
}


cv::Size_< int > *_wrap_BaseFilter_ksize_get_cv_dbcbba478e71899d(cv::BaseFilter *_swig_go_0) {
  cv::BaseFilter *arg1 = (cv::BaseFilter *) 0 ;
  cv::Size *result = 0 ;
  cv::Size_< int > *_swig_go_result;
  
  arg1 = *(cv::BaseFilter **)&_swig_go_0; 
  
  result = (cv::Size *)& ((arg1)->ksize);
  *(cv::Size **)&_swig_go_result = (cv::Size *)result; 
  return _swig_go_result;
}


void _wrap_BaseFilter_anchor_set_cv_dbcbba478e71899d(cv::BaseFilter *_swig_go_0, cv::Point_< int > *_swig_go_1) {
  cv::BaseFilter *arg1 = (cv::BaseFilter *) 0 ;
  cv::Point *arg2 = (cv::Point *) 0 ;
  
  arg1 = *(cv::BaseFilter **)&_swig_go_0; 
  arg2 = *(cv::Point **)&_swig_go_1; 
  
  if (arg1) (arg1)->anchor = *arg2;
  
}


cv::Point_< int > *_wrap_BaseFilter_anchor_get_cv_dbcbba478e71899d(cv::BaseFilter *_swig_go_0) {
  cv::BaseFilter *arg1 = (cv::BaseFilter *) 0 ;
  cv::Point *result = 0 ;
  cv::Point_< int > *_swig_go_result;
  
  arg1 = *(cv::BaseFilter **)&_swig_go_0; 
  
  result = (cv::Point *)& ((arg1)->anchor);
  *(cv::Point **)&_swig_go_result = (cv::Point *)result; 
  return _swig_go_result;
}


cv::FilterEngine *_wrap_new_FilterEngine__SWIG_0_cv_dbcbba478e71899d() {
  cv::FilterEngine *result = 0 ;
  cv::FilterEngine *_swig_go_result;
  
  
  result = (cv::FilterEngine *)new cv::FilterEngine();
  *(cv::FilterEngine **)&_swig_go_result = (cv::FilterEngine *)result; 
  return _swig_go_result;
}


cv::FilterEngine *_wrap_new_FilterEngine__SWIG_1_cv_dbcbba478e71899d(cv::Ptr< cv::BaseFilter > *_swig_go_0, cv::Ptr< cv::BaseRowFilter > *_swig_go_1, cv::Ptr< cv::BaseColumnFilter > *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4, intgo _swig_go_5, intgo _swig_go_6, intgo _swig_go_7, cv::Scalar_< double > *_swig_go_8) {
  cv::Ptr< cv::BaseFilter > *arg1 = 0 ;
  cv::Ptr< cv::BaseRowFilter > *arg2 = 0 ;
  cv::Ptr< cv::BaseColumnFilter > *arg3 = 0 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  cv::Scalar *arg9 = 0 ;
  cv::FilterEngine *result = 0 ;
  cv::FilterEngine *_swig_go_result;
  
  arg1 = *(cv::Ptr< cv::BaseFilter > **)&_swig_go_0; 
  arg2 = *(cv::Ptr< cv::BaseRowFilter > **)&_swig_go_1; 
  arg3 = *(cv::Ptr< cv::BaseColumnFilter > **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  arg9 = *(cv::Scalar **)&_swig_go_8; 
  
  result = (cv::FilterEngine *)new cv::FilterEngine((cv::Ptr< cv::BaseFilter > const &)*arg1,(cv::Ptr< cv::BaseRowFilter > const &)*arg2,(cv::Ptr< cv::BaseColumnFilter > const &)*arg3,arg4,arg5,arg6,arg7,arg8,(cv::Scalar const &)*arg9);
  *(cv::FilterEngine **)&_swig_go_result = (cv::FilterEngine *)result; 
  return _swig_go_result;
}


cv::FilterEngine *_wrap_new_FilterEngine__SWIG_2_cv_dbcbba478e71899d(cv::Ptr< cv::BaseFilter > *_swig_go_0, cv::Ptr< cv::BaseRowFilter > *_swig_go_1, cv::Ptr< cv::BaseColumnFilter > *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4, intgo _swig_go_5, intgo _swig_go_6, intgo _swig_go_7) {
  cv::Ptr< cv::BaseFilter > *arg1 = 0 ;
  cv::Ptr< cv::BaseRowFilter > *arg2 = 0 ;
  cv::Ptr< cv::BaseColumnFilter > *arg3 = 0 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  cv::FilterEngine *result = 0 ;
  cv::FilterEngine *_swig_go_result;
  
  arg1 = *(cv::Ptr< cv::BaseFilter > **)&_swig_go_0; 
  arg2 = *(cv::Ptr< cv::BaseRowFilter > **)&_swig_go_1; 
  arg3 = *(cv::Ptr< cv::BaseColumnFilter > **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  
  result = (cv::FilterEngine *)new cv::FilterEngine((cv::Ptr< cv::BaseFilter > const &)*arg1,(cv::Ptr< cv::BaseRowFilter > const &)*arg2,(cv::Ptr< cv::BaseColumnFilter > const &)*arg3,arg4,arg5,arg6,arg7,arg8);
  *(cv::FilterEngine **)&_swig_go_result = (cv::FilterEngine *)result; 
  return _swig_go_result;
}


cv::FilterEngine *_wrap_new_FilterEngine__SWIG_3_cv_dbcbba478e71899d(cv::Ptr< cv::BaseFilter > *_swig_go_0, cv::Ptr< cv::BaseRowFilter > *_swig_go_1, cv::Ptr< cv::BaseColumnFilter > *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4, intgo _swig_go_5, intgo _swig_go_6) {
  cv::Ptr< cv::BaseFilter > *arg1 = 0 ;
  cv::Ptr< cv::BaseRowFilter > *arg2 = 0 ;
  cv::Ptr< cv::BaseColumnFilter > *arg3 = 0 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  cv::FilterEngine *result = 0 ;
  cv::FilterEngine *_swig_go_result;
  
  arg1 = *(cv::Ptr< cv::BaseFilter > **)&_swig_go_0; 
  arg2 = *(cv::Ptr< cv::BaseRowFilter > **)&_swig_go_1; 
  arg3 = *(cv::Ptr< cv::BaseColumnFilter > **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  
  result = (cv::FilterEngine *)new cv::FilterEngine((cv::Ptr< cv::BaseFilter > const &)*arg1,(cv::Ptr< cv::BaseRowFilter > const &)*arg2,(cv::Ptr< cv::BaseColumnFilter > const &)*arg3,arg4,arg5,arg6,arg7);
  *(cv::FilterEngine **)&_swig_go_result = (cv::FilterEngine *)result; 
  return _swig_go_result;
}


cv::FilterEngine *_wrap_new_FilterEngine__SWIG_4_cv_dbcbba478e71899d(cv::Ptr< cv::BaseFilter > *_swig_go_0, cv::Ptr< cv::BaseRowFilter > *_swig_go_1, cv::Ptr< cv::BaseColumnFilter > *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4, intgo _swig_go_5) {
  cv::Ptr< cv::BaseFilter > *arg1 = 0 ;
  cv::Ptr< cv::BaseRowFilter > *arg2 = 0 ;
  cv::Ptr< cv::BaseColumnFilter > *arg3 = 0 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  cv::FilterEngine *result = 0 ;
  cv::FilterEngine *_swig_go_result;
  
  arg1 = *(cv::Ptr< cv::BaseFilter > **)&_swig_go_0; 
  arg2 = *(cv::Ptr< cv::BaseRowFilter > **)&_swig_go_1; 
  arg3 = *(cv::Ptr< cv::BaseColumnFilter > **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  result = (cv::FilterEngine *)new cv::FilterEngine((cv::Ptr< cv::BaseFilter > const &)*arg1,(cv::Ptr< cv::BaseRowFilter > const &)*arg2,(cv::Ptr< cv::BaseColumnFilter > const &)*arg3,arg4,arg5,arg6);
  *(cv::FilterEngine **)&_swig_go_result = (cv::FilterEngine *)result; 
  return _swig_go_result;
}


void _wrap_delete_FilterEngine_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_FilterEngine_init__SWIG_0_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, cv::Ptr< cv::BaseFilter > *_swig_go_1, cv::Ptr< cv::BaseRowFilter > *_swig_go_2, cv::Ptr< cv::BaseColumnFilter > *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5, intgo _swig_go_6, intgo _swig_go_7, intgo _swig_go_8, cv::Scalar_< double > *_swig_go_9) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  cv::Ptr< cv::BaseFilter > *arg2 = 0 ;
  cv::Ptr< cv::BaseRowFilter > *arg3 = 0 ;
  cv::Ptr< cv::BaseColumnFilter > *arg4 = 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  cv::Scalar *arg10 = 0 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = *(cv::Ptr< cv::BaseFilter > **)&_swig_go_1; 
  arg3 = *(cv::Ptr< cv::BaseRowFilter > **)&_swig_go_2; 
  arg4 = *(cv::Ptr< cv::BaseColumnFilter > **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  arg9 = (int)_swig_go_8; 
  arg10 = *(cv::Scalar **)&_swig_go_9; 
  
  (arg1)->init((cv::Ptr< cv::BaseFilter > const &)*arg2,(cv::Ptr< cv::BaseRowFilter > const &)*arg3,(cv::Ptr< cv::BaseColumnFilter > const &)*arg4,arg5,arg6,arg7,arg8,arg9,(cv::Scalar const &)*arg10);
  
}


void _wrap_FilterEngine_init__SWIG_1_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, cv::Ptr< cv::BaseFilter > *_swig_go_1, cv::Ptr< cv::BaseRowFilter > *_swig_go_2, cv::Ptr< cv::BaseColumnFilter > *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5, intgo _swig_go_6, intgo _swig_go_7, intgo _swig_go_8) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  cv::Ptr< cv::BaseFilter > *arg2 = 0 ;
  cv::Ptr< cv::BaseRowFilter > *arg3 = 0 ;
  cv::Ptr< cv::BaseColumnFilter > *arg4 = 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  int arg9 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = *(cv::Ptr< cv::BaseFilter > **)&_swig_go_1; 
  arg3 = *(cv::Ptr< cv::BaseRowFilter > **)&_swig_go_2; 
  arg4 = *(cv::Ptr< cv::BaseColumnFilter > **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  arg9 = (int)_swig_go_8; 
  
  (arg1)->init((cv::Ptr< cv::BaseFilter > const &)*arg2,(cv::Ptr< cv::BaseRowFilter > const &)*arg3,(cv::Ptr< cv::BaseColumnFilter > const &)*arg4,arg5,arg6,arg7,arg8,arg9);
  
}


void _wrap_FilterEngine_init__SWIG_2_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, cv::Ptr< cv::BaseFilter > *_swig_go_1, cv::Ptr< cv::BaseRowFilter > *_swig_go_2, cv::Ptr< cv::BaseColumnFilter > *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5, intgo _swig_go_6, intgo _swig_go_7) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  cv::Ptr< cv::BaseFilter > *arg2 = 0 ;
  cv::Ptr< cv::BaseRowFilter > *arg3 = 0 ;
  cv::Ptr< cv::BaseColumnFilter > *arg4 = 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  int arg8 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = *(cv::Ptr< cv::BaseFilter > **)&_swig_go_1; 
  arg3 = *(cv::Ptr< cv::BaseRowFilter > **)&_swig_go_2; 
  arg4 = *(cv::Ptr< cv::BaseColumnFilter > **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  
  (arg1)->init((cv::Ptr< cv::BaseFilter > const &)*arg2,(cv::Ptr< cv::BaseRowFilter > const &)*arg3,(cv::Ptr< cv::BaseColumnFilter > const &)*arg4,arg5,arg6,arg7,arg8);
  
}


void _wrap_FilterEngine_init__SWIG_3_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, cv::Ptr< cv::BaseFilter > *_swig_go_1, cv::Ptr< cv::BaseRowFilter > *_swig_go_2, cv::Ptr< cv::BaseColumnFilter > *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5, intgo _swig_go_6) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  cv::Ptr< cv::BaseFilter > *arg2 = 0 ;
  cv::Ptr< cv::BaseRowFilter > *arg3 = 0 ;
  cv::Ptr< cv::BaseColumnFilter > *arg4 = 0 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = *(cv::Ptr< cv::BaseFilter > **)&_swig_go_1; 
  arg3 = *(cv::Ptr< cv::BaseRowFilter > **)&_swig_go_2; 
  arg4 = *(cv::Ptr< cv::BaseColumnFilter > **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  
  (arg1)->init((cv::Ptr< cv::BaseFilter > const &)*arg2,(cv::Ptr< cv::BaseRowFilter > const &)*arg3,(cv::Ptr< cv::BaseColumnFilter > const &)*arg4,arg5,arg6,arg7);
  
}


intgo _wrap_FilterEngine_start__SWIG_0_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, cv::Size_< int > *_swig_go_1, cv::Rect_< int > *_swig_go_2, intgo _swig_go_3) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  SwigValueWrapper< cv::Size_< int > > arg2 ;
  SwigValueWrapper< cv::Rect_< int > > arg3 ;
  int arg4 ;
  cv::Size *argp2 ;
  cv::Rect *argp3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  
  argp2 = (cv::Size *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg2 = (cv::Size)*argp2;
  
  
  argp3 = (cv::Rect *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Rect");
  }
  arg3 = (cv::Rect)*argp3;
  
  arg4 = (int)_swig_go_3; 
  
  result = (int)(arg1)->start(arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_FilterEngine_start__SWIG_1_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, cv::Size_< int > *_swig_go_1, cv::Rect_< int > *_swig_go_2) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  SwigValueWrapper< cv::Size_< int > > arg2 ;
  SwigValueWrapper< cv::Rect_< int > > arg3 ;
  cv::Size *argp2 ;
  cv::Rect *argp3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  
  argp2 = (cv::Size *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg2 = (cv::Size)*argp2;
  
  
  argp3 = (cv::Rect *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Rect");
  }
  arg3 = (cv::Rect)*argp3;
  
  
  result = (int)(arg1)->start(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_FilterEngine_start__SWIG_2_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, cv::Mat *_swig_go_1, cv::Rect_< int > *_swig_go_2, bool _swig_go_3, intgo _swig_go_4) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  cv::Mat *arg2 = 0 ;
  cv::Rect *arg3 = 0 ;
  bool arg4 ;
  int arg5 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(cv::Rect **)&_swig_go_2; 
  arg4 = (bool)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  result = (int)(arg1)->start((cv::Mat const &)*arg2,(cv::Rect const &)*arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_FilterEngine_start__SWIG_3_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, cv::Mat *_swig_go_1, cv::Rect_< int > *_swig_go_2, bool _swig_go_3) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  cv::Mat *arg2 = 0 ;
  cv::Rect *arg3 = 0 ;
  bool arg4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(cv::Rect **)&_swig_go_2; 
  arg4 = (bool)_swig_go_3; 
  
  result = (int)(arg1)->start((cv::Mat const &)*arg2,(cv::Rect const &)*arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_FilterEngine_start__SWIG_4_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, cv::Mat *_swig_go_1, cv::Rect_< int > *_swig_go_2) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  cv::Mat *arg2 = 0 ;
  cv::Rect *arg3 = 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(cv::Rect **)&_swig_go_2; 
  
  result = (int)(arg1)->start((cv::Mat const &)*arg2,(cv::Rect const &)*arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_FilterEngine_start__SWIG_5_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, cv::Mat *_swig_go_1) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  cv::Mat *arg2 = 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  
  result = (int)(arg1)->start((cv::Mat const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_FilterEngine_proceed_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, intgo _swig_go_3, _gostring_ _swig_go_4, intgo _swig_go_5) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  uchar *arg2 = (uchar *) 0 ;
  int arg3 ;
  int arg4 ;
  uchar *arg5 = (uchar *) 0 ;
  int arg6 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = (uchar *)_swig_go_1.p; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (uchar *)_swig_go_4.p; 
  arg6 = (int)_swig_go_5; 
  
  result = (int)(arg1)->proceed((uchar const *)arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_FilterEngine_apply__SWIG_0_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, cv::Mat *_swig_go_1, cv::Mat *_swig_go_2, cv::Rect_< int > *_swig_go_3, cv::Point_< int > *_swig_go_4, bool _swig_go_5) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  cv::Mat *arg2 = 0 ;
  cv::Mat *arg3 = 0 ;
  cv::Rect *arg4 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg5 ;
  bool arg6 ;
  cv::Point *argp5 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(cv::Mat **)&_swig_go_2; 
  arg4 = *(cv::Rect **)&_swig_go_3; 
  
  argp5 = (cv::Point *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg5 = (cv::Point)*argp5;
  
  arg6 = (bool)_swig_go_5; 
  
  (arg1)->apply((cv::Mat const &)*arg2,*arg3,(cv::Rect const &)*arg4,arg5,arg6);
  
}


void _wrap_FilterEngine_apply__SWIG_1_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, cv::Mat *_swig_go_1, cv::Mat *_swig_go_2, cv::Rect_< int > *_swig_go_3, cv::Point_< int > *_swig_go_4) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  cv::Mat *arg2 = 0 ;
  cv::Mat *arg3 = 0 ;
  cv::Rect *arg4 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg5 ;
  cv::Point *argp5 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(cv::Mat **)&_swig_go_2; 
  arg4 = *(cv::Rect **)&_swig_go_3; 
  
  argp5 = (cv::Point *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg5 = (cv::Point)*argp5;
  
  
  (arg1)->apply((cv::Mat const &)*arg2,*arg3,(cv::Rect const &)*arg4,arg5);
  
}


void _wrap_FilterEngine_apply__SWIG_2_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, cv::Mat *_swig_go_1, cv::Mat *_swig_go_2, cv::Rect_< int > *_swig_go_3) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  cv::Mat *arg2 = 0 ;
  cv::Mat *arg3 = 0 ;
  cv::Rect *arg4 = 0 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(cv::Mat **)&_swig_go_2; 
  arg4 = *(cv::Rect **)&_swig_go_3; 
  
  (arg1)->apply((cv::Mat const &)*arg2,*arg3,(cv::Rect const &)*arg4);
  
}


void _wrap_FilterEngine_apply__SWIG_3_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, cv::Mat *_swig_go_1, cv::Mat *_swig_go_2) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  cv::Mat *arg2 = 0 ;
  cv::Mat *arg3 = 0 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = *(cv::Mat **)&_swig_go_1; 
  arg3 = *(cv::Mat **)&_swig_go_2; 
  
  (arg1)->apply((cv::Mat const &)*arg2,*arg3);
  
}


bool _wrap_FilterEngine_isSeparable_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  
  result = (bool)((cv::FilterEngine const *)arg1)->isSeparable();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_FilterEngine_remainingInputRows_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  
  result = (int)((cv::FilterEngine const *)arg1)->remainingInputRows();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_FilterEngine_remainingOutputRows_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  
  result = (int)((cv::FilterEngine const *)arg1)->remainingOutputRows();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_FilterEngine_srcType_set_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, intgo _swig_go_1) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->srcType = arg2;
  
}


intgo _wrap_FilterEngine_srcType_get_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  
  result = (int) ((arg1)->srcType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_FilterEngine_dstType_set_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, intgo _swig_go_1) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->dstType = arg2;
  
}


intgo _wrap_FilterEngine_dstType_get_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  
  result = (int) ((arg1)->dstType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_FilterEngine_bufType_set_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, intgo _swig_go_1) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->bufType = arg2;
  
}


intgo _wrap_FilterEngine_bufType_get_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  
  result = (int) ((arg1)->bufType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_FilterEngine_ksize_set_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, cv::Size_< int > *_swig_go_1) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  cv::Size *arg2 = (cv::Size *) 0 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = *(cv::Size **)&_swig_go_1; 
  
  if (arg1) (arg1)->ksize = *arg2;
  
}


cv::Size_< int > *_wrap_FilterEngine_ksize_get_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  cv::Size *result = 0 ;
  cv::Size_< int > *_swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  
  result = (cv::Size *)& ((arg1)->ksize);
  *(cv::Size **)&_swig_go_result = (cv::Size *)result; 
  return _swig_go_result;
}


void _wrap_FilterEngine_anchor_set_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, cv::Point_< int > *_swig_go_1) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  cv::Point *arg2 = (cv::Point *) 0 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = *(cv::Point **)&_swig_go_1; 
  
  if (arg1) (arg1)->anchor = *arg2;
  
}


cv::Point_< int > *_wrap_FilterEngine_anchor_get_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  cv::Point *result = 0 ;
  cv::Point_< int > *_swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  
  result = (cv::Point *)& ((arg1)->anchor);
  *(cv::Point **)&_swig_go_result = (cv::Point *)result; 
  return _swig_go_result;
}


void _wrap_FilterEngine_maxWidth_set_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, intgo _swig_go_1) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->maxWidth = arg2;
  
}


intgo _wrap_FilterEngine_maxWidth_get_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  
  result = (int) ((arg1)->maxWidth);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_FilterEngine_wholeSize_set_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, cv::Size_< int > *_swig_go_1) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  cv::Size *arg2 = (cv::Size *) 0 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = *(cv::Size **)&_swig_go_1; 
  
  if (arg1) (arg1)->wholeSize = *arg2;
  
}


cv::Size_< int > *_wrap_FilterEngine_wholeSize_get_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  cv::Size *result = 0 ;
  cv::Size_< int > *_swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  
  result = (cv::Size *)& ((arg1)->wholeSize);
  *(cv::Size **)&_swig_go_result = (cv::Size *)result; 
  return _swig_go_result;
}


void _wrap_FilterEngine_roi_set_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, cv::Rect_< int > *_swig_go_1) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  cv::Rect *arg2 = (cv::Rect *) 0 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = *(cv::Rect **)&_swig_go_1; 
  
  if (arg1) (arg1)->roi = *arg2;
  
}


cv::Rect_< int > *_wrap_FilterEngine_roi_get_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  cv::Rect *result = 0 ;
  cv::Rect_< int > *_swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  
  result = (cv::Rect *)& ((arg1)->roi);
  *(cv::Rect **)&_swig_go_result = (cv::Rect *)result; 
  return _swig_go_result;
}


void _wrap_FilterEngine_dx1_set_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, intgo _swig_go_1) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->dx1 = arg2;
  
}


intgo _wrap_FilterEngine_dx1_get_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  
  result = (int) ((arg1)->dx1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_FilterEngine_dx2_set_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, intgo _swig_go_1) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->dx2 = arg2;
  
}


intgo _wrap_FilterEngine_dx2_get_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  
  result = (int) ((arg1)->dx2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_FilterEngine_rowBorderType_set_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, intgo _swig_go_1) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->rowBorderType = arg2;
  
}


intgo _wrap_FilterEngine_rowBorderType_get_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  
  result = (int) ((arg1)->rowBorderType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_FilterEngine_columnBorderType_set_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, intgo _swig_go_1) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->columnBorderType = arg2;
  
}


intgo _wrap_FilterEngine_columnBorderType_get_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  
  result = (int) ((arg1)->columnBorderType);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_FilterEngine_borderTab_set_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, std::vector< int > *_swig_go_1) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  std::vector< int > *arg2 = (std::vector< int > *) 0 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = *(std::vector< int > **)&_swig_go_1; 
  
  if (arg1) (arg1)->borderTab = *arg2;
  
}


std::vector< int > *_wrap_FilterEngine_borderTab_get_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  std::vector< int > *result = 0 ;
  std::vector< int > *_swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  
  result = (std::vector< int > *)& ((arg1)->borderTab);
  *(std::vector< int > **)&_swig_go_result = (std::vector< int > *)result; 
  return _swig_go_result;
}


void _wrap_FilterEngine_borderElemSize_set_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, intgo _swig_go_1) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->borderElemSize = arg2;
  
}


intgo _wrap_FilterEngine_borderElemSize_get_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  
  result = (int) ((arg1)->borderElemSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_FilterEngine_ringBuf_set_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, std::vector< unsigned char > *_swig_go_1) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  std::vector< uchar > *arg2 = (std::vector< uchar > *) 0 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = *(std::vector< uchar > **)&_swig_go_1; 
  
  if (arg1) (arg1)->ringBuf = *arg2;
  
}


std::vector< unsigned char > *_wrap_FilterEngine_ringBuf_get_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  std::vector< uchar > *result = 0 ;
  std::vector< unsigned char > *_swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  
  result = (std::vector< uchar > *)& ((arg1)->ringBuf);
  *(std::vector< uchar > **)&_swig_go_result = (std::vector< uchar > *)result; 
  return _swig_go_result;
}


void _wrap_FilterEngine_srcRow_set_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, std::vector< unsigned char > *_swig_go_1) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  std::vector< uchar > *arg2 = (std::vector< uchar > *) 0 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = *(std::vector< uchar > **)&_swig_go_1; 
  
  if (arg1) (arg1)->srcRow = *arg2;
  
}


std::vector< unsigned char > *_wrap_FilterEngine_srcRow_get_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  std::vector< uchar > *result = 0 ;
  std::vector< unsigned char > *_swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  
  result = (std::vector< uchar > *)& ((arg1)->srcRow);
  *(std::vector< uchar > **)&_swig_go_result = (std::vector< uchar > *)result; 
  return _swig_go_result;
}


void _wrap_FilterEngine_constBorderValue_set_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, std::vector< unsigned char > *_swig_go_1) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  std::vector< uchar > *arg2 = (std::vector< uchar > *) 0 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = *(std::vector< uchar > **)&_swig_go_1; 
  
  if (arg1) (arg1)->constBorderValue = *arg2;
  
}


std::vector< unsigned char > *_wrap_FilterEngine_constBorderValue_get_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  std::vector< uchar > *result = 0 ;
  std::vector< unsigned char > *_swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  
  result = (std::vector< uchar > *)& ((arg1)->constBorderValue);
  *(std::vector< uchar > **)&_swig_go_result = (std::vector< uchar > *)result; 
  return _swig_go_result;
}


void _wrap_FilterEngine_constBorderRow_set_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, std::vector< unsigned char > *_swig_go_1) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  std::vector< uchar > *arg2 = (std::vector< uchar > *) 0 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = *(std::vector< uchar > **)&_swig_go_1; 
  
  if (arg1) (arg1)->constBorderRow = *arg2;
  
}


std::vector< unsigned char > *_wrap_FilterEngine_constBorderRow_get_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  std::vector< uchar > *result = 0 ;
  std::vector< unsigned char > *_swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  
  result = (std::vector< uchar > *)& ((arg1)->constBorderRow);
  *(std::vector< uchar > **)&_swig_go_result = (std::vector< uchar > *)result; 
  return _swig_go_result;
}


void _wrap_FilterEngine_bufStep_set_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, intgo _swig_go_1) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->bufStep = arg2;
  
}


intgo _wrap_FilterEngine_bufStep_get_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  
  result = (int) ((arg1)->bufStep);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_FilterEngine_startY_set_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, intgo _swig_go_1) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->startY = arg2;
  
}


intgo _wrap_FilterEngine_startY_get_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  
  result = (int) ((arg1)->startY);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_FilterEngine_startY0_set_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, intgo _swig_go_1) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->startY0 = arg2;
  
}


intgo _wrap_FilterEngine_startY0_get_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  
  result = (int) ((arg1)->startY0);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_FilterEngine_endY_set_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, intgo _swig_go_1) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->endY = arg2;
  
}


intgo _wrap_FilterEngine_endY_get_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  
  result = (int) ((arg1)->endY);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_FilterEngine_rowCount_set_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, intgo _swig_go_1) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->rowCount = arg2;
  
}


intgo _wrap_FilterEngine_rowCount_get_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  
  result = (int) ((arg1)->rowCount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_FilterEngine_dstY_set_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, intgo _swig_go_1) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  int arg2 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->dstY = arg2;
  
}


intgo _wrap_FilterEngine_dstY_get_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  
  result = (int) ((arg1)->dstY);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_FilterEngine_rows_set_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, std::vector< unsigned char * > *_swig_go_1) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  std::vector< uchar * > *arg2 = (std::vector< uchar * > *) 0 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = *(std::vector< uchar * > **)&_swig_go_1; 
  
  if (arg1) (arg1)->rows = *arg2;
  
}


std::vector< unsigned char * > *_wrap_FilterEngine_rows_get_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  std::vector< uchar * > *result = 0 ;
  std::vector< unsigned char * > *_swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  
  result = (std::vector< uchar * > *)& ((arg1)->rows);
  *(std::vector< uchar * > **)&_swig_go_result = (std::vector< uchar * > *)result; 
  return _swig_go_result;
}


void _wrap_FilterEngine_filter2D_set_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, cv::Ptr< cv::BaseFilter > *_swig_go_1) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  cv::Ptr< cv::BaseFilter > *arg2 = (cv::Ptr< cv::BaseFilter > *) 0 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = *(cv::Ptr< cv::BaseFilter > **)&_swig_go_1; 
  
  if (arg1) (arg1)->filter2D = *arg2;
  
}


cv::Ptr< cv::BaseFilter > *_wrap_FilterEngine_filter2D_get_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  cv::Ptr< cv::BaseFilter > *result = 0 ;
  cv::Ptr< cv::BaseFilter > *_swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  
  result = (cv::Ptr< cv::BaseFilter > *)& ((arg1)->filter2D);
  *(cv::Ptr< cv::BaseFilter > **)&_swig_go_result = (cv::Ptr< cv::BaseFilter > *)result; 
  return _swig_go_result;
}


void _wrap_FilterEngine_rowFilter_set_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, cv::Ptr< cv::BaseRowFilter > *_swig_go_1) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  cv::Ptr< cv::BaseRowFilter > *arg2 = (cv::Ptr< cv::BaseRowFilter > *) 0 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = *(cv::Ptr< cv::BaseRowFilter > **)&_swig_go_1; 
  
  if (arg1) (arg1)->rowFilter = *arg2;
  
}


cv::Ptr< cv::BaseRowFilter > *_wrap_FilterEngine_rowFilter_get_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  cv::Ptr< cv::BaseRowFilter > *result = 0 ;
  cv::Ptr< cv::BaseRowFilter > *_swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  
  result = (cv::Ptr< cv::BaseRowFilter > *)& ((arg1)->rowFilter);
  *(cv::Ptr< cv::BaseRowFilter > **)&_swig_go_result = (cv::Ptr< cv::BaseRowFilter > *)result; 
  return _swig_go_result;
}


void _wrap_FilterEngine_columnFilter_set_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0, cv::Ptr< cv::BaseColumnFilter > *_swig_go_1) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  cv::Ptr< cv::BaseColumnFilter > *arg2 = (cv::Ptr< cv::BaseColumnFilter > *) 0 ;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  arg2 = *(cv::Ptr< cv::BaseColumnFilter > **)&_swig_go_1; 
  
  if (arg1) (arg1)->columnFilter = *arg2;
  
}


cv::Ptr< cv::BaseColumnFilter > *_wrap_FilterEngine_columnFilter_get_cv_dbcbba478e71899d(cv::FilterEngine *_swig_go_0) {
  cv::FilterEngine *arg1 = (cv::FilterEngine *) 0 ;
  cv::Ptr< cv::BaseColumnFilter > *result = 0 ;
  cv::Ptr< cv::BaseColumnFilter > *_swig_go_result;
  
  arg1 = *(cv::FilterEngine **)&_swig_go_0; 
  
  result = (cv::Ptr< cv::BaseColumnFilter > *)& ((arg1)->columnFilter);
  *(cv::Ptr< cv::BaseColumnFilter > **)&_swig_go_result = (cv::Ptr< cv::BaseColumnFilter > *)result; 
  return _swig_go_result;
}


intgo _wrap_KERNEL_GENERAL_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::KERNEL_GENERAL;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_KERNEL_SYMMETRICAL_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::KERNEL_SYMMETRICAL;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_KERNEL_ASYMMETRICAL_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::KERNEL_ASYMMETRICAL;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_KERNEL_SMOOTH_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::KERNEL_SMOOTH;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_KERNEL_INTEGER_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::KERNEL_INTEGER;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_getKernelType_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::Point_< int > *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg2 ;
  cv::Point *argp2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  argp2 = (cv::Point *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg2 = (cv::Point)*argp2;
  
  
  result = (int)cv::getKernelType((cv::_InputArray const &)*arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


cv::Ptr< cv::BaseRowFilter > *_wrap_getLinearRowFilter_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, cv::_InputArray *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  int arg1 ;
  int arg2 ;
  cv::_InputArray *arg3 = 0 ;
  int arg4 ;
  int arg5 ;
  SwigValueWrapper< cv::Ptr< cv::BaseRowFilter > > result;
  cv::Ptr< cv::BaseRowFilter > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  result = cv::getLinearRowFilter(arg1,arg2,(cv::_InputArray const &)*arg3,arg4,arg5);
  *(cv::Ptr< cv::BaseRowFilter > **)&_swig_go_result = new cv::Ptr< cv::BaseRowFilter >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::BaseColumnFilter > *_wrap_getLinearColumnFilter__SWIG_0_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, cv::_InputArray *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4, double _swig_go_5, intgo _swig_go_6) {
  int arg1 ;
  int arg2 ;
  cv::_InputArray *arg3 = 0 ;
  int arg4 ;
  int arg5 ;
  double arg6 ;
  int arg7 ;
  SwigValueWrapper< cv::Ptr< cv::BaseColumnFilter > > result;
  cv::Ptr< cv::BaseColumnFilter > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  
  result = cv::getLinearColumnFilter(arg1,arg2,(cv::_InputArray const &)*arg3,arg4,arg5,arg6,arg7);
  *(cv::Ptr< cv::BaseColumnFilter > **)&_swig_go_result = new cv::Ptr< cv::BaseColumnFilter >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::BaseColumnFilter > *_wrap_getLinearColumnFilter__SWIG_1_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, cv::_InputArray *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4, double _swig_go_5) {
  int arg1 ;
  int arg2 ;
  cv::_InputArray *arg3 = 0 ;
  int arg4 ;
  int arg5 ;
  double arg6 ;
  SwigValueWrapper< cv::Ptr< cv::BaseColumnFilter > > result;
  cv::Ptr< cv::BaseColumnFilter > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  
  result = cv::getLinearColumnFilter(arg1,arg2,(cv::_InputArray const &)*arg3,arg4,arg5,arg6);
  *(cv::Ptr< cv::BaseColumnFilter > **)&_swig_go_result = new cv::Ptr< cv::BaseColumnFilter >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::BaseColumnFilter > *_wrap_getLinearColumnFilter__SWIG_2_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, cv::_InputArray *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  int arg1 ;
  int arg2 ;
  cv::_InputArray *arg3 = 0 ;
  int arg4 ;
  int arg5 ;
  SwigValueWrapper< cv::Ptr< cv::BaseColumnFilter > > result;
  cv::Ptr< cv::BaseColumnFilter > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  result = cv::getLinearColumnFilter(arg1,arg2,(cv::_InputArray const &)*arg3,arg4,arg5);
  *(cv::Ptr< cv::BaseColumnFilter > **)&_swig_go_result = new cv::Ptr< cv::BaseColumnFilter >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::BaseFilter > *_wrap_getLinearFilter__SWIG_0_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, cv::_InputArray *_swig_go_2, cv::Point_< int > *_swig_go_3, double _swig_go_4, intgo _swig_go_5) {
  int arg1 ;
  int arg2 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg4 ;
  double arg5 ;
  int arg6 ;
  cv::Point *argp4 ;
  SwigValueWrapper< cv::Ptr< cv::BaseFilter > > result;
  cv::Ptr< cv::BaseFilter > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  argp4 = (cv::Point *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg4 = (cv::Point)*argp4;
  
  arg5 = (double)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  result = cv::getLinearFilter(arg1,arg2,(cv::_InputArray const &)*arg3,arg4,arg5,arg6);
  *(cv::Ptr< cv::BaseFilter > **)&_swig_go_result = new cv::Ptr< cv::BaseFilter >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::BaseFilter > *_wrap_getLinearFilter__SWIG_1_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, cv::_InputArray *_swig_go_2, cv::Point_< int > *_swig_go_3, double _swig_go_4) {
  int arg1 ;
  int arg2 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg4 ;
  double arg5 ;
  cv::Point *argp4 ;
  SwigValueWrapper< cv::Ptr< cv::BaseFilter > > result;
  cv::Ptr< cv::BaseFilter > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  argp4 = (cv::Point *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg4 = (cv::Point)*argp4;
  
  arg5 = (double)_swig_go_4; 
  
  result = cv::getLinearFilter(arg1,arg2,(cv::_InputArray const &)*arg3,arg4,arg5);
  *(cv::Ptr< cv::BaseFilter > **)&_swig_go_result = new cv::Ptr< cv::BaseFilter >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::BaseFilter > *_wrap_getLinearFilter__SWIG_2_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, cv::_InputArray *_swig_go_2, cv::Point_< int > *_swig_go_3) {
  int arg1 ;
  int arg2 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg4 ;
  cv::Point *argp4 ;
  SwigValueWrapper< cv::Ptr< cv::BaseFilter > > result;
  cv::Ptr< cv::BaseFilter > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  argp4 = (cv::Point *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg4 = (cv::Point)*argp4;
  
  
  result = cv::getLinearFilter(arg1,arg2,(cv::_InputArray const &)*arg3,arg4);
  *(cv::Ptr< cv::BaseFilter > **)&_swig_go_result = new cv::Ptr< cv::BaseFilter >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::BaseFilter > *_wrap_getLinearFilter__SWIG_3_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, cv::_InputArray *_swig_go_2) {
  int arg1 ;
  int arg2 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Ptr< cv::BaseFilter > > result;
  cv::Ptr< cv::BaseFilter > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  result = cv::getLinearFilter(arg1,arg2,(cv::_InputArray const &)*arg3);
  *(cv::Ptr< cv::BaseFilter > **)&_swig_go_result = new cv::Ptr< cv::BaseFilter >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::FilterEngine > *_wrap_createSeparableLinearFilter__SWIG_0_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, cv::_InputArray *_swig_go_2, cv::_InputArray *_swig_go_3, cv::Point_< int > *_swig_go_4, double _swig_go_5, intgo _swig_go_6, intgo _swig_go_7, cv::Scalar_< double > *_swig_go_8) {
  int arg1 ;
  int arg2 ;
  cv::_InputArray *arg3 = 0 ;
  cv::_InputArray *arg4 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg5 ;
  double arg6 ;
  int arg7 ;
  int arg8 ;
  cv::Scalar *arg9 = 0 ;
  cv::Point *argp5 ;
  SwigValueWrapper< cv::Ptr< cv::FilterEngine > > result;
  cv::Ptr< cv::FilterEngine > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  
  argp5 = (cv::Point *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg5 = (cv::Point)*argp5;
  
  arg6 = (double)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  arg9 = *(cv::Scalar **)&_swig_go_8; 
  
  result = cv::createSeparableLinearFilter(arg1,arg2,(cv::_InputArray const &)*arg3,(cv::_InputArray const &)*arg4,arg5,arg6,arg7,arg8,(cv::Scalar_< double > const &)*arg9);
  *(cv::Ptr< cv::FilterEngine > **)&_swig_go_result = new cv::Ptr< cv::FilterEngine >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::FilterEngine > *_wrap_createSeparableLinearFilter__SWIG_1_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, cv::_InputArray *_swig_go_2, cv::_InputArray *_swig_go_3, cv::Point_< int > *_swig_go_4, double _swig_go_5, intgo _swig_go_6, intgo _swig_go_7) {
  int arg1 ;
  int arg2 ;
  cv::_InputArray *arg3 = 0 ;
  cv::_InputArray *arg4 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg5 ;
  double arg6 ;
  int arg7 ;
  int arg8 ;
  cv::Point *argp5 ;
  SwigValueWrapper< cv::Ptr< cv::FilterEngine > > result;
  cv::Ptr< cv::FilterEngine > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  
  argp5 = (cv::Point *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg5 = (cv::Point)*argp5;
  
  arg6 = (double)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  
  result = cv::createSeparableLinearFilter(arg1,arg2,(cv::_InputArray const &)*arg3,(cv::_InputArray const &)*arg4,arg5,arg6,arg7,arg8);
  *(cv::Ptr< cv::FilterEngine > **)&_swig_go_result = new cv::Ptr< cv::FilterEngine >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::FilterEngine > *_wrap_createSeparableLinearFilter__SWIG_2_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, cv::_InputArray *_swig_go_2, cv::_InputArray *_swig_go_3, cv::Point_< int > *_swig_go_4, double _swig_go_5, intgo _swig_go_6) {
  int arg1 ;
  int arg2 ;
  cv::_InputArray *arg3 = 0 ;
  cv::_InputArray *arg4 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg5 ;
  double arg6 ;
  int arg7 ;
  cv::Point *argp5 ;
  SwigValueWrapper< cv::Ptr< cv::FilterEngine > > result;
  cv::Ptr< cv::FilterEngine > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  
  argp5 = (cv::Point *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg5 = (cv::Point)*argp5;
  
  arg6 = (double)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  
  result = cv::createSeparableLinearFilter(arg1,arg2,(cv::_InputArray const &)*arg3,(cv::_InputArray const &)*arg4,arg5,arg6,arg7);
  *(cv::Ptr< cv::FilterEngine > **)&_swig_go_result = new cv::Ptr< cv::FilterEngine >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::FilterEngine > *_wrap_createSeparableLinearFilter__SWIG_3_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, cv::_InputArray *_swig_go_2, cv::_InputArray *_swig_go_3, cv::Point_< int > *_swig_go_4, double _swig_go_5) {
  int arg1 ;
  int arg2 ;
  cv::_InputArray *arg3 = 0 ;
  cv::_InputArray *arg4 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg5 ;
  double arg6 ;
  cv::Point *argp5 ;
  SwigValueWrapper< cv::Ptr< cv::FilterEngine > > result;
  cv::Ptr< cv::FilterEngine > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  
  argp5 = (cv::Point *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg5 = (cv::Point)*argp5;
  
  arg6 = (double)_swig_go_5; 
  
  result = cv::createSeparableLinearFilter(arg1,arg2,(cv::_InputArray const &)*arg3,(cv::_InputArray const &)*arg4,arg5,arg6);
  *(cv::Ptr< cv::FilterEngine > **)&_swig_go_result = new cv::Ptr< cv::FilterEngine >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::FilterEngine > *_wrap_createSeparableLinearFilter__SWIG_4_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, cv::_InputArray *_swig_go_2, cv::_InputArray *_swig_go_3, cv::Point_< int > *_swig_go_4) {
  int arg1 ;
  int arg2 ;
  cv::_InputArray *arg3 = 0 ;
  cv::_InputArray *arg4 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg5 ;
  cv::Point *argp5 ;
  SwigValueWrapper< cv::Ptr< cv::FilterEngine > > result;
  cv::Ptr< cv::FilterEngine > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  
  argp5 = (cv::Point *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg5 = (cv::Point)*argp5;
  
  
  result = cv::createSeparableLinearFilter(arg1,arg2,(cv::_InputArray const &)*arg3,(cv::_InputArray const &)*arg4,arg5);
  *(cv::Ptr< cv::FilterEngine > **)&_swig_go_result = new cv::Ptr< cv::FilterEngine >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::FilterEngine > *_wrap_createSeparableLinearFilter__SWIG_5_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, cv::_InputArray *_swig_go_2, cv::_InputArray *_swig_go_3) {
  int arg1 ;
  int arg2 ;
  cv::_InputArray *arg3 = 0 ;
  cv::_InputArray *arg4 = 0 ;
  SwigValueWrapper< cv::Ptr< cv::FilterEngine > > result;
  cv::Ptr< cv::FilterEngine > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  
  result = cv::createSeparableLinearFilter(arg1,arg2,(cv::_InputArray const &)*arg3,(cv::_InputArray const &)*arg4);
  *(cv::Ptr< cv::FilterEngine > **)&_swig_go_result = new cv::Ptr< cv::FilterEngine >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::FilterEngine > *_wrap_createLinearFilter__SWIG_0_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, cv::_InputArray *_swig_go_2, cv::Point_< int > *_swig_go_3, double _swig_go_4, intgo _swig_go_5, intgo _swig_go_6, cv::Scalar_< double > *_swig_go_7) {
  int arg1 ;
  int arg2 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg4 ;
  double arg5 ;
  int arg6 ;
  int arg7 ;
  cv::Scalar *arg8 = 0 ;
  cv::Point *argp4 ;
  SwigValueWrapper< cv::Ptr< cv::FilterEngine > > result;
  cv::Ptr< cv::FilterEngine > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  argp4 = (cv::Point *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg4 = (cv::Point)*argp4;
  
  arg5 = (double)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  arg8 = *(cv::Scalar **)&_swig_go_7; 
  
  result = cv::createLinearFilter(arg1,arg2,(cv::_InputArray const &)*arg3,arg4,arg5,arg6,arg7,(cv::Scalar_< double > const &)*arg8);
  *(cv::Ptr< cv::FilterEngine > **)&_swig_go_result = new cv::Ptr< cv::FilterEngine >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::FilterEngine > *_wrap_createLinearFilter__SWIG_1_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, cv::_InputArray *_swig_go_2, cv::Point_< int > *_swig_go_3, double _swig_go_4, intgo _swig_go_5, intgo _swig_go_6) {
  int arg1 ;
  int arg2 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg4 ;
  double arg5 ;
  int arg6 ;
  int arg7 ;
  cv::Point *argp4 ;
  SwigValueWrapper< cv::Ptr< cv::FilterEngine > > result;
  cv::Ptr< cv::FilterEngine > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  argp4 = (cv::Point *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg4 = (cv::Point)*argp4;
  
  arg5 = (double)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  
  result = cv::createLinearFilter(arg1,arg2,(cv::_InputArray const &)*arg3,arg4,arg5,arg6,arg7);
  *(cv::Ptr< cv::FilterEngine > **)&_swig_go_result = new cv::Ptr< cv::FilterEngine >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::FilterEngine > *_wrap_createLinearFilter__SWIG_2_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, cv::_InputArray *_swig_go_2, cv::Point_< int > *_swig_go_3, double _swig_go_4, intgo _swig_go_5) {
  int arg1 ;
  int arg2 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg4 ;
  double arg5 ;
  int arg6 ;
  cv::Point *argp4 ;
  SwigValueWrapper< cv::Ptr< cv::FilterEngine > > result;
  cv::Ptr< cv::FilterEngine > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  argp4 = (cv::Point *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg4 = (cv::Point)*argp4;
  
  arg5 = (double)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  result = cv::createLinearFilter(arg1,arg2,(cv::_InputArray const &)*arg3,arg4,arg5,arg6);
  *(cv::Ptr< cv::FilterEngine > **)&_swig_go_result = new cv::Ptr< cv::FilterEngine >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::FilterEngine > *_wrap_createLinearFilter__SWIG_3_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, cv::_InputArray *_swig_go_2, cv::Point_< int > *_swig_go_3, double _swig_go_4) {
  int arg1 ;
  int arg2 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg4 ;
  double arg5 ;
  cv::Point *argp4 ;
  SwigValueWrapper< cv::Ptr< cv::FilterEngine > > result;
  cv::Ptr< cv::FilterEngine > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  argp4 = (cv::Point *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg4 = (cv::Point)*argp4;
  
  arg5 = (double)_swig_go_4; 
  
  result = cv::createLinearFilter(arg1,arg2,(cv::_InputArray const &)*arg3,arg4,arg5);
  *(cv::Ptr< cv::FilterEngine > **)&_swig_go_result = new cv::Ptr< cv::FilterEngine >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::FilterEngine > *_wrap_createLinearFilter__SWIG_4_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, cv::_InputArray *_swig_go_2, cv::Point_< int > *_swig_go_3) {
  int arg1 ;
  int arg2 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg4 ;
  cv::Point *argp4 ;
  SwigValueWrapper< cv::Ptr< cv::FilterEngine > > result;
  cv::Ptr< cv::FilterEngine > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  argp4 = (cv::Point *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg4 = (cv::Point)*argp4;
  
  
  result = cv::createLinearFilter(arg1,arg2,(cv::_InputArray const &)*arg3,arg4);
  *(cv::Ptr< cv::FilterEngine > **)&_swig_go_result = new cv::Ptr< cv::FilterEngine >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::FilterEngine > *_wrap_createLinearFilter__SWIG_5_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, cv::_InputArray *_swig_go_2) {
  int arg1 ;
  int arg2 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Ptr< cv::FilterEngine > > result;
  cv::Ptr< cv::FilterEngine > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  result = cv::createLinearFilter(arg1,arg2,(cv::_InputArray const &)*arg3);
  *(cv::Ptr< cv::FilterEngine > **)&_swig_go_result = new cv::Ptr< cv::FilterEngine >(result); 
  return _swig_go_result;
}


cv::Mat *_wrap_getGaussianKernel__SWIG_0_cv_dbcbba478e71899d(intgo _swig_go_0, double _swig_go_1, intgo _swig_go_2) {
  int arg1 ;
  double arg2 ;
  int arg3 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = cv::getGaussianKernel(arg1,arg2,arg3);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


cv::Mat *_wrap_getGaussianKernel__SWIG_1_cv_dbcbba478e71899d(intgo _swig_go_0, double _swig_go_1) {
  int arg1 ;
  double arg2 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  result = cv::getGaussianKernel(arg1,arg2);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


cv::Ptr< cv::FilterEngine > *_wrap_createGaussianFilter__SWIG_0_cv_dbcbba478e71899d(intgo _swig_go_0, cv::Size_< int > *_swig_go_1, double _swig_go_2, double _swig_go_3, intgo _swig_go_4) {
  int arg1 ;
  SwigValueWrapper< cv::Size_< int > > arg2 ;
  double arg3 ;
  double arg4 ;
  int arg5 ;
  cv::Size *argp2 ;
  SwigValueWrapper< cv::Ptr< cv::FilterEngine > > result;
  cv::Ptr< cv::FilterEngine > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  argp2 = (cv::Size *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg2 = (cv::Size)*argp2;
  
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  result = cv::createGaussianFilter(arg1,arg2,arg3,arg4,arg5);
  *(cv::Ptr< cv::FilterEngine > **)&_swig_go_result = new cv::Ptr< cv::FilterEngine >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::FilterEngine > *_wrap_createGaussianFilter__SWIG_1_cv_dbcbba478e71899d(intgo _swig_go_0, cv::Size_< int > *_swig_go_1, double _swig_go_2, double _swig_go_3) {
  int arg1 ;
  SwigValueWrapper< cv::Size_< int > > arg2 ;
  double arg3 ;
  double arg4 ;
  cv::Size *argp2 ;
  SwigValueWrapper< cv::Ptr< cv::FilterEngine > > result;
  cv::Ptr< cv::FilterEngine > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  argp2 = (cv::Size *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg2 = (cv::Size)*argp2;
  
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  result = cv::createGaussianFilter(arg1,arg2,arg3,arg4);
  *(cv::Ptr< cv::FilterEngine > **)&_swig_go_result = new cv::Ptr< cv::FilterEngine >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::FilterEngine > *_wrap_createGaussianFilter__SWIG_2_cv_dbcbba478e71899d(intgo _swig_go_0, cv::Size_< int > *_swig_go_1, double _swig_go_2) {
  int arg1 ;
  SwigValueWrapper< cv::Size_< int > > arg2 ;
  double arg3 ;
  cv::Size *argp2 ;
  SwigValueWrapper< cv::Ptr< cv::FilterEngine > > result;
  cv::Ptr< cv::FilterEngine > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  argp2 = (cv::Size *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg2 = (cv::Size)*argp2;
  
  arg3 = (double)_swig_go_2; 
  
  result = cv::createGaussianFilter(arg1,arg2,arg3);
  *(cv::Ptr< cv::FilterEngine > **)&_swig_go_result = new cv::Ptr< cv::FilterEngine >(result); 
  return _swig_go_result;
}


void _wrap_getDerivKernels__SWIG_0_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, bool _swig_go_5, intgo _swig_go_6) {
  cv::_OutputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  bool arg6 ;
  int arg7 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (bool)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  
  cv::getDerivKernels((cv::_OutputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6,arg7);
  
}


void _wrap_getDerivKernels__SWIG_1_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, bool _swig_go_5) {
  cv::_OutputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  bool arg6 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (bool)_swig_go_5; 
  
  cv::getDerivKernels((cv::_OutputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6);
  
}


void _wrap_getDerivKernels__SWIG_2_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  cv::_OutputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::getDerivKernels((cv::_OutputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5);
  
}


cv::Ptr< cv::FilterEngine > *_wrap_createDerivFilter__SWIG_0_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, intgo _swig_go_5) {
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  SwigValueWrapper< cv::Ptr< cv::FilterEngine > > result;
  cv::Ptr< cv::FilterEngine > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  result = cv::createDerivFilter(arg1,arg2,arg3,arg4,arg5,arg6);
  *(cv::Ptr< cv::FilterEngine > **)&_swig_go_result = new cv::Ptr< cv::FilterEngine >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::FilterEngine > *_wrap_createDerivFilter__SWIG_1_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  SwigValueWrapper< cv::Ptr< cv::FilterEngine > > result;
  cv::Ptr< cv::FilterEngine > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  result = cv::createDerivFilter(arg1,arg2,arg3,arg4,arg5);
  *(cv::Ptr< cv::FilterEngine > **)&_swig_go_result = new cv::Ptr< cv::FilterEngine >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::BaseRowFilter > *_wrap_getRowSumFilter__SWIG_0_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  SwigValueWrapper< cv::Ptr< cv::BaseRowFilter > > result;
  cv::Ptr< cv::BaseRowFilter > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = cv::getRowSumFilter(arg1,arg2,arg3,arg4);
  *(cv::Ptr< cv::BaseRowFilter > **)&_swig_go_result = new cv::Ptr< cv::BaseRowFilter >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::BaseRowFilter > *_wrap_getRowSumFilter__SWIG_1_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  int arg1 ;
  int arg2 ;
  int arg3 ;
  SwigValueWrapper< cv::Ptr< cv::BaseRowFilter > > result;
  cv::Ptr< cv::BaseRowFilter > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = cv::getRowSumFilter(arg1,arg2,arg3);
  *(cv::Ptr< cv::BaseRowFilter > **)&_swig_go_result = new cv::Ptr< cv::BaseRowFilter >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::BaseColumnFilter > *_wrap_getColumnSumFilter__SWIG_0_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3, double _swig_go_4) {
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  double arg5 ;
  SwigValueWrapper< cv::Ptr< cv::BaseColumnFilter > > result;
  cv::Ptr< cv::BaseColumnFilter > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  result = cv::getColumnSumFilter(arg1,arg2,arg3,arg4,arg5);
  *(cv::Ptr< cv::BaseColumnFilter > **)&_swig_go_result = new cv::Ptr< cv::BaseColumnFilter >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::BaseColumnFilter > *_wrap_getColumnSumFilter__SWIG_1_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  SwigValueWrapper< cv::Ptr< cv::BaseColumnFilter > > result;
  cv::Ptr< cv::BaseColumnFilter > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = cv::getColumnSumFilter(arg1,arg2,arg3,arg4);
  *(cv::Ptr< cv::BaseColumnFilter > **)&_swig_go_result = new cv::Ptr< cv::BaseColumnFilter >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::BaseColumnFilter > *_wrap_getColumnSumFilter__SWIG_2_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  int arg1 ;
  int arg2 ;
  int arg3 ;
  SwigValueWrapper< cv::Ptr< cv::BaseColumnFilter > > result;
  cv::Ptr< cv::BaseColumnFilter > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = cv::getColumnSumFilter(arg1,arg2,arg3);
  *(cv::Ptr< cv::BaseColumnFilter > **)&_swig_go_result = new cv::Ptr< cv::BaseColumnFilter >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::FilterEngine > *_wrap_createBoxFilter__SWIG_0_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, cv::Size_< int > *_swig_go_2, cv::Point_< int > *_swig_go_3, bool _swig_go_4, intgo _swig_go_5) {
  int arg1 ;
  int arg2 ;
  SwigValueWrapper< cv::Size_< int > > arg3 ;
  SwigValueWrapper< cv::Point_< int > > arg4 ;
  bool arg5 ;
  int arg6 ;
  cv::Size *argp3 ;
  cv::Point *argp4 ;
  SwigValueWrapper< cv::Ptr< cv::FilterEngine > > result;
  cv::Ptr< cv::FilterEngine > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  argp3 = (cv::Size *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg3 = (cv::Size)*argp3;
  
  
  argp4 = (cv::Point *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg4 = (cv::Point)*argp4;
  
  arg5 = (bool)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  result = cv::createBoxFilter(arg1,arg2,arg3,arg4,arg5,arg6);
  *(cv::Ptr< cv::FilterEngine > **)&_swig_go_result = new cv::Ptr< cv::FilterEngine >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::FilterEngine > *_wrap_createBoxFilter__SWIG_1_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, cv::Size_< int > *_swig_go_2, cv::Point_< int > *_swig_go_3, bool _swig_go_4) {
  int arg1 ;
  int arg2 ;
  SwigValueWrapper< cv::Size_< int > > arg3 ;
  SwigValueWrapper< cv::Point_< int > > arg4 ;
  bool arg5 ;
  cv::Size *argp3 ;
  cv::Point *argp4 ;
  SwigValueWrapper< cv::Ptr< cv::FilterEngine > > result;
  cv::Ptr< cv::FilterEngine > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  argp3 = (cv::Size *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg3 = (cv::Size)*argp3;
  
  
  argp4 = (cv::Point *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg4 = (cv::Point)*argp4;
  
  arg5 = (bool)_swig_go_4; 
  
  result = cv::createBoxFilter(arg1,arg2,arg3,arg4,arg5);
  *(cv::Ptr< cv::FilterEngine > **)&_swig_go_result = new cv::Ptr< cv::FilterEngine >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::FilterEngine > *_wrap_createBoxFilter__SWIG_2_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, cv::Size_< int > *_swig_go_2, cv::Point_< int > *_swig_go_3) {
  int arg1 ;
  int arg2 ;
  SwigValueWrapper< cv::Size_< int > > arg3 ;
  SwigValueWrapper< cv::Point_< int > > arg4 ;
  cv::Size *argp3 ;
  cv::Point *argp4 ;
  SwigValueWrapper< cv::Ptr< cv::FilterEngine > > result;
  cv::Ptr< cv::FilterEngine > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  argp3 = (cv::Size *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg3 = (cv::Size)*argp3;
  
  
  argp4 = (cv::Point *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg4 = (cv::Point)*argp4;
  
  
  result = cv::createBoxFilter(arg1,arg2,arg3,arg4);
  *(cv::Ptr< cv::FilterEngine > **)&_swig_go_result = new cv::Ptr< cv::FilterEngine >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::FilterEngine > *_wrap_createBoxFilter__SWIG_3_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, cv::Size_< int > *_swig_go_2) {
  int arg1 ;
  int arg2 ;
  SwigValueWrapper< cv::Size_< int > > arg3 ;
  cv::Size *argp3 ;
  SwigValueWrapper< cv::Ptr< cv::FilterEngine > > result;
  cv::Ptr< cv::FilterEngine > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  argp3 = (cv::Size *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg3 = (cv::Size)*argp3;
  
  
  result = cv::createBoxFilter(arg1,arg2,arg3);
  *(cv::Ptr< cv::FilterEngine > **)&_swig_go_result = new cv::Ptr< cv::FilterEngine >(result); 
  return _swig_go_result;
}


cv::Mat *_wrap_getGaborKernel__SWIG_0_cv_dbcbba478e71899d(cv::Size_< int > *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4, double _swig_go_5, intgo _swig_go_6) {
  SwigValueWrapper< cv::Size_< int > > arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  int arg7 ;
  cv::Size *argp1 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  
  argp1 = (cv::Size *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg1 = (cv::Size)*argp1;
  
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  
  result = cv::getGaborKernel(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


cv::Mat *_wrap_getGaborKernel__SWIG_1_cv_dbcbba478e71899d(cv::Size_< int > *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4, double _swig_go_5) {
  SwigValueWrapper< cv::Size_< int > > arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  cv::Size *argp1 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  
  argp1 = (cv::Size *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg1 = (cv::Size)*argp1;
  
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  
  result = cv::getGaborKernel(arg1,arg2,arg3,arg4,arg5,arg6);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


cv::Mat *_wrap_getGaborKernel__SWIG_2_cv_dbcbba478e71899d(cv::Size_< int > *_swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4) {
  SwigValueWrapper< cv::Size_< int > > arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  cv::Size *argp1 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  
  argp1 = (cv::Size *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg1 = (cv::Size)*argp1;
  
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  result = cv::getGaborKernel(arg1,arg2,arg3,arg4,arg5);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


intgo _wrap_MORPH_ERODE_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::MORPH_ERODE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_MORPH_DILATE_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::MORPH_DILATE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_MORPH_OPEN_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::MORPH_OPEN;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_MORPH_CLOSE_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::MORPH_CLOSE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_MORPH_GRADIENT_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::MORPH_GRADIENT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_MORPH_TOPHAT_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::MORPH_TOPHAT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_MORPH_BLACKHAT_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::MORPH_BLACKHAT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


cv::Ptr< cv::BaseRowFilter > *_wrap_getMorphologyRowFilter__SWIG_0_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  SwigValueWrapper< cv::Ptr< cv::BaseRowFilter > > result;
  cv::Ptr< cv::BaseRowFilter > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = cv::getMorphologyRowFilter(arg1,arg2,arg3,arg4);
  *(cv::Ptr< cv::BaseRowFilter > **)&_swig_go_result = new cv::Ptr< cv::BaseRowFilter >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::BaseRowFilter > *_wrap_getMorphologyRowFilter__SWIG_1_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  int arg1 ;
  int arg2 ;
  int arg3 ;
  SwigValueWrapper< cv::Ptr< cv::BaseRowFilter > > result;
  cv::Ptr< cv::BaseRowFilter > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = cv::getMorphologyRowFilter(arg1,arg2,arg3);
  *(cv::Ptr< cv::BaseRowFilter > **)&_swig_go_result = new cv::Ptr< cv::BaseRowFilter >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::BaseColumnFilter > *_wrap_getMorphologyColumnFilter__SWIG_0_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  SwigValueWrapper< cv::Ptr< cv::BaseColumnFilter > > result;
  cv::Ptr< cv::BaseColumnFilter > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = cv::getMorphologyColumnFilter(arg1,arg2,arg3,arg4);
  *(cv::Ptr< cv::BaseColumnFilter > **)&_swig_go_result = new cv::Ptr< cv::BaseColumnFilter >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::BaseColumnFilter > *_wrap_getMorphologyColumnFilter__SWIG_1_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  int arg1 ;
  int arg2 ;
  int arg3 ;
  SwigValueWrapper< cv::Ptr< cv::BaseColumnFilter > > result;
  cv::Ptr< cv::BaseColumnFilter > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = cv::getMorphologyColumnFilter(arg1,arg2,arg3);
  *(cv::Ptr< cv::BaseColumnFilter > **)&_swig_go_result = new cv::Ptr< cv::BaseColumnFilter >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::BaseFilter > *_wrap_getMorphologyFilter__SWIG_0_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, cv::_InputArray *_swig_go_2, cv::Point_< int > *_swig_go_3) {
  int arg1 ;
  int arg2 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg4 ;
  cv::Point *argp4 ;
  SwigValueWrapper< cv::Ptr< cv::BaseFilter > > result;
  cv::Ptr< cv::BaseFilter > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  argp4 = (cv::Point *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg4 = (cv::Point)*argp4;
  
  
  result = cv::getMorphologyFilter(arg1,arg2,(cv::_InputArray const &)*arg3,arg4);
  *(cv::Ptr< cv::BaseFilter > **)&_swig_go_result = new cv::Ptr< cv::BaseFilter >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::BaseFilter > *_wrap_getMorphologyFilter__SWIG_1_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, cv::_InputArray *_swig_go_2) {
  int arg1 ;
  int arg2 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Ptr< cv::BaseFilter > > result;
  cv::Ptr< cv::BaseFilter > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  result = cv::getMorphologyFilter(arg1,arg2,(cv::_InputArray const &)*arg3);
  *(cv::Ptr< cv::BaseFilter > **)&_swig_go_result = new cv::Ptr< cv::BaseFilter >(result); 
  return _swig_go_result;
}


cv::Scalar_< double > *_wrap_morphologyDefaultBorderValue_cv_dbcbba478e71899d() {
  SwigValueWrapper< cv::Scalar_< double > > result;
  cv::Scalar_< double > *_swig_go_result;
  
  
  result = cv::morphologyDefaultBorderValue();
  *(cv::Scalar **)&_swig_go_result = new cv::Scalar(result); 
  return _swig_go_result;
}


cv::Ptr< cv::FilterEngine > *_wrap_createMorphologyFilter__SWIG_0_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, cv::_InputArray *_swig_go_2, cv::Point_< int > *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5, cv::Scalar_< double > *_swig_go_6) {
  int arg1 ;
  int arg2 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg4 ;
  int arg5 ;
  int arg6 ;
  cv::Scalar *arg7 = 0 ;
  cv::Point *argp4 ;
  SwigValueWrapper< cv::Ptr< cv::FilterEngine > > result;
  cv::Ptr< cv::FilterEngine > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  argp4 = (cv::Point *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg4 = (cv::Point)*argp4;
  
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = *(cv::Scalar **)&_swig_go_6; 
  
  result = cv::createMorphologyFilter(arg1,arg2,(cv::_InputArray const &)*arg3,arg4,arg5,arg6,(cv::Scalar_< double > const &)*arg7);
  *(cv::Ptr< cv::FilterEngine > **)&_swig_go_result = new cv::Ptr< cv::FilterEngine >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::FilterEngine > *_wrap_createMorphologyFilter__SWIG_1_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, cv::_InputArray *_swig_go_2, cv::Point_< int > *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5) {
  int arg1 ;
  int arg2 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg4 ;
  int arg5 ;
  int arg6 ;
  cv::Point *argp4 ;
  SwigValueWrapper< cv::Ptr< cv::FilterEngine > > result;
  cv::Ptr< cv::FilterEngine > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  argp4 = (cv::Point *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg4 = (cv::Point)*argp4;
  
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  result = cv::createMorphologyFilter(arg1,arg2,(cv::_InputArray const &)*arg3,arg4,arg5,arg6);
  *(cv::Ptr< cv::FilterEngine > **)&_swig_go_result = new cv::Ptr< cv::FilterEngine >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::FilterEngine > *_wrap_createMorphologyFilter__SWIG_2_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, cv::_InputArray *_swig_go_2, cv::Point_< int > *_swig_go_3, intgo _swig_go_4) {
  int arg1 ;
  int arg2 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg4 ;
  int arg5 ;
  cv::Point *argp4 ;
  SwigValueWrapper< cv::Ptr< cv::FilterEngine > > result;
  cv::Ptr< cv::FilterEngine > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  argp4 = (cv::Point *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg4 = (cv::Point)*argp4;
  
  arg5 = (int)_swig_go_4; 
  
  result = cv::createMorphologyFilter(arg1,arg2,(cv::_InputArray const &)*arg3,arg4,arg5);
  *(cv::Ptr< cv::FilterEngine > **)&_swig_go_result = new cv::Ptr< cv::FilterEngine >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::FilterEngine > *_wrap_createMorphologyFilter__SWIG_3_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, cv::_InputArray *_swig_go_2, cv::Point_< int > *_swig_go_3) {
  int arg1 ;
  int arg2 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg4 ;
  cv::Point *argp4 ;
  SwigValueWrapper< cv::Ptr< cv::FilterEngine > > result;
  cv::Ptr< cv::FilterEngine > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  argp4 = (cv::Point *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg4 = (cv::Point)*argp4;
  
  
  result = cv::createMorphologyFilter(arg1,arg2,(cv::_InputArray const &)*arg3,arg4);
  *(cv::Ptr< cv::FilterEngine > **)&_swig_go_result = new cv::Ptr< cv::FilterEngine >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::FilterEngine > *_wrap_createMorphologyFilter__SWIG_4_cv_dbcbba478e71899d(intgo _swig_go_0, intgo _swig_go_1, cv::_InputArray *_swig_go_2) {
  int arg1 ;
  int arg2 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Ptr< cv::FilterEngine > > result;
  cv::Ptr< cv::FilterEngine > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  result = cv::createMorphologyFilter(arg1,arg2,(cv::_InputArray const &)*arg3);
  *(cv::Ptr< cv::FilterEngine > **)&_swig_go_result = new cv::Ptr< cv::FilterEngine >(result); 
  return _swig_go_result;
}


intgo _wrap_MORPH_RECT_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::MORPH_RECT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_MORPH_CROSS_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::MORPH_CROSS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_MORPH_ELLIPSE_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::MORPH_ELLIPSE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


cv::Mat *_wrap_getStructuringElement__SWIG_0_cv_dbcbba478e71899d(intgo _swig_go_0, cv::Size_< int > *_swig_go_1, cv::Point_< int > *_swig_go_2) {
  int arg1 ;
  SwigValueWrapper< cv::Size_< int > > arg2 ;
  SwigValueWrapper< cv::Point_< int > > arg3 ;
  cv::Size *argp2 ;
  cv::Point *argp3 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  argp2 = (cv::Size *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg2 = (cv::Size)*argp2;
  
  
  argp3 = (cv::Point *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg3 = (cv::Point)*argp3;
  
  
  result = cv::getStructuringElement(arg1,arg2,arg3);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


cv::Mat *_wrap_getStructuringElement__SWIG_1_cv_dbcbba478e71899d(intgo _swig_go_0, cv::Size_< int > *_swig_go_1) {
  int arg1 ;
  SwigValueWrapper< cv::Size_< int > > arg2 ;
  cv::Size *argp2 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  argp2 = (cv::Size *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg2 = (cv::Size)*argp2;
  
  
  result = cv::getStructuringElement(arg1,arg2);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


void _wrap_copyMakeBorder__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, intgo _swig_go_5, intgo _swig_go_6, cv::Scalar_< double > *_swig_go_7) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  cv::Scalar *arg8 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  arg8 = *(cv::Scalar **)&_swig_go_7; 
  
  cv::copyMakeBorder((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6,arg7,(cv::Scalar_< double > const &)*arg8);
  
}


void _wrap_copyMakeBorder__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, intgo _swig_go_5, intgo _swig_go_6) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int arg7 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  
  cv::copyMakeBorder((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6,arg7);
  
}


void _wrap_medianBlur_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  cv::medianBlur((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3);
  
}


void _wrap_GaussianBlur__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::Size_< int > *_swig_go_2, double _swig_go_3, double _swig_go_4, intgo _swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg3 ;
  double arg4 ;
  double arg5 ;
  int arg6 ;
  cv::Size *argp3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  argp3 = (cv::Size *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg3 = (cv::Size)*argp3;
  
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  cv::GaussianBlur((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6);
  
}


void _wrap_GaussianBlur__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::Size_< int > *_swig_go_2, double _swig_go_3, double _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg3 ;
  double arg4 ;
  double arg5 ;
  cv::Size *argp3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  argp3 = (cv::Size *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg3 = (cv::Size)*argp3;
  
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  cv::GaussianBlur((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5);
  
}


void _wrap_GaussianBlur__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::Size_< int > *_swig_go_2, double _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg3 ;
  double arg4 ;
  cv::Size *argp3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  argp3 = (cv::Size *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg3 = (cv::Size)*argp3;
  
  arg4 = (double)_swig_go_3; 
  
  cv::GaussianBlur((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4);
  
}


void _wrap_bilateralFilter__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, double _swig_go_3, double _swig_go_4, intgo _swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  double arg5 ;
  int arg6 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  cv::bilateralFilter((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6);
  
}


void _wrap_bilateralFilter__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, double _swig_go_3, double _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  double arg5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  cv::bilateralFilter((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5);
  
}


void _wrap_adaptiveBilateralFilter__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::Size_< int > *_swig_go_2, double _swig_go_3, double _swig_go_4, cv::Point_< int > *_swig_go_5, intgo _swig_go_6) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg3 ;
  double arg4 ;
  double arg5 ;
  SwigValueWrapper< cv::Point_< int > > arg6 ;
  int arg7 ;
  cv::Size *argp3 ;
  cv::Point *argp6 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  argp3 = (cv::Size *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg3 = (cv::Size)*argp3;
  
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  argp6 = (cv::Point *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg6 = (cv::Point)*argp6;
  
  arg7 = (int)_swig_go_6; 
  
  cv::adaptiveBilateralFilter((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6,arg7);
  
}


void _wrap_adaptiveBilateralFilter__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::Size_< int > *_swig_go_2, double _swig_go_3, double _swig_go_4, cv::Point_< int > *_swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg3 ;
  double arg4 ;
  double arg5 ;
  SwigValueWrapper< cv::Point_< int > > arg6 ;
  cv::Size *argp3 ;
  cv::Point *argp6 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  argp3 = (cv::Size *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg3 = (cv::Size)*argp3;
  
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  argp6 = (cv::Point *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg6 = (cv::Point)*argp6;
  
  
  cv::adaptiveBilateralFilter((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6);
  
}


void _wrap_adaptiveBilateralFilter__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::Size_< int > *_swig_go_2, double _swig_go_3, double _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg3 ;
  double arg4 ;
  double arg5 ;
  cv::Size *argp3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  argp3 = (cv::Size *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg3 = (cv::Size)*argp3;
  
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  cv::adaptiveBilateralFilter((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5);
  
}


void _wrap_adaptiveBilateralFilter__SWIG_3_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::Size_< int > *_swig_go_2, double _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg3 ;
  double arg4 ;
  cv::Size *argp3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  argp3 = (cv::Size *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg3 = (cv::Size)*argp3;
  
  arg4 = (double)_swig_go_3; 
  
  cv::adaptiveBilateralFilter((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4);
  
}


void _wrap_boxFilter__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, cv::Size_< int > *_swig_go_3, cv::Point_< int > *_swig_go_4, bool _swig_go_5, intgo _swig_go_6) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  SwigValueWrapper< cv::Size_< int > > arg4 ;
  SwigValueWrapper< cv::Point_< int > > arg5 ;
  bool arg6 ;
  int arg7 ;
  cv::Size *argp4 ;
  cv::Point *argp5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  argp4 = (cv::Size *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg4 = (cv::Size)*argp4;
  
  
  argp5 = (cv::Point *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg5 = (cv::Point)*argp5;
  
  arg6 = (bool)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  
  cv::boxFilter((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6,arg7);
  
}


void _wrap_boxFilter__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, cv::Size_< int > *_swig_go_3, cv::Point_< int > *_swig_go_4, bool _swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  SwigValueWrapper< cv::Size_< int > > arg4 ;
  SwigValueWrapper< cv::Point_< int > > arg5 ;
  bool arg6 ;
  cv::Size *argp4 ;
  cv::Point *argp5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  argp4 = (cv::Size *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg4 = (cv::Size)*argp4;
  
  
  argp5 = (cv::Point *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg5 = (cv::Point)*argp5;
  
  arg6 = (bool)_swig_go_5; 
  
  cv::boxFilter((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6);
  
}


void _wrap_boxFilter__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, cv::Size_< int > *_swig_go_3, cv::Point_< int > *_swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  SwigValueWrapper< cv::Size_< int > > arg4 ;
  SwigValueWrapper< cv::Point_< int > > arg5 ;
  cv::Size *argp4 ;
  cv::Point *argp5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  argp4 = (cv::Size *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg4 = (cv::Size)*argp4;
  
  
  argp5 = (cv::Point *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg5 = (cv::Point)*argp5;
  
  
  cv::boxFilter((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5);
  
}


void _wrap_boxFilter__SWIG_3_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, cv::Size_< int > *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  SwigValueWrapper< cv::Size_< int > > arg4 ;
  cv::Size *argp4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  argp4 = (cv::Size *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg4 = (cv::Size)*argp4;
  
  
  cv::boxFilter((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4);
  
}


void _wrap_blur__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::Size_< int > *_swig_go_2, cv::Point_< int > *_swig_go_3, intgo _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg3 ;
  SwigValueWrapper< cv::Point_< int > > arg4 ;
  int arg5 ;
  cv::Size *argp3 ;
  cv::Point *argp4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  argp3 = (cv::Size *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg3 = (cv::Size)*argp3;
  
  
  argp4 = (cv::Point *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg4 = (cv::Point)*argp4;
  
  arg5 = (int)_swig_go_4; 
  
  cv::blur((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5);
  
}


void _wrap_blur__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::Size_< int > *_swig_go_2, cv::Point_< int > *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg3 ;
  SwigValueWrapper< cv::Point_< int > > arg4 ;
  cv::Size *argp3 ;
  cv::Point *argp4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  argp3 = (cv::Size *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg3 = (cv::Size)*argp3;
  
  
  argp4 = (cv::Point *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg4 = (cv::Point)*argp4;
  
  
  cv::blur((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4);
  
}


void _wrap_blur__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::Size_< int > *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg3 ;
  cv::Size *argp3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  argp3 = (cv::Size *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg3 = (cv::Size)*argp3;
  
  
  cv::blur((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3);
  
}


void _wrap_filter2D__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, cv::_InputArray *_swig_go_3, cv::Point_< int > *_swig_go_4, double _swig_go_5, intgo _swig_go_6) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  cv::_InputArray *arg4 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg5 ;
  double arg6 ;
  int arg7 ;
  cv::Point *argp5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  
  argp5 = (cv::Point *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg5 = (cv::Point)*argp5;
  
  arg6 = (double)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  
  cv::filter2D((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,(cv::_InputArray const &)*arg4,arg5,arg6,arg7);
  
}


void _wrap_filter2D__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, cv::_InputArray *_swig_go_3, cv::Point_< int > *_swig_go_4, double _swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  cv::_InputArray *arg4 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg5 ;
  double arg6 ;
  cv::Point *argp5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  
  argp5 = (cv::Point *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg5 = (cv::Point)*argp5;
  
  arg6 = (double)_swig_go_5; 
  
  cv::filter2D((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,(cv::_InputArray const &)*arg4,arg5,arg6);
  
}


void _wrap_filter2D__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, cv::_InputArray *_swig_go_3, cv::Point_< int > *_swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  cv::_InputArray *arg4 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg5 ;
  cv::Point *argp5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  
  argp5 = (cv::Point *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg5 = (cv::Point)*argp5;
  
  
  cv::filter2D((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,(cv::_InputArray const &)*arg4,arg5);
  
}


void _wrap_filter2D__SWIG_3_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, cv::_InputArray *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  cv::_InputArray *arg4 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  
  cv::filter2D((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,(cv::_InputArray const &)*arg4);
  
}


void _wrap_sepFilter2D__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, cv::_InputArray *_swig_go_3, cv::_InputArray *_swig_go_4, cv::Point_< int > *_swig_go_5, double _swig_go_6, intgo _swig_go_7) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  cv::_InputArray *arg4 = 0 ;
  cv::_InputArray *arg5 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg6 ;
  double arg7 ;
  int arg8 ;
  cv::Point *argp6 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  arg5 = *(cv::_InputArray **)&_swig_go_4; 
  
  argp6 = (cv::Point *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg6 = (cv::Point)*argp6;
  
  arg7 = (double)_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  
  cv::sepFilter2D((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,(cv::_InputArray const &)*arg4,(cv::_InputArray const &)*arg5,arg6,arg7,arg8);
  
}


void _wrap_sepFilter2D__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, cv::_InputArray *_swig_go_3, cv::_InputArray *_swig_go_4, cv::Point_< int > *_swig_go_5, double _swig_go_6) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  cv::_InputArray *arg4 = 0 ;
  cv::_InputArray *arg5 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg6 ;
  double arg7 ;
  cv::Point *argp6 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  arg5 = *(cv::_InputArray **)&_swig_go_4; 
  
  argp6 = (cv::Point *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg6 = (cv::Point)*argp6;
  
  arg7 = (double)_swig_go_6; 
  
  cv::sepFilter2D((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,(cv::_InputArray const &)*arg4,(cv::_InputArray const &)*arg5,arg6,arg7);
  
}


void _wrap_sepFilter2D__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, cv::_InputArray *_swig_go_3, cv::_InputArray *_swig_go_4, cv::Point_< int > *_swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  cv::_InputArray *arg4 = 0 ;
  cv::_InputArray *arg5 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg6 ;
  cv::Point *argp6 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  arg5 = *(cv::_InputArray **)&_swig_go_4; 
  
  argp6 = (cv::Point *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg6 = (cv::Point)*argp6;
  
  
  cv::sepFilter2D((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,(cv::_InputArray const &)*arg4,(cv::_InputArray const &)*arg5,arg6);
  
}


void _wrap_sepFilter2D__SWIG_3_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, cv::_InputArray *_swig_go_3, cv::_InputArray *_swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  cv::_InputArray *arg4 = 0 ;
  cv::_InputArray *arg5 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  arg5 = *(cv::_InputArray **)&_swig_go_4; 
  
  cv::sepFilter2D((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,(cv::_InputArray const &)*arg4,(cv::_InputArray const &)*arg5);
  
}


void _wrap_Sobel__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, intgo _swig_go_5, double _swig_go_6, double _swig_go_7, intgo _swig_go_8) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  double arg7 ;
  double arg8 ;
  int arg9 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  arg8 = (double)_swig_go_7; 
  arg9 = (int)_swig_go_8; 
  
  cv::Sobel((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  
}


void _wrap_Sobel__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, intgo _swig_go_5, double _swig_go_6, double _swig_go_7) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  double arg7 ;
  double arg8 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  arg8 = (double)_swig_go_7; 
  
  cv::Sobel((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  
}


void _wrap_Sobel__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, intgo _swig_go_5, double _swig_go_6) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  double arg7 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  
  cv::Sobel((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6,arg7);
  
}


void _wrap_Sobel__SWIG_3_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, intgo _swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  cv::Sobel((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6);
  
}


void _wrap_Sobel__SWIG_4_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::Sobel((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5);
  
}


void _wrap_Scharr__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, double _swig_go_5, double _swig_go_6, intgo _swig_go_7) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  int arg8 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  
  cv::Scharr((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  
}


void _wrap_Scharr__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, double _swig_go_5, double _swig_go_6) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  
  cv::Scharr((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6,arg7);
  
}


void _wrap_Scharr__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, double _swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  double arg6 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  
  cv::Scharr((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6);
  
}


void _wrap_Scharr__SWIG_3_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::Scharr((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5);
  
}


void _wrap_Laplacian__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, double _swig_go_4, double _swig_go_5, intgo _swig_go_6) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  double arg5 ;
  double arg6 ;
  int arg7 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  
  cv::Laplacian((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6,arg7);
  
}


void _wrap_Laplacian__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, double _swig_go_4, double _swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  double arg5 ;
  double arg6 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  
  cv::Laplacian((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6);
  
}


void _wrap_Laplacian__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, double _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  double arg5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  cv::Laplacian((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5);
  
}


void _wrap_Laplacian__SWIG_3_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  cv::Laplacian((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4);
  
}


void _wrap_Laplacian__SWIG_4_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  cv::Laplacian((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3);
  
}


void _wrap_Canny__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, double _swig_go_2, double _swig_go_3, intgo _swig_go_4, bool _swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  int arg5 ;
  bool arg6 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (bool)_swig_go_5; 
  
  cv::Canny((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6);
  
}


void _wrap_Canny__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, double _swig_go_2, double _swig_go_3, intgo _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  int arg5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::Canny((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5);
  
}


void _wrap_Canny__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, double _swig_go_2, double _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  cv::Canny((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4);
  
}


void _wrap_cornerMinEigenVal__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::cornerMinEigenVal((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5);
  
}


void _wrap_cornerMinEigenVal__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  cv::cornerMinEigenVal((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4);
  
}


void _wrap_cornerMinEigenVal__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  cv::cornerMinEigenVal((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3);
  
}


void _wrap_cornerHarris__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, double _swig_go_4, intgo _swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  double arg5 ;
  int arg6 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  cv::cornerHarris((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6);
  
}


void _wrap_cornerHarris__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, double _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  double arg5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  cv::cornerHarris((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5);
  
}


void _wrap_eigen2x2_cv_dbcbba478e71899d(float *_swig_go_0, float *_swig_go_1, intgo _swig_go_2) {
  float *arg1 = (float *) 0 ;
  float *arg2 = (float *) 0 ;
  int arg3 ;
  
  arg1 = *(float **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  cv::eigen2x2((float const *)arg1,arg2,arg3);
  
}


void _wrap_cornerEigenValsAndVecs__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::cornerEigenValsAndVecs((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5);
  
}


void _wrap_cornerEigenValsAndVecs__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  cv::cornerEigenValsAndVecs((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4);
  
}


void _wrap_preCornerDetect__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  cv::preCornerDetect((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4);
  
}


void _wrap_preCornerDetect__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  cv::preCornerDetect((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3);
  
}


void _wrap_cornerSubPix_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::Size_< int > *_swig_go_2, cv::Size_< int > *_swig_go_3, cv::TermCriteria *_swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg3 ;
  SwigValueWrapper< cv::Size_< int > > arg4 ;
  cv::TermCriteria arg5 ;
  cv::Size *argp3 ;
  cv::Size *argp4 ;
  cv::TermCriteria *argp5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  argp3 = (cv::Size *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg3 = (cv::Size)*argp3;
  
  
  argp4 = (cv::Size *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg4 = (cv::Size)*argp4;
  
  
  argp5 = (cv::TermCriteria *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::TermCriteria");
  }
  arg5 = (cv::TermCriteria)*argp5;
  
  
  cv::cornerSubPix((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5);
  
}


void _wrap_goodFeaturesToTrack__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, double _swig_go_3, double _swig_go_4, cv::_InputArray *_swig_go_5, intgo _swig_go_6, bool _swig_go_7, double _swig_go_8) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  double arg5 ;
  cv::_InputArray *arg6 = 0 ;
  int arg7 ;
  bool arg8 ;
  double arg9 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = *(cv::_InputArray **)&_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  arg8 = (bool)_swig_go_7; 
  arg9 = (double)_swig_go_8; 
  
  cv::goodFeaturesToTrack((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,(cv::_InputArray const &)*arg6,arg7,arg8,arg9);
  
}


void _wrap_goodFeaturesToTrack__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, double _swig_go_3, double _swig_go_4, cv::_InputArray *_swig_go_5, intgo _swig_go_6, bool _swig_go_7) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  double arg5 ;
  cv::_InputArray *arg6 = 0 ;
  int arg7 ;
  bool arg8 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = *(cv::_InputArray **)&_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  arg8 = (bool)_swig_go_7; 
  
  cv::goodFeaturesToTrack((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,(cv::_InputArray const &)*arg6,arg7,arg8);
  
}


void _wrap_goodFeaturesToTrack__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, double _swig_go_3, double _swig_go_4, cv::_InputArray *_swig_go_5, intgo _swig_go_6) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  double arg5 ;
  cv::_InputArray *arg6 = 0 ;
  int arg7 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = *(cv::_InputArray **)&_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  
  cv::goodFeaturesToTrack((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,(cv::_InputArray const &)*arg6,arg7);
  
}


void _wrap_goodFeaturesToTrack__SWIG_3_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, double _swig_go_3, double _swig_go_4, cv::_InputArray *_swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  double arg5 ;
  cv::_InputArray *arg6 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = *(cv::_InputArray **)&_swig_go_5; 
  
  cv::goodFeaturesToTrack((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,(cv::_InputArray const &)*arg6);
  
}


void _wrap_goodFeaturesToTrack__SWIG_4_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, double _swig_go_3, double _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  double arg5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  cv::goodFeaturesToTrack((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5);
  
}


void _wrap_HoughLines__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, double _swig_go_2, double _swig_go_3, intgo _swig_go_4, double _swig_go_5, double _swig_go_6) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  
  cv::HoughLines((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6,arg7);
  
}


void _wrap_HoughLines__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, double _swig_go_2, double _swig_go_3, intgo _swig_go_4, double _swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  
  cv::HoughLines((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6);
  
}


void _wrap_HoughLines__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, double _swig_go_2, double _swig_go_3, intgo _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  int arg5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::HoughLines((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5);
  
}


void _wrap_HoughLinesP__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, double _swig_go_2, double _swig_go_3, intgo _swig_go_4, double _swig_go_5, double _swig_go_6) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  
  cv::HoughLinesP((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6,arg7);
  
}


void _wrap_HoughLinesP__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, double _swig_go_2, double _swig_go_3, intgo _swig_go_4, double _swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  
  cv::HoughLinesP((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6);
  
}


void _wrap_HoughLinesP__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, double _swig_go_2, double _swig_go_3, intgo _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  int arg5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::HoughLinesP((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5);
  
}


void _wrap_HoughCircles__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, double _swig_go_3, double _swig_go_4, double _swig_go_5, double _swig_go_6, intgo _swig_go_7, intgo _swig_go_8) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  double arg7 ;
  int arg8 ;
  int arg9 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  arg9 = (int)_swig_go_8; 
  
  cv::HoughCircles((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  
}


void _wrap_HoughCircles__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, double _swig_go_3, double _swig_go_4, double _swig_go_5, double _swig_go_6, intgo _swig_go_7) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  double arg7 ;
  int arg8 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  
  cv::HoughCircles((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  
}


void _wrap_HoughCircles__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, double _swig_go_3, double _swig_go_4, double _swig_go_5, double _swig_go_6) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  double arg7 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  
  cv::HoughCircles((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6,arg7);
  
}


void _wrap_HoughCircles__SWIG_3_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, double _swig_go_3, double _swig_go_4, double _swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  
  cv::HoughCircles((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6);
  
}


void _wrap_HoughCircles__SWIG_4_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, double _swig_go_3, double _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  double arg5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  cv::HoughCircles((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5);
  
}


intgo _wrap_GHT_POSITION_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::GHT_POSITION;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_GHT_SCALE_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::GHT_SCALE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_GHT_ROTATION_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::GHT_ROTATION;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


cv::Ptr< cv::GeneralizedHough > *_wrap_GeneralizedHough_create_cv_dbcbba478e71899d(intgo _swig_go_0) {
  int arg1 ;
  SwigValueWrapper< cv::Ptr< cv::GeneralizedHough > > result;
  cv::Ptr< cv::GeneralizedHough > *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = cv::GeneralizedHough::create(arg1);
  *(cv::Ptr< cv::GeneralizedHough > **)&_swig_go_result = new cv::Ptr< cv::GeneralizedHough >(result); 
  return _swig_go_result;
}


void _wrap_delete_GeneralizedHough_cv_dbcbba478e71899d(cv::GeneralizedHough *_swig_go_0) {
  cv::GeneralizedHough *arg1 = (cv::GeneralizedHough *) 0 ;
  
  arg1 = *(cv::GeneralizedHough **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_GeneralizedHough_setTemplate__SWIG_0_cv_dbcbba478e71899d(cv::GeneralizedHough *_swig_go_0, cv::_InputArray *_swig_go_1, intgo _swig_go_2, cv::Point_< int > *_swig_go_3) {
  cv::GeneralizedHough *arg1 = (cv::GeneralizedHough *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  int arg3 ;
  SwigValueWrapper< cv::Point_< int > > arg4 ;
  cv::Point *argp4 ;
  
  arg1 = *(cv::GeneralizedHough **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  argp4 = (cv::Point *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg4 = (cv::Point)*argp4;
  
  
  (arg1)->setTemplate((cv::_InputArray const &)*arg2,arg3,arg4);
  
}


void _wrap_GeneralizedHough_setTemplate__SWIG_1_cv_dbcbba478e71899d(cv::GeneralizedHough *_swig_go_0, cv::_InputArray *_swig_go_1, intgo _swig_go_2) {
  cv::GeneralizedHough *arg1 = (cv::GeneralizedHough *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  int arg3 ;
  
  arg1 = *(cv::GeneralizedHough **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  (arg1)->setTemplate((cv::_InputArray const &)*arg2,arg3);
  
}


void _wrap_GeneralizedHough_setTemplate__SWIG_2_cv_dbcbba478e71899d(cv::GeneralizedHough *_swig_go_0, cv::_InputArray *_swig_go_1) {
  cv::GeneralizedHough *arg1 = (cv::GeneralizedHough *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  
  arg1 = *(cv::GeneralizedHough **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  
  (arg1)->setTemplate((cv::_InputArray const &)*arg2);
  
}


void _wrap_GeneralizedHough_setTemplate__SWIG_3_cv_dbcbba478e71899d(cv::GeneralizedHough *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::_InputArray *_swig_go_3, cv::Point_< int > *_swig_go_4) {
  cv::GeneralizedHough *arg1 = (cv::GeneralizedHough *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  cv::_InputArray *arg4 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg5 ;
  cv::Point *argp5 ;
  
  arg1 = *(cv::GeneralizedHough **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  
  argp5 = (cv::Point *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg5 = (cv::Point)*argp5;
  
  
  (arg1)->setTemplate((cv::_InputArray const &)*arg2,(cv::_InputArray const &)*arg3,(cv::_InputArray const &)*arg4,arg5);
  
}


void _wrap_GeneralizedHough_setTemplate__SWIG_4_cv_dbcbba478e71899d(cv::GeneralizedHough *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::_InputArray *_swig_go_3) {
  cv::GeneralizedHough *arg1 = (cv::GeneralizedHough *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  cv::_InputArray *arg4 = 0 ;
  
  arg1 = *(cv::GeneralizedHough **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  
  (arg1)->setTemplate((cv::_InputArray const &)*arg2,(cv::_InputArray const &)*arg3,(cv::_InputArray const &)*arg4);
  
}


void _wrap_GeneralizedHough_detect__SWIG_0_cv_dbcbba478e71899d(cv::GeneralizedHough *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, cv::_OutputArray *_swig_go_3, intgo _swig_go_4) {
  cv::GeneralizedHough *arg1 = (cv::GeneralizedHough *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  cv::_OutputArray *arg4 = 0 ;
  int arg5 ;
  
  arg1 = *(cv::GeneralizedHough **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = *(cv::_OutputArray **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  (arg1)->detect((cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,(cv::_OutputArray const &)*arg4,arg5);
  
}


void _wrap_GeneralizedHough_detect__SWIG_1_cv_dbcbba478e71899d(cv::GeneralizedHough *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, cv::_OutputArray *_swig_go_3) {
  cv::GeneralizedHough *arg1 = (cv::GeneralizedHough *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  cv::_OutputArray *arg4 = 0 ;
  
  arg1 = *(cv::GeneralizedHough **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = *(cv::_OutputArray **)&_swig_go_3; 
  
  (arg1)->detect((cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,(cv::_OutputArray const &)*arg4);
  
}


void _wrap_GeneralizedHough_detect__SWIG_2_cv_dbcbba478e71899d(cv::GeneralizedHough *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2) {
  cv::GeneralizedHough *arg1 = (cv::GeneralizedHough *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  
  arg1 = *(cv::GeneralizedHough **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  (arg1)->detect((cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3);
  
}


void _wrap_GeneralizedHough_detect__SWIG_3_cv_dbcbba478e71899d(cv::GeneralizedHough *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::_InputArray *_swig_go_3, cv::_OutputArray *_swig_go_4, cv::_OutputArray *_swig_go_5) {
  cv::GeneralizedHough *arg1 = (cv::GeneralizedHough *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  cv::_InputArray *arg4 = 0 ;
  cv::_OutputArray *arg5 = 0 ;
  cv::_OutputArray *arg6 = 0 ;
  
  arg1 = *(cv::GeneralizedHough **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  arg5 = *(cv::_OutputArray **)&_swig_go_4; 
  arg6 = *(cv::_OutputArray **)&_swig_go_5; 
  
  (arg1)->detect((cv::_InputArray const &)*arg2,(cv::_InputArray const &)*arg3,(cv::_InputArray const &)*arg4,(cv::_OutputArray const &)*arg5,(cv::_OutputArray const &)*arg6);
  
}


void _wrap_GeneralizedHough_detect__SWIG_4_cv_dbcbba478e71899d(cv::GeneralizedHough *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::_InputArray *_swig_go_3, cv::_OutputArray *_swig_go_4) {
  cv::GeneralizedHough *arg1 = (cv::GeneralizedHough *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  cv::_InputArray *arg4 = 0 ;
  cv::_OutputArray *arg5 = 0 ;
  
  arg1 = *(cv::GeneralizedHough **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  arg5 = *(cv::_OutputArray **)&_swig_go_4; 
  
  (arg1)->detect((cv::_InputArray const &)*arg2,(cv::_InputArray const &)*arg3,(cv::_InputArray const &)*arg4,(cv::_OutputArray const &)*arg5);
  
}


void _wrap_GeneralizedHough_release_cv_dbcbba478e71899d(cv::GeneralizedHough *_swig_go_0) {
  cv::GeneralizedHough *arg1 = (cv::GeneralizedHough *) 0 ;
  
  arg1 = *(cv::GeneralizedHough **)&_swig_go_0; 
  
  (arg1)->release();
  
}


void _wrap_erode__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::Point_< int > *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5, cv::Scalar_< double > *_swig_go_6) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg4 ;
  int arg5 ;
  int arg6 ;
  cv::Scalar *arg7 = 0 ;
  cv::Point *argp4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  argp4 = (cv::Point *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg4 = (cv::Point)*argp4;
  
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = *(cv::Scalar **)&_swig_go_6; 
  
  cv::erode((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_InputArray const &)*arg3,arg4,arg5,arg6,(cv::Scalar_< double > const &)*arg7);
  
}


void _wrap_erode__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::Point_< int > *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg4 ;
  int arg5 ;
  int arg6 ;
  cv::Point *argp4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  argp4 = (cv::Point *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg4 = (cv::Point)*argp4;
  
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  cv::erode((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_InputArray const &)*arg3,arg4,arg5,arg6);
  
}


void _wrap_erode__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::Point_< int > *_swig_go_3, intgo _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg4 ;
  int arg5 ;
  cv::Point *argp4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  argp4 = (cv::Point *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg4 = (cv::Point)*argp4;
  
  arg5 = (int)_swig_go_4; 
  
  cv::erode((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_InputArray const &)*arg3,arg4,arg5);
  
}


void _wrap_erode__SWIG_3_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::Point_< int > *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg4 ;
  cv::Point *argp4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  argp4 = (cv::Point *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg4 = (cv::Point)*argp4;
  
  
  cv::erode((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_InputArray const &)*arg3,arg4);
  
}


void _wrap_erode__SWIG_4_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_InputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  cv::erode((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_InputArray const &)*arg3);
  
}


void _wrap_dilate__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::Point_< int > *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5, cv::Scalar_< double > *_swig_go_6) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg4 ;
  int arg5 ;
  int arg6 ;
  cv::Scalar *arg7 = 0 ;
  cv::Point *argp4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  argp4 = (cv::Point *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg4 = (cv::Point)*argp4;
  
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = *(cv::Scalar **)&_swig_go_6; 
  
  cv::dilate((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_InputArray const &)*arg3,arg4,arg5,arg6,(cv::Scalar_< double > const &)*arg7);
  
}


void _wrap_dilate__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::Point_< int > *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg4 ;
  int arg5 ;
  int arg6 ;
  cv::Point *argp4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  argp4 = (cv::Point *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg4 = (cv::Point)*argp4;
  
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  cv::dilate((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_InputArray const &)*arg3,arg4,arg5,arg6);
  
}


void _wrap_dilate__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::Point_< int > *_swig_go_3, intgo _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg4 ;
  int arg5 ;
  cv::Point *argp4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  argp4 = (cv::Point *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg4 = (cv::Point)*argp4;
  
  arg5 = (int)_swig_go_4; 
  
  cv::dilate((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_InputArray const &)*arg3,arg4,arg5);
  
}


void _wrap_dilate__SWIG_3_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::Point_< int > *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg4 ;
  cv::Point *argp4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  argp4 = (cv::Point *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg4 = (cv::Point)*argp4;
  
  
  cv::dilate((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_InputArray const &)*arg3,arg4);
  
}


void _wrap_dilate__SWIG_4_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_InputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  cv::dilate((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_InputArray const &)*arg3);
  
}


void _wrap_morphologyEx__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, cv::_InputArray *_swig_go_3, cv::Point_< int > *_swig_go_4, intgo _swig_go_5, intgo _swig_go_6, cv::Scalar_< double > *_swig_go_7) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  cv::_InputArray *arg4 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg5 ;
  int arg6 ;
  int arg7 ;
  cv::Scalar *arg8 = 0 ;
  cv::Point *argp5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  
  argp5 = (cv::Point *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg5 = (cv::Point)*argp5;
  
  arg6 = (int)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  arg8 = *(cv::Scalar **)&_swig_go_7; 
  
  cv::morphologyEx((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,(cv::_InputArray const &)*arg4,arg5,arg6,arg7,(cv::Scalar_< double > const &)*arg8);
  
}


void _wrap_morphologyEx__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, cv::_InputArray *_swig_go_3, cv::Point_< int > *_swig_go_4, intgo _swig_go_5, intgo _swig_go_6) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  cv::_InputArray *arg4 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg5 ;
  int arg6 ;
  int arg7 ;
  cv::Point *argp5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  
  argp5 = (cv::Point *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg5 = (cv::Point)*argp5;
  
  arg6 = (int)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  
  cv::morphologyEx((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,(cv::_InputArray const &)*arg4,arg5,arg6,arg7);
  
}


void _wrap_morphologyEx__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, cv::_InputArray *_swig_go_3, cv::Point_< int > *_swig_go_4, intgo _swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  cv::_InputArray *arg4 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg5 ;
  int arg6 ;
  cv::Point *argp5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  
  argp5 = (cv::Point *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg5 = (cv::Point)*argp5;
  
  arg6 = (int)_swig_go_5; 
  
  cv::morphologyEx((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,(cv::_InputArray const &)*arg4,arg5,arg6);
  
}


void _wrap_morphologyEx__SWIG_3_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, cv::_InputArray *_swig_go_3, cv::Point_< int > *_swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  cv::_InputArray *arg4 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg5 ;
  cv::Point *argp5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  
  argp5 = (cv::Point *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg5 = (cv::Point)*argp5;
  
  
  cv::morphologyEx((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,(cv::_InputArray const &)*arg4,arg5);
  
}


void _wrap_morphologyEx__SWIG_4_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, cv::_InputArray *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  cv::_InputArray *arg4 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  
  cv::morphologyEx((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,(cv::_InputArray const &)*arg4);
  
}


intgo _wrap_INTER_NEAREST_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::INTER_NEAREST;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_INTER_LINEAR_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::INTER_LINEAR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_INTER_CUBIC_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::INTER_CUBIC;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_INTER_AREA_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::INTER_AREA;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_INTER_LANCZOS4_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::INTER_LANCZOS4;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_INTER_MAX_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::INTER_MAX;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_WARP_INVERSE_MAP_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::WARP_INVERSE_MAP;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_resize__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::Size_< int > *_swig_go_2, double _swig_go_3, double _swig_go_4, intgo _swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg3 ;
  double arg4 ;
  double arg5 ;
  int arg6 ;
  cv::Size *argp3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  argp3 = (cv::Size *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg3 = (cv::Size)*argp3;
  
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  cv::resize((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6);
  
}


void _wrap_resize__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::Size_< int > *_swig_go_2, double _swig_go_3, double _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg3 ;
  double arg4 ;
  double arg5 ;
  cv::Size *argp3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  argp3 = (cv::Size *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg3 = (cv::Size)*argp3;
  
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  
  cv::resize((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5);
  
}


void _wrap_resize__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::Size_< int > *_swig_go_2, double _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg3 ;
  double arg4 ;
  cv::Size *argp3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  argp3 = (cv::Size *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg3 = (cv::Size)*argp3;
  
  arg4 = (double)_swig_go_3; 
  
  cv::resize((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4);
  
}


void _wrap_resize__SWIG_3_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::Size_< int > *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg3 ;
  cv::Size *argp3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  argp3 = (cv::Size *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg3 = (cv::Size)*argp3;
  
  
  cv::resize((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3);
  
}


void _wrap_warpAffine__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::Size_< int > *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5, cv::Scalar_< double > *_swig_go_6) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg4 ;
  int arg5 ;
  int arg6 ;
  cv::Scalar *arg7 = 0 ;
  cv::Size *argp4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  argp4 = (cv::Size *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg4 = (cv::Size)*argp4;
  
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = *(cv::Scalar **)&_swig_go_6; 
  
  cv::warpAffine((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_InputArray const &)*arg3,arg4,arg5,arg6,(cv::Scalar_< double > const &)*arg7);
  
}


void _wrap_warpAffine__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::Size_< int > *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg4 ;
  int arg5 ;
  int arg6 ;
  cv::Size *argp4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  argp4 = (cv::Size *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg4 = (cv::Size)*argp4;
  
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  cv::warpAffine((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_InputArray const &)*arg3,arg4,arg5,arg6);
  
}


void _wrap_warpAffine__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::Size_< int > *_swig_go_3, intgo _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg4 ;
  int arg5 ;
  cv::Size *argp4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  argp4 = (cv::Size *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg4 = (cv::Size)*argp4;
  
  arg5 = (int)_swig_go_4; 
  
  cv::warpAffine((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_InputArray const &)*arg3,arg4,arg5);
  
}


void _wrap_warpAffine__SWIG_3_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::Size_< int > *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg4 ;
  cv::Size *argp4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  argp4 = (cv::Size *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg4 = (cv::Size)*argp4;
  
  
  cv::warpAffine((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_InputArray const &)*arg3,arg4);
  
}


void _wrap_warpPerspective__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::Size_< int > *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5, cv::Scalar_< double > *_swig_go_6) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg4 ;
  int arg5 ;
  int arg6 ;
  cv::Scalar *arg7 = 0 ;
  cv::Size *argp4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  argp4 = (cv::Size *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg4 = (cv::Size)*argp4;
  
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = *(cv::Scalar **)&_swig_go_6; 
  
  cv::warpPerspective((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_InputArray const &)*arg3,arg4,arg5,arg6,(cv::Scalar_< double > const &)*arg7);
  
}


void _wrap_warpPerspective__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::Size_< int > *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg4 ;
  int arg5 ;
  int arg6 ;
  cv::Size *argp4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  argp4 = (cv::Size *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg4 = (cv::Size)*argp4;
  
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  cv::warpPerspective((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_InputArray const &)*arg3,arg4,arg5,arg6);
  
}


void _wrap_warpPerspective__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::Size_< int > *_swig_go_3, intgo _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg4 ;
  int arg5 ;
  cv::Size *argp4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  argp4 = (cv::Size *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg4 = (cv::Size)*argp4;
  
  arg5 = (int)_swig_go_4; 
  
  cv::warpPerspective((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_InputArray const &)*arg3,arg4,arg5);
  
}


void _wrap_warpPerspective__SWIG_3_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::Size_< int > *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg4 ;
  cv::Size *argp4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  argp4 = (cv::Size *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg4 = (cv::Size)*argp4;
  
  
  cv::warpPerspective((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_InputArray const &)*arg3,arg4);
  
}


intgo _wrap_INTER_BITS_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::INTER_BITS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_INTER_BITS2_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::INTER_BITS2;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_INTER_TAB_SIZE_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::INTER_TAB_SIZE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_INTER_TAB_SIZE2_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::INTER_TAB_SIZE2;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_remap__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::_InputArray *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5, cv::Scalar_< double > *_swig_go_6) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  cv::_InputArray *arg4 = 0 ;
  int arg5 ;
  int arg6 ;
  cv::Scalar *arg7 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = *(cv::Scalar **)&_swig_go_6; 
  
  cv::remap((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_InputArray const &)*arg3,(cv::_InputArray const &)*arg4,arg5,arg6,(cv::Scalar_< double > const &)*arg7);
  
}


void _wrap_remap__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::_InputArray *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  cv::_InputArray *arg4 = 0 ;
  int arg5 ;
  int arg6 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  cv::remap((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_InputArray const &)*arg3,(cv::_InputArray const &)*arg4,arg5,arg6);
  
}


void _wrap_remap__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::_InputArray *_swig_go_3, intgo _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  cv::_InputArray *arg4 = 0 ;
  int arg5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::remap((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_InputArray const &)*arg3,(cv::_InputArray const &)*arg4,arg5);
  
}


void _wrap_convertMaps__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, cv::_OutputArray *_swig_go_3, intgo _swig_go_4, bool _swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  cv::_OutputArray *arg4 = 0 ;
  int arg5 ;
  bool arg6 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = *(cv::_OutputArray **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (bool)_swig_go_5; 
  
  cv::convertMaps((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,(cv::_OutputArray const &)*arg4,arg5,arg6);
  
}


void _wrap_convertMaps__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, cv::_OutputArray *_swig_go_3, intgo _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  cv::_OutputArray *arg4 = 0 ;
  int arg5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = *(cv::_OutputArray **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::convertMaps((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,(cv::_OutputArray const &)*arg4,arg5);
  
}


cv::Mat *_wrap_getRotationMatrix2D_cv_dbcbba478e71899d(cv::Point_< float > *_swig_go_0, double _swig_go_1, double _swig_go_2) {
  SwigValueWrapper< cv::Point_< float > > arg1 ;
  double arg2 ;
  double arg3 ;
  cv::Point2f *argp1 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  
  argp1 = (cv::Point2f *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point2f");
  }
  arg1 = (cv::Point2f)*argp1;
  
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  result = cv::getRotationMatrix2D(arg1,arg2,arg3);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


cv::Mat *_wrap_getPerspectiveTransform__SWIG_0_cv_dbcbba478e71899d(cv::Point_< float > *_swig_go_0, cv::Point_< float > *_swig_go_1) {
  cv::Point2f *arg1 ;
  cv::Point2f *arg2 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::Point2f **)&_swig_go_0; 
  arg2 = *(cv::Point2f **)&_swig_go_1; 
  
  result = cv::getPerspectiveTransform((cv::Point_< float > const (*))arg1,(cv::Point_< float > const (*))arg2);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


cv::Mat *_wrap_getAffineTransform__SWIG_0_cv_dbcbba478e71899d(cv::Point_< float > *_swig_go_0, cv::Point_< float > *_swig_go_1) {
  cv::Point2f *arg1 ;
  cv::Point2f *arg2 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::Point2f **)&_swig_go_0; 
  arg2 = *(cv::Point2f **)&_swig_go_1; 
  
  result = cv::getAffineTransform((cv::Point_< float > const (*))arg1,(cv::Point_< float > const (*))arg2);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


void _wrap_invertAffineTransform_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  cv::invertAffineTransform((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2);
  
}


cv::Mat *_wrap_getPerspectiveTransform__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  
  result = cv::getPerspectiveTransform((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


cv::Mat *_wrap_getAffineTransform__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  
  result = cv::getAffineTransform((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


void _wrap_getRectSubPix__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::Size_< int > *_swig_go_1, cv::Point_< float > *_swig_go_2, cv::_OutputArray *_swig_go_3, intgo _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg2 ;
  SwigValueWrapper< cv::Point_< float > > arg3 ;
  cv::_OutputArray *arg4 = 0 ;
  int arg5 ;
  cv::Size *argp2 ;
  cv::Point2f *argp3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  argp2 = (cv::Size *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg2 = (cv::Size)*argp2;
  
  
  argp3 = (cv::Point2f *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point2f");
  }
  arg3 = (cv::Point2f)*argp3;
  
  arg4 = *(cv::_OutputArray **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::getRectSubPix((cv::_InputArray const &)*arg1,arg2,arg3,(cv::_OutputArray const &)*arg4,arg5);
  
}


void _wrap_getRectSubPix__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::Size_< int > *_swig_go_1, cv::Point_< float > *_swig_go_2, cv::_OutputArray *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg2 ;
  SwigValueWrapper< cv::Point_< float > > arg3 ;
  cv::_OutputArray *arg4 = 0 ;
  cv::Size *argp2 ;
  cv::Point2f *argp3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  argp2 = (cv::Size *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg2 = (cv::Size)*argp2;
  
  
  argp3 = (cv::Point2f *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point2f");
  }
  arg3 = (cv::Point2f)*argp3;
  
  arg4 = *(cv::_OutputArray **)&_swig_go_3; 
  
  cv::getRectSubPix((cv::_InputArray const &)*arg1,arg2,arg3,(cv::_OutputArray const &)*arg4);
  
}


void _wrap_integral__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  cv::integral((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3);
  
}


void _wrap_integral__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  cv::integral((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2);
  
}


void _wrap_integral__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, intgo _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  int arg4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  cv::integral((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_OutputArray const &)*arg3,arg4);
  
}


void _wrap_integral__SWIG_3_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_OutputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  cv::integral((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_OutputArray const &)*arg3);
  
}


void _wrap_integral__SWIG_4_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, cv::_OutputArray *_swig_go_3, intgo _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  cv::_OutputArray *arg4 = 0 ;
  int arg5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = *(cv::_OutputArray **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::integral((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_OutputArray const &)*arg3,(cv::_OutputArray const &)*arg4,arg5);
  
}


void _wrap_integral__SWIG_5_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, cv::_OutputArray *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  cv::_OutputArray *arg4 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = *(cv::_OutputArray **)&_swig_go_3; 
  
  cv::integral((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_OutputArray const &)*arg3,(cv::_OutputArray const &)*arg4);
  
}


void _wrap_accumulate__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_InputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  cv::accumulate((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_InputArray const &)*arg3);
  
}


void _wrap_accumulate__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  cv::accumulate((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2);
  
}


void _wrap_accumulateSquare__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_InputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  cv::accumulateSquare((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_InputArray const &)*arg3);
  
}


void _wrap_accumulateSquare__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  cv::accumulateSquare((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2);
  
}


void _wrap_accumulateProduct__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, cv::_InputArray *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  cv::_InputArray *arg4 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  
  cv::accumulateProduct((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,(cv::_InputArray const &)*arg4);
  
}


void _wrap_accumulateProduct__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  cv::accumulateProduct((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3);
  
}


void _wrap_accumulateWeighted__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, double _swig_go_2, cv::_InputArray *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  double arg3 ;
  cv::_InputArray *arg4 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  
  cv::accumulateWeighted((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,(cv::_InputArray const &)*arg4);
  
}


void _wrap_accumulateWeighted__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, double _swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  double arg3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  cv::accumulateWeighted((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3);
  
}


double _wrap_PSNR_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  
  result = (double)cv::PSNR((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


cv::Point_< double > *_wrap_phaseCorrelate__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_InputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Point_< double > > result;
  cv::Point_< double > *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  result = cv::phaseCorrelate((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_InputArray const &)*arg3);
  *(cv::Point2d **)&_swig_go_result = new cv::Point2d(result); 
  return _swig_go_result;
}


cv::Point_< double > *_wrap_phaseCorrelate__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  SwigValueWrapper< cv::Point_< double > > result;
  cv::Point_< double > *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  
  result = cv::phaseCorrelate((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2);
  *(cv::Point2d **)&_swig_go_result = new cv::Point2d(result); 
  return _swig_go_result;
}


cv::Point_< double > *_wrap_phaseCorrelateRes__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_InputArray *_swig_go_2, double *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  double *arg4 = (double *) 0 ;
  SwigValueWrapper< cv::Point_< double > > result;
  cv::Point_< double > *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = *(double **)&_swig_go_3; 
  
  result = cv::phaseCorrelateRes((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_InputArray const &)*arg3,arg4);
  *(cv::Point2d **)&_swig_go_result = new cv::Point2d(result); 
  return _swig_go_result;
}


cv::Point_< double > *_wrap_phaseCorrelateRes__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_InputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  SwigValueWrapper< cv::Point_< double > > result;
  cv::Point_< double > *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  
  result = cv::phaseCorrelateRes((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_InputArray const &)*arg3);
  *(cv::Point2d **)&_swig_go_result = new cv::Point2d(result); 
  return _swig_go_result;
}


void _wrap_createHanningWindow_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::Size_< int > *_swig_go_1, intgo _swig_go_2) {
  cv::_OutputArray *arg1 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg2 ;
  int arg3 ;
  cv::Size *argp2 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  argp2 = (cv::Size *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg2 = (cv::Size)*argp2;
  
  arg3 = (int)_swig_go_2; 
  
  cv::createHanningWindow((cv::_OutputArray const &)*arg1,arg2,arg3);
  
}


intgo _wrap_THRESH_BINARY_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::THRESH_BINARY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_THRESH_BINARY_INV_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::THRESH_BINARY_INV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_THRESH_TRUNC_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::THRESH_TRUNC;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_THRESH_TOZERO_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::THRESH_TOZERO;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_THRESH_TOZERO_INV_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::THRESH_TOZERO_INV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_THRESH_MASK_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::THRESH_MASK;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_THRESH_OTSU_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::THRESH_OTSU;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


double _wrap_threshold_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, double _swig_go_2, double _swig_go_3, intgo _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  int arg5 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  result = (double)cv::threshold((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ADAPTIVE_THRESH_MEAN_C_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::ADAPTIVE_THRESH_MEAN_C;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ADAPTIVE_THRESH_GAUSSIAN_C_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::ADAPTIVE_THRESH_GAUSSIAN_C;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_adaptiveThreshold_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, double _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, intgo _swig_go_5, double _swig_go_6) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  double arg7 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  
  cv::adaptiveThreshold((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6,arg7);
  
}


void _wrap_pyrDown__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::Size_< int > *_swig_go_2, intgo _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::Size *arg3 = 0 ;
  int arg4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::Size **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  cv::pyrDown((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::Size_< int > const &)*arg3,arg4);
  
}


void _wrap_pyrDown__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::Size_< int > *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::Size *arg3 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::Size **)&_swig_go_2; 
  
  cv::pyrDown((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::Size_< int > const &)*arg3);
  
}


void _wrap_pyrDown__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  cv::pyrDown((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2);
  
}


void _wrap_pyrUp__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::Size_< int > *_swig_go_2, intgo _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::Size *arg3 = 0 ;
  int arg4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::Size **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  cv::pyrUp((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::Size_< int > const &)*arg3,arg4);
  
}


void _wrap_pyrUp__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::Size_< int > *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::Size *arg3 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::Size **)&_swig_go_2; 
  
  cv::pyrUp((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::Size_< int > const &)*arg3);
  
}


void _wrap_pyrUp__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  cv::pyrUp((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2);
  
}


void _wrap_buildPyramid__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  cv::buildPyramid((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4);
  
}


void _wrap_buildPyramid__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  cv::buildPyramid((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3);
  
}


void _wrap_undistort__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::_InputArray *_swig_go_3, cv::_InputArray *_swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  cv::_InputArray *arg4 = 0 ;
  cv::_InputArray *arg5 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  arg5 = *(cv::_InputArray **)&_swig_go_4; 
  
  cv::undistort((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_InputArray const &)*arg3,(cv::_InputArray const &)*arg4,(cv::_InputArray const &)*arg5);
  
}


void _wrap_undistort__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::_InputArray *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  cv::_InputArray *arg4 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  
  cv::undistort((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_InputArray const &)*arg3,(cv::_InputArray const &)*arg4);
  
}


void _wrap_initUndistortRectifyMap_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::_InputArray *_swig_go_3, cv::Size_< int > *_swig_go_4, intgo _swig_go_5, cv::_OutputArray *_swig_go_6, cv::_OutputArray *_swig_go_7) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  cv::_InputArray *arg4 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg5 ;
  int arg6 ;
  cv::_OutputArray *arg7 = 0 ;
  cv::_OutputArray *arg8 = 0 ;
  cv::Size *argp5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  
  argp5 = (cv::Size *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg5 = (cv::Size)*argp5;
  
  arg6 = (int)_swig_go_5; 
  arg7 = *(cv::_OutputArray **)&_swig_go_6; 
  arg8 = *(cv::_OutputArray **)&_swig_go_7; 
  
  cv::initUndistortRectifyMap((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_InputArray const &)*arg3,(cv::_InputArray const &)*arg4,arg5,arg6,(cv::_OutputArray const &)*arg7,(cv::_OutputArray const &)*arg8);
  
}


intgo _wrap_PROJ_SPHERICAL_ORTHO_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::PROJ_SPHERICAL_ORTHO;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_PROJ_SPHERICAL_EQRECT_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::PROJ_SPHERICAL_EQRECT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


float _wrap_initWideAngleProjMap__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::Size_< int > *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4, cv::_OutputArray *_swig_go_5, cv::_OutputArray *_swig_go_6, intgo _swig_go_7, double _swig_go_8) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg3 ;
  int arg4 ;
  int arg5 ;
  cv::_OutputArray *arg6 = 0 ;
  cv::_OutputArray *arg7 = 0 ;
  int arg8 ;
  double arg9 ;
  cv::Size *argp3 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  
  argp3 = (cv::Size *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg3 = (cv::Size)*argp3;
  
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = *(cv::_OutputArray **)&_swig_go_5; 
  arg7 = *(cv::_OutputArray **)&_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  arg9 = (double)_swig_go_8; 
  
  result = (float)cv::initWideAngleProjMap((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,arg3,arg4,arg5,(cv::_OutputArray const &)*arg6,(cv::_OutputArray const &)*arg7,arg8,arg9);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_initWideAngleProjMap__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::Size_< int > *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4, cv::_OutputArray *_swig_go_5, cv::_OutputArray *_swig_go_6, intgo _swig_go_7) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg3 ;
  int arg4 ;
  int arg5 ;
  cv::_OutputArray *arg6 = 0 ;
  cv::_OutputArray *arg7 = 0 ;
  int arg8 ;
  cv::Size *argp3 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  
  argp3 = (cv::Size *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg3 = (cv::Size)*argp3;
  
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = *(cv::_OutputArray **)&_swig_go_5; 
  arg7 = *(cv::_OutputArray **)&_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  
  result = (float)cv::initWideAngleProjMap((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,arg3,arg4,arg5,(cv::_OutputArray const &)*arg6,(cv::_OutputArray const &)*arg7,arg8);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_initWideAngleProjMap__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::Size_< int > *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4, cv::_OutputArray *_swig_go_5, cv::_OutputArray *_swig_go_6) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg3 ;
  int arg4 ;
  int arg5 ;
  cv::_OutputArray *arg6 = 0 ;
  cv::_OutputArray *arg7 = 0 ;
  cv::Size *argp3 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  
  argp3 = (cv::Size *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg3 = (cv::Size)*argp3;
  
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = *(cv::_OutputArray **)&_swig_go_5; 
  arg7 = *(cv::_OutputArray **)&_swig_go_6; 
  
  result = (float)cv::initWideAngleProjMap((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,arg3,arg4,arg5,(cv::_OutputArray const &)*arg6,(cv::_OutputArray const &)*arg7);
  _swig_go_result = result; 
  return _swig_go_result;
}


cv::Mat *_wrap_getDefaultNewCameraMatrix__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::Size_< int > *_swig_go_1, bool _swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg2 ;
  bool arg3 ;
  cv::Size *argp2 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  argp2 = (cv::Size *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg2 = (cv::Size)*argp2;
  
  arg3 = (bool)_swig_go_2; 
  
  result = cv::getDefaultNewCameraMatrix((cv::_InputArray const &)*arg1,arg2,arg3);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


cv::Mat *_wrap_getDefaultNewCameraMatrix__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::Size_< int > *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  SwigValueWrapper< cv::Size_< int > > arg2 ;
  cv::Size *argp2 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  argp2 = (cv::Size *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg2 = (cv::Size)*argp2;
  
  
  result = cv::getDefaultNewCameraMatrix((cv::_InputArray const &)*arg1,arg2);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


cv::Mat *_wrap_getDefaultNewCameraMatrix__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0) {
  cv::_InputArray *arg1 = 0 ;
  cv::Mat result;
  cv::Mat *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  result = cv::getDefaultNewCameraMatrix((cv::_InputArray const &)*arg1);
  *(cv::Mat **)&_swig_go_result = new cv::Mat(result); 
  return _swig_go_result;
}


void _wrap_undistortPoints__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::_InputArray *_swig_go_3, cv::_InputArray *_swig_go_4, cv::_InputArray *_swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  cv::_InputArray *arg4 = 0 ;
  cv::_InputArray *arg5 = 0 ;
  cv::_InputArray *arg6 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  arg5 = *(cv::_InputArray **)&_swig_go_4; 
  arg6 = *(cv::_InputArray **)&_swig_go_5; 
  
  cv::undistortPoints((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_InputArray const &)*arg3,(cv::_InputArray const &)*arg4,(cv::_InputArray const &)*arg5,(cv::_InputArray const &)*arg6);
  
}


void _wrap_undistortPoints__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::_InputArray *_swig_go_3, cv::_InputArray *_swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  cv::_InputArray *arg4 = 0 ;
  cv::_InputArray *arg5 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  arg5 = *(cv::_InputArray **)&_swig_go_4; 
  
  cv::undistortPoints((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_InputArray const &)*arg3,(cv::_InputArray const &)*arg4,(cv::_InputArray const &)*arg5);
  
}


void _wrap_undistortPoints__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_InputArray *_swig_go_2, cv::_InputArray *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  cv::_InputArray *arg4 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  
  cv::undistortPoints((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_InputArray const &)*arg3,(cv::_InputArray const &)*arg4);
  
}


void _wrap_calcHist__SWIG_0_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1, intgo *_swig_go_2, cv::_InputArray *_swig_go_3, cv::_OutputArray *_swig_go_4, intgo _swig_go_5, intgo *_swig_go_6, float **_swig_go_7, bool _swig_go_8, bool _swig_go_9) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  int *arg3 = (int *) 0 ;
  cv::_InputArray *arg4 = 0 ;
  cv::_OutputArray *arg5 = 0 ;
  int arg6 ;
  int *arg7 = (int *) 0 ;
  float **arg8 = (float **) 0 ;
  bool arg9 ;
  bool arg10 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  arg5 = *(cv::_OutputArray **)&_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = *(int **)&_swig_go_6; 
  arg8 = *(float ***)&_swig_go_7; 
  arg9 = (bool)_swig_go_8; 
  arg10 = (bool)_swig_go_9; 
  
  cv::calcHist((cv::Mat const *)arg1,arg2,(int const *)arg3,(cv::_InputArray const &)*arg4,(cv::_OutputArray const &)*arg5,arg6,(int const *)arg7,(float const **)arg8,arg9,arg10);
  
}


void _wrap_calcHist__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1, intgo *_swig_go_2, cv::_InputArray *_swig_go_3, cv::_OutputArray *_swig_go_4, intgo _swig_go_5, intgo *_swig_go_6, float **_swig_go_7, bool _swig_go_8) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  int *arg3 = (int *) 0 ;
  cv::_InputArray *arg4 = 0 ;
  cv::_OutputArray *arg5 = 0 ;
  int arg6 ;
  int *arg7 = (int *) 0 ;
  float **arg8 = (float **) 0 ;
  bool arg9 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  arg5 = *(cv::_OutputArray **)&_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = *(int **)&_swig_go_6; 
  arg8 = *(float ***)&_swig_go_7; 
  arg9 = (bool)_swig_go_8; 
  
  cv::calcHist((cv::Mat const *)arg1,arg2,(int const *)arg3,(cv::_InputArray const &)*arg4,(cv::_OutputArray const &)*arg5,arg6,(int const *)arg7,(float const **)arg8,arg9);
  
}


void _wrap_calcHist__SWIG_2_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1, intgo *_swig_go_2, cv::_InputArray *_swig_go_3, cv::_OutputArray *_swig_go_4, intgo _swig_go_5, intgo *_swig_go_6, float **_swig_go_7) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  int *arg3 = (int *) 0 ;
  cv::_InputArray *arg4 = 0 ;
  cv::_OutputArray *arg5 = 0 ;
  int arg6 ;
  int *arg7 = (int *) 0 ;
  float **arg8 = (float **) 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  arg5 = *(cv::_OutputArray **)&_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = *(int **)&_swig_go_6; 
  arg8 = *(float ***)&_swig_go_7; 
  
  cv::calcHist((cv::Mat const *)arg1,arg2,(int const *)arg3,(cv::_InputArray const &)*arg4,(cv::_OutputArray const &)*arg5,arg6,(int const *)arg7,(float const **)arg8);
  
}


void _wrap_calcHist__SWIG_3_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1, intgo *_swig_go_2, cv::_InputArray *_swig_go_3, cv::SparseMat *_swig_go_4, intgo _swig_go_5, intgo *_swig_go_6, float **_swig_go_7, bool _swig_go_8, bool _swig_go_9) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  int *arg3 = (int *) 0 ;
  cv::_InputArray *arg4 = 0 ;
  cv::SparseMat *arg5 = 0 ;
  int arg6 ;
  int *arg7 = (int *) 0 ;
  float **arg8 = (float **) 0 ;
  bool arg9 ;
  bool arg10 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  arg5 = *(cv::SparseMat **)&_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = *(int **)&_swig_go_6; 
  arg8 = *(float ***)&_swig_go_7; 
  arg9 = (bool)_swig_go_8; 
  arg10 = (bool)_swig_go_9; 
  
  cv::calcHist((cv::Mat const *)arg1,arg2,(int const *)arg3,(cv::_InputArray const &)*arg4,*arg5,arg6,(int const *)arg7,(float const **)arg8,arg9,arg10);
  
}


void _wrap_calcHist__SWIG_4_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1, intgo *_swig_go_2, cv::_InputArray *_swig_go_3, cv::SparseMat *_swig_go_4, intgo _swig_go_5, intgo *_swig_go_6, float **_swig_go_7, bool _swig_go_8) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  int *arg3 = (int *) 0 ;
  cv::_InputArray *arg4 = 0 ;
  cv::SparseMat *arg5 = 0 ;
  int arg6 ;
  int *arg7 = (int *) 0 ;
  float **arg8 = (float **) 0 ;
  bool arg9 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  arg5 = *(cv::SparseMat **)&_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = *(int **)&_swig_go_6; 
  arg8 = *(float ***)&_swig_go_7; 
  arg9 = (bool)_swig_go_8; 
  
  cv::calcHist((cv::Mat const *)arg1,arg2,(int const *)arg3,(cv::_InputArray const &)*arg4,*arg5,arg6,(int const *)arg7,(float const **)arg8,arg9);
  
}


void _wrap_calcHist__SWIG_5_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1, intgo *_swig_go_2, cv::_InputArray *_swig_go_3, cv::SparseMat *_swig_go_4, intgo _swig_go_5, intgo *_swig_go_6, float **_swig_go_7) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  int *arg3 = (int *) 0 ;
  cv::_InputArray *arg4 = 0 ;
  cv::SparseMat *arg5 = 0 ;
  int arg6 ;
  int *arg7 = (int *) 0 ;
  float **arg8 = (float **) 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  arg5 = *(cv::SparseMat **)&_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = *(int **)&_swig_go_6; 
  arg8 = *(float ***)&_swig_go_7; 
  
  cv::calcHist((cv::Mat const *)arg1,arg2,(int const *)arg3,(cv::_InputArray const &)*arg4,*arg5,arg6,(int const *)arg7,(float const **)arg8);
  
}


void _wrap_calcHist__SWIG_6_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, std::vector< int > *_swig_go_1, cv::_InputArray *_swig_go_2, cv::_OutputArray *_swig_go_3, std::vector< int > *_swig_go_4, std::vector< float > *_swig_go_5, bool _swig_go_6) {
  cv::_InputArray *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  cv::_OutputArray *arg4 = 0 ;
  std::vector< int > *arg5 = 0 ;
  std::vector< float > *arg6 = 0 ;
  bool arg7 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(std::vector< int > **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = *(cv::_OutputArray **)&_swig_go_3; 
  arg5 = *(std::vector< int > **)&_swig_go_4; 
  arg6 = *(std::vector< float > **)&_swig_go_5; 
  arg7 = (bool)_swig_go_6; 
  
  cv::calcHist((cv::_InputArray const &)*arg1,(std::vector< int > const &)*arg2,(cv::_InputArray const &)*arg3,(cv::_OutputArray const &)*arg4,(std::vector< int > const &)*arg5,(std::vector< float > const &)*arg6,arg7);
  
}


void _wrap_calcHist__SWIG_7_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, std::vector< int > *_swig_go_1, cv::_InputArray *_swig_go_2, cv::_OutputArray *_swig_go_3, std::vector< int > *_swig_go_4, std::vector< float > *_swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  cv::_OutputArray *arg4 = 0 ;
  std::vector< int > *arg5 = 0 ;
  std::vector< float > *arg6 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(std::vector< int > **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = *(cv::_OutputArray **)&_swig_go_3; 
  arg5 = *(std::vector< int > **)&_swig_go_4; 
  arg6 = *(std::vector< float > **)&_swig_go_5; 
  
  cv::calcHist((cv::_InputArray const &)*arg1,(std::vector< int > const &)*arg2,(cv::_InputArray const &)*arg3,(cv::_OutputArray const &)*arg4,(std::vector< int > const &)*arg5,(std::vector< float > const &)*arg6);
  
}


void _wrap_calcBackProject__SWIG_0_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1, intgo *_swig_go_2, cv::_InputArray *_swig_go_3, cv::_OutputArray *_swig_go_4, float **_swig_go_5, double _swig_go_6, bool _swig_go_7) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  int *arg3 = (int *) 0 ;
  cv::_InputArray *arg4 = 0 ;
  cv::_OutputArray *arg5 = 0 ;
  float **arg6 = (float **) 0 ;
  double arg7 ;
  bool arg8 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  arg5 = *(cv::_OutputArray **)&_swig_go_4; 
  arg6 = *(float ***)&_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  arg8 = (bool)_swig_go_7; 
  
  cv::calcBackProject((cv::Mat const *)arg1,arg2,(int const *)arg3,(cv::_InputArray const &)*arg4,(cv::_OutputArray const &)*arg5,(float const **)arg6,arg7,arg8);
  
}


void _wrap_calcBackProject__SWIG_1_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1, intgo *_swig_go_2, cv::_InputArray *_swig_go_3, cv::_OutputArray *_swig_go_4, float **_swig_go_5, double _swig_go_6) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  int *arg3 = (int *) 0 ;
  cv::_InputArray *arg4 = 0 ;
  cv::_OutputArray *arg5 = 0 ;
  float **arg6 = (float **) 0 ;
  double arg7 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  arg5 = *(cv::_OutputArray **)&_swig_go_4; 
  arg6 = *(float ***)&_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  
  cv::calcBackProject((cv::Mat const *)arg1,arg2,(int const *)arg3,(cv::_InputArray const &)*arg4,(cv::_OutputArray const &)*arg5,(float const **)arg6,arg7);
  
}


void _wrap_calcBackProject__SWIG_2_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1, intgo *_swig_go_2, cv::_InputArray *_swig_go_3, cv::_OutputArray *_swig_go_4, float **_swig_go_5) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  int *arg3 = (int *) 0 ;
  cv::_InputArray *arg4 = 0 ;
  cv::_OutputArray *arg5 = 0 ;
  float **arg6 = (float **) 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  arg5 = *(cv::_OutputArray **)&_swig_go_4; 
  arg6 = *(float ***)&_swig_go_5; 
  
  cv::calcBackProject((cv::Mat const *)arg1,arg2,(int const *)arg3,(cv::_InputArray const &)*arg4,(cv::_OutputArray const &)*arg5,(float const **)arg6);
  
}


void _wrap_calcBackProject__SWIG_3_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1, intgo *_swig_go_2, cv::SparseMat *_swig_go_3, cv::_OutputArray *_swig_go_4, float **_swig_go_5, double _swig_go_6, bool _swig_go_7) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  int *arg3 = (int *) 0 ;
  cv::SparseMat *arg4 = 0 ;
  cv::_OutputArray *arg5 = 0 ;
  float **arg6 = (float **) 0 ;
  double arg7 ;
  bool arg8 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = *(cv::SparseMat **)&_swig_go_3; 
  arg5 = *(cv::_OutputArray **)&_swig_go_4; 
  arg6 = *(float ***)&_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  arg8 = (bool)_swig_go_7; 
  
  cv::calcBackProject((cv::Mat const *)arg1,arg2,(int const *)arg3,(cv::SparseMat const &)*arg4,(cv::_OutputArray const &)*arg5,(float const **)arg6,arg7,arg8);
  
}


void _wrap_calcBackProject__SWIG_4_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1, intgo *_swig_go_2, cv::SparseMat *_swig_go_3, cv::_OutputArray *_swig_go_4, float **_swig_go_5, double _swig_go_6) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  int *arg3 = (int *) 0 ;
  cv::SparseMat *arg4 = 0 ;
  cv::_OutputArray *arg5 = 0 ;
  float **arg6 = (float **) 0 ;
  double arg7 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = *(cv::SparseMat **)&_swig_go_3; 
  arg5 = *(cv::_OutputArray **)&_swig_go_4; 
  arg6 = *(float ***)&_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  
  cv::calcBackProject((cv::Mat const *)arg1,arg2,(int const *)arg3,(cv::SparseMat const &)*arg4,(cv::_OutputArray const &)*arg5,(float const **)arg6,arg7);
  
}


void _wrap_calcBackProject__SWIG_5_cv_dbcbba478e71899d(cv::Mat *_swig_go_0, intgo _swig_go_1, intgo *_swig_go_2, cv::SparseMat *_swig_go_3, cv::_OutputArray *_swig_go_4, float **_swig_go_5) {
  cv::Mat *arg1 = (cv::Mat *) 0 ;
  int arg2 ;
  int *arg3 = (int *) 0 ;
  cv::SparseMat *arg4 = 0 ;
  cv::_OutputArray *arg5 = 0 ;
  float **arg6 = (float **) 0 ;
  
  arg1 = *(cv::Mat **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = *(cv::SparseMat **)&_swig_go_3; 
  arg5 = *(cv::_OutputArray **)&_swig_go_4; 
  arg6 = *(float ***)&_swig_go_5; 
  
  cv::calcBackProject((cv::Mat const *)arg1,arg2,(int const *)arg3,(cv::SparseMat const &)*arg4,(cv::_OutputArray const &)*arg5,(float const **)arg6);
  
}


void _wrap_calcBackProject__SWIG_6_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, std::vector< int > *_swig_go_1, cv::_InputArray *_swig_go_2, cv::_OutputArray *_swig_go_3, std::vector< float > *_swig_go_4, double _swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  cv::_InputArray *arg3 = 0 ;
  cv::_OutputArray *arg4 = 0 ;
  std::vector< float > *arg5 = 0 ;
  double arg6 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(std::vector< int > **)&_swig_go_1; 
  arg3 = *(cv::_InputArray **)&_swig_go_2; 
  arg4 = *(cv::_OutputArray **)&_swig_go_3; 
  arg5 = *(std::vector< float > **)&_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  
  cv::calcBackProject((cv::_InputArray const &)*arg1,(std::vector< int > const &)*arg2,(cv::_InputArray const &)*arg3,(cv::_OutputArray const &)*arg4,(std::vector< float > const &)*arg5,arg6);
  
}


double _wrap_compareHist__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, intgo _swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  int arg3 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (double)cv::compareHist((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_compareHist__SWIG_1_cv_dbcbba478e71899d(cv::SparseMat *_swig_go_0, cv::SparseMat *_swig_go_1, intgo _swig_go_2) {
  cv::SparseMat *arg1 = 0 ;
  cv::SparseMat *arg2 = 0 ;
  int arg3 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::SparseMat **)&_swig_go_0; 
  arg2 = *(cv::SparseMat **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (double)cv::compareHist((cv::SparseMat const &)*arg1,(cv::SparseMat const &)*arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_equalizeHist_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  cv::equalizeHist((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2);
  
}


void _wrap_CLAHE_apply_cv_dbcbba478e71899d(cv::CLAHE *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2) {
  cv::CLAHE *arg1 = (cv::CLAHE *) 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  
  arg1 = *(cv::CLAHE **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  (arg1)->apply((cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3);
  
}


void _wrap_CLAHE_setClipLimit_cv_dbcbba478e71899d(cv::CLAHE *_swig_go_0, double _swig_go_1) {
  cv::CLAHE *arg1 = (cv::CLAHE *) 0 ;
  double arg2 ;
  
  arg1 = *(cv::CLAHE **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  (arg1)->setClipLimit(arg2);
  
}


double _wrap_CLAHE_getClipLimit_cv_dbcbba478e71899d(cv::CLAHE *_swig_go_0) {
  cv::CLAHE *arg1 = (cv::CLAHE *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::CLAHE **)&_swig_go_0; 
  
  result = (double)((cv::CLAHE const *)arg1)->getClipLimit();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_CLAHE_setTilesGridSize_cv_dbcbba478e71899d(cv::CLAHE *_swig_go_0, cv::Size_< int > *_swig_go_1) {
  cv::CLAHE *arg1 = (cv::CLAHE *) 0 ;
  SwigValueWrapper< cv::Size_< int > > arg2 ;
  cv::Size *argp2 ;
  
  arg1 = *(cv::CLAHE **)&_swig_go_0; 
  
  argp2 = (cv::Size *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg2 = (cv::Size)*argp2;
  
  
  (arg1)->setTilesGridSize(arg2);
  
}


cv::Size_< int > *_wrap_CLAHE_getTilesGridSize_cv_dbcbba478e71899d(cv::CLAHE *_swig_go_0) {
  cv::CLAHE *arg1 = (cv::CLAHE *) 0 ;
  SwigValueWrapper< cv::Size_< int > > result;
  cv::Size_< int > *_swig_go_result;
  
  arg1 = *(cv::CLAHE **)&_swig_go_0; 
  
  result = ((cv::CLAHE const *)arg1)->getTilesGridSize();
  *(cv::Size **)&_swig_go_result = new cv::Size(result); 
  return _swig_go_result;
}


void _wrap_CLAHE_collectGarbage_cv_dbcbba478e71899d(cv::CLAHE *_swig_go_0) {
  cv::CLAHE *arg1 = (cv::CLAHE *) 0 ;
  
  arg1 = *(cv::CLAHE **)&_swig_go_0; 
  
  (arg1)->collectGarbage();
  
}


void _wrap_delete_CLAHE_cv_dbcbba478e71899d(cv::CLAHE *_swig_go_0) {
  cv::CLAHE *arg1 = (cv::CLAHE *) 0 ;
  
  arg1 = *(cv::CLAHE **)&_swig_go_0; 
  
  delete arg1;
  
}


cv::Ptr< cv::CLAHE > *_wrap_createCLAHE__SWIG_0_cv_dbcbba478e71899d(double _swig_go_0, cv::Size_< int > *_swig_go_1) {
  double arg1 ;
  SwigValueWrapper< cv::Size_< int > > arg2 ;
  cv::Size *argp2 ;
  SwigValueWrapper< cv::Ptr< cv::CLAHE > > result;
  cv::Ptr< cv::CLAHE > *_swig_go_result;
  
  arg1 = (double)_swig_go_0; 
  
  argp2 = (cv::Size *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Size");
  }
  arg2 = (cv::Size)*argp2;
  
  
  result = cv::createCLAHE(arg1,arg2);
  *(cv::Ptr< cv::CLAHE > **)&_swig_go_result = new cv::Ptr< cv::CLAHE >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::CLAHE > *_wrap_createCLAHE__SWIG_1_cv_dbcbba478e71899d(double _swig_go_0) {
  double arg1 ;
  SwigValueWrapper< cv::Ptr< cv::CLAHE > > result;
  cv::Ptr< cv::CLAHE > *_swig_go_result;
  
  arg1 = (double)_swig_go_0; 
  
  result = cv::createCLAHE(arg1);
  *(cv::Ptr< cv::CLAHE > **)&_swig_go_result = new cv::Ptr< cv::CLAHE >(result); 
  return _swig_go_result;
}


cv::Ptr< cv::CLAHE > *_wrap_createCLAHE__SWIG_2_cv_dbcbba478e71899d() {
  SwigValueWrapper< cv::Ptr< cv::CLAHE > > result;
  cv::Ptr< cv::CLAHE > *_swig_go_result;
  
  
  result = cv::createCLAHE();
  *(cv::Ptr< cv::CLAHE > **)&_swig_go_result = new cv::Ptr< cv::CLAHE >(result); 
  return _swig_go_result;
}


float _wrap_EMD__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, intgo _swig_go_2, cv::_InputArray *_swig_go_3, float *_swig_go_4, cv::_OutputArray *_swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  int arg3 ;
  cv::_InputArray *arg4 = 0 ;
  float *arg5 = (float *) 0 ;
  cv::_OutputArray *arg6 = 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  arg5 = *(float **)&_swig_go_4; 
  arg6 = *(cv::_OutputArray **)&_swig_go_5; 
  
  result = (float)cv::EMD((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,arg3,(cv::_InputArray const &)*arg4,arg5,(cv::_OutputArray const &)*arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_EMD__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, intgo _swig_go_2, cv::_InputArray *_swig_go_3, float *_swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  int arg3 ;
  cv::_InputArray *arg4 = 0 ;
  float *arg5 = (float *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  arg5 = *(float **)&_swig_go_4; 
  
  result = (float)cv::EMD((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,arg3,(cv::_InputArray const &)*arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_EMD__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, intgo _swig_go_2, cv::_InputArray *_swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  int arg3 ;
  cv::_InputArray *arg4 = 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::_InputArray **)&_swig_go_3; 
  
  result = (float)cv::EMD((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,arg3,(cv::_InputArray const &)*arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_EMD__SWIG_3_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, intgo _swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  int arg3 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (float)cv::EMD((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_watershed_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  cv::watershed((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2);
  
}


void _wrap_pyrMeanShiftFiltering__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, double _swig_go_2, double _swig_go_3, intgo _swig_go_4, cv::TermCriteria *_swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  int arg5 ;
  cv::TermCriteria arg6 ;
  cv::TermCriteria *argp6 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  argp6 = (cv::TermCriteria *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::TermCriteria");
  }
  arg6 = (cv::TermCriteria)*argp6;
  
  
  cv::pyrMeanShiftFiltering((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6);
  
}


void _wrap_pyrMeanShiftFiltering__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, double _swig_go_2, double _swig_go_3, intgo _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  int arg5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::pyrMeanShiftFiltering((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5);
  
}


void _wrap_pyrMeanShiftFiltering__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, double _swig_go_2, double _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  cv::pyrMeanShiftFiltering((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4);
  
}


intgo _wrap_GC_BGD_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::GC_BGD;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_GC_FGD_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::GC_FGD;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_GC_PR_BGD_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::GC_PR_BGD;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_GC_PR_FGD_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::GC_PR_FGD;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_GC_INIT_WITH_RECT_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::GC_INIT_WITH_RECT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_GC_INIT_WITH_MASK_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::GC_INIT_WITH_MASK;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_GC_EVAL_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::GC_EVAL;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_grabCut__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::Rect_< int > *_swig_go_2, cv::_OutputArray *_swig_go_3, cv::_OutputArray *_swig_go_4, intgo _swig_go_5, intgo _swig_go_6) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  SwigValueWrapper< cv::Rect_< int > > arg3 ;
  cv::_OutputArray *arg4 = 0 ;
  cv::_OutputArray *arg5 = 0 ;
  int arg6 ;
  int arg7 ;
  cv::Rect *argp3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  argp3 = (cv::Rect *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Rect");
  }
  arg3 = (cv::Rect)*argp3;
  
  arg4 = *(cv::_OutputArray **)&_swig_go_3; 
  arg5 = *(cv::_OutputArray **)&_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  
  cv::grabCut((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,(cv::_OutputArray const &)*arg4,(cv::_OutputArray const &)*arg5,arg6,arg7);
  
}


void _wrap_grabCut__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::Rect_< int > *_swig_go_2, cv::_OutputArray *_swig_go_3, cv::_OutputArray *_swig_go_4, intgo _swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  SwigValueWrapper< cv::Rect_< int > > arg3 ;
  cv::_OutputArray *arg4 = 0 ;
  cv::_OutputArray *arg5 = 0 ;
  int arg6 ;
  cv::Rect *argp3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  argp3 = (cv::Rect *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Rect");
  }
  arg3 = (cv::Rect)*argp3;
  
  arg4 = *(cv::_OutputArray **)&_swig_go_3; 
  arg5 = *(cv::_OutputArray **)&_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  cv::grabCut((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,(cv::_OutputArray const &)*arg4,(cv::_OutputArray const &)*arg5,arg6);
  
}


intgo _wrap_DIST_LABEL_CCOMP_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::DIST_LABEL_CCOMP;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_DIST_LABEL_PIXEL_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::DIST_LABEL_PIXEL;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_distanceTransform__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4, intgo _swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  cv::distanceTransform((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_OutputArray const &)*arg3,arg4,arg5,arg6);
  
}


void _wrap_distanceTransform__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  int arg4 ;
  int arg5 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::distanceTransform((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_OutputArray const &)*arg3,arg4,arg5);
  
}


void _wrap_distanceTransform__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  cv::distanceTransform((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4);
  
}


intgo _wrap_FLOODFILL_FIXED_RANGE_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FLOODFILL_FIXED_RANGE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_FLOODFILL_MASK_ONLY_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::FLOODFILL_MASK_ONLY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_floodFill__SWIG_0_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::Point_< int > *_swig_go_1, cv::Scalar_< double > *_swig_go_2, cv::Rect_< int > *_swig_go_3, cv::Scalar_< double > *_swig_go_4, cv::Scalar_< double > *_swig_go_5, intgo _swig_go_6) {
  cv::_OutputArray *arg1 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg2 ;
  SwigValueWrapper< cv::Scalar_< double > > arg3 ;
  cv::Rect *arg4 = (cv::Rect *) 0 ;
  SwigValueWrapper< cv::Scalar_< double > > arg5 ;
  SwigValueWrapper< cv::Scalar_< double > > arg6 ;
  int arg7 ;
  cv::Point *argp2 ;
  cv::Scalar *argp3 ;
  cv::Scalar *argp5 ;
  cv::Scalar *argp6 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  argp2 = (cv::Point *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg2 = (cv::Point)*argp2;
  
  
  argp3 = (cv::Scalar *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Scalar");
  }
  arg3 = (cv::Scalar)*argp3;
  
  arg4 = *(cv::Rect **)&_swig_go_3; 
  
  argp5 = (cv::Scalar *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Scalar");
  }
  arg5 = (cv::Scalar)*argp5;
  
  
  argp6 = (cv::Scalar *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Scalar");
  }
  arg6 = (cv::Scalar)*argp6;
  
  arg7 = (int)_swig_go_6; 
  
  result = (int)cv::floodFill((cv::_OutputArray const &)*arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_floodFill__SWIG_1_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::Point_< int > *_swig_go_1, cv::Scalar_< double > *_swig_go_2, cv::Rect_< int > *_swig_go_3, cv::Scalar_< double > *_swig_go_4, cv::Scalar_< double > *_swig_go_5) {
  cv::_OutputArray *arg1 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg2 ;
  SwigValueWrapper< cv::Scalar_< double > > arg3 ;
  cv::Rect *arg4 = (cv::Rect *) 0 ;
  SwigValueWrapper< cv::Scalar_< double > > arg5 ;
  SwigValueWrapper< cv::Scalar_< double > > arg6 ;
  cv::Point *argp2 ;
  cv::Scalar *argp3 ;
  cv::Scalar *argp5 ;
  cv::Scalar *argp6 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  argp2 = (cv::Point *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg2 = (cv::Point)*argp2;
  
  
  argp3 = (cv::Scalar *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Scalar");
  }
  arg3 = (cv::Scalar)*argp3;
  
  arg4 = *(cv::Rect **)&_swig_go_3; 
  
  argp5 = (cv::Scalar *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Scalar");
  }
  arg5 = (cv::Scalar)*argp5;
  
  
  argp6 = (cv::Scalar *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Scalar");
  }
  arg6 = (cv::Scalar)*argp6;
  
  
  result = (int)cv::floodFill((cv::_OutputArray const &)*arg1,arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_floodFill__SWIG_2_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::Point_< int > *_swig_go_1, cv::Scalar_< double > *_swig_go_2, cv::Rect_< int > *_swig_go_3, cv::Scalar_< double > *_swig_go_4) {
  cv::_OutputArray *arg1 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg2 ;
  SwigValueWrapper< cv::Scalar_< double > > arg3 ;
  cv::Rect *arg4 = (cv::Rect *) 0 ;
  SwigValueWrapper< cv::Scalar_< double > > arg5 ;
  cv::Point *argp2 ;
  cv::Scalar *argp3 ;
  cv::Scalar *argp5 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  argp2 = (cv::Point *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg2 = (cv::Point)*argp2;
  
  
  argp3 = (cv::Scalar *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Scalar");
  }
  arg3 = (cv::Scalar)*argp3;
  
  arg4 = *(cv::Rect **)&_swig_go_3; 
  
  argp5 = (cv::Scalar *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Scalar");
  }
  arg5 = (cv::Scalar)*argp5;
  
  
  result = (int)cv::floodFill((cv::_OutputArray const &)*arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_floodFill__SWIG_3_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::Point_< int > *_swig_go_1, cv::Scalar_< double > *_swig_go_2, cv::Rect_< int > *_swig_go_3) {
  cv::_OutputArray *arg1 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg2 ;
  SwigValueWrapper< cv::Scalar_< double > > arg3 ;
  cv::Rect *arg4 = (cv::Rect *) 0 ;
  cv::Point *argp2 ;
  cv::Scalar *argp3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  argp2 = (cv::Point *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg2 = (cv::Point)*argp2;
  
  
  argp3 = (cv::Scalar *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Scalar");
  }
  arg3 = (cv::Scalar)*argp3;
  
  arg4 = *(cv::Rect **)&_swig_go_3; 
  
  result = (int)cv::floodFill((cv::_OutputArray const &)*arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_floodFill__SWIG_4_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::Point_< int > *_swig_go_1, cv::Scalar_< double > *_swig_go_2) {
  cv::_OutputArray *arg1 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg2 ;
  SwigValueWrapper< cv::Scalar_< double > > arg3 ;
  cv::Point *argp2 ;
  cv::Scalar *argp3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  
  argp2 = (cv::Point *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg2 = (cv::Point)*argp2;
  
  
  argp3 = (cv::Scalar *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Scalar");
  }
  arg3 = (cv::Scalar)*argp3;
  
  
  result = (int)cv::floodFill((cv::_OutputArray const &)*arg1,arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_floodFill__SWIG_5_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::Point_< int > *_swig_go_2, cv::Scalar_< double > *_swig_go_3, cv::Rect_< int > *_swig_go_4, cv::Scalar_< double > *_swig_go_5, cv::Scalar_< double > *_swig_go_6, intgo _swig_go_7) {
  cv::_OutputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg3 ;
  SwigValueWrapper< cv::Scalar_< double > > arg4 ;
  cv::Rect *arg5 = (cv::Rect *) 0 ;
  SwigValueWrapper< cv::Scalar_< double > > arg6 ;
  SwigValueWrapper< cv::Scalar_< double > > arg7 ;
  int arg8 ;
  cv::Point *argp3 ;
  cv::Scalar *argp4 ;
  cv::Scalar *argp6 ;
  cv::Scalar *argp7 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  argp3 = (cv::Point *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg3 = (cv::Point)*argp3;
  
  
  argp4 = (cv::Scalar *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Scalar");
  }
  arg4 = (cv::Scalar)*argp4;
  
  arg5 = *(cv::Rect **)&_swig_go_4; 
  
  argp6 = (cv::Scalar *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Scalar");
  }
  arg6 = (cv::Scalar)*argp6;
  
  
  argp7 = (cv::Scalar *)_swig_go_6;
  if (argp7 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Scalar");
  }
  arg7 = (cv::Scalar)*argp7;
  
  arg8 = (int)_swig_go_7; 
  
  result = (int)cv::floodFill((cv::_OutputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_floodFill__SWIG_6_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::Point_< int > *_swig_go_2, cv::Scalar_< double > *_swig_go_3, cv::Rect_< int > *_swig_go_4, cv::Scalar_< double > *_swig_go_5, cv::Scalar_< double > *_swig_go_6) {
  cv::_OutputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg3 ;
  SwigValueWrapper< cv::Scalar_< double > > arg4 ;
  cv::Rect *arg5 = (cv::Rect *) 0 ;
  SwigValueWrapper< cv::Scalar_< double > > arg6 ;
  SwigValueWrapper< cv::Scalar_< double > > arg7 ;
  cv::Point *argp3 ;
  cv::Scalar *argp4 ;
  cv::Scalar *argp6 ;
  cv::Scalar *argp7 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  argp3 = (cv::Point *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg3 = (cv::Point)*argp3;
  
  
  argp4 = (cv::Scalar *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Scalar");
  }
  arg4 = (cv::Scalar)*argp4;
  
  arg5 = *(cv::Rect **)&_swig_go_4; 
  
  argp6 = (cv::Scalar *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Scalar");
  }
  arg6 = (cv::Scalar)*argp6;
  
  
  argp7 = (cv::Scalar *)_swig_go_6;
  if (argp7 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Scalar");
  }
  arg7 = (cv::Scalar)*argp7;
  
  
  result = (int)cv::floodFill((cv::_OutputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6,arg7);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_floodFill__SWIG_7_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::Point_< int > *_swig_go_2, cv::Scalar_< double > *_swig_go_3, cv::Rect_< int > *_swig_go_4, cv::Scalar_< double > *_swig_go_5) {
  cv::_OutputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg3 ;
  SwigValueWrapper< cv::Scalar_< double > > arg4 ;
  cv::Rect *arg5 = (cv::Rect *) 0 ;
  SwigValueWrapper< cv::Scalar_< double > > arg6 ;
  cv::Point *argp3 ;
  cv::Scalar *argp4 ;
  cv::Scalar *argp6 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  argp3 = (cv::Point *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg3 = (cv::Point)*argp3;
  
  
  argp4 = (cv::Scalar *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Scalar");
  }
  arg4 = (cv::Scalar)*argp4;
  
  arg5 = *(cv::Rect **)&_swig_go_4; 
  
  argp6 = (cv::Scalar *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Scalar");
  }
  arg6 = (cv::Scalar)*argp6;
  
  
  result = (int)cv::floodFill((cv::_OutputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_floodFill__SWIG_8_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::Point_< int > *_swig_go_2, cv::Scalar_< double > *_swig_go_3, cv::Rect_< int > *_swig_go_4) {
  cv::_OutputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg3 ;
  SwigValueWrapper< cv::Scalar_< double > > arg4 ;
  cv::Rect *arg5 = (cv::Rect *) 0 ;
  cv::Point *argp3 ;
  cv::Scalar *argp4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  argp3 = (cv::Point *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg3 = (cv::Point)*argp3;
  
  
  argp4 = (cv::Scalar *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Scalar");
  }
  arg4 = (cv::Scalar)*argp4;
  
  arg5 = *(cv::Rect **)&_swig_go_4; 
  
  result = (int)cv::floodFill((cv::_OutputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_floodFill__SWIG_9_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::Point_< int > *_swig_go_2, cv::Scalar_< double > *_swig_go_3) {
  cv::_OutputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  SwigValueWrapper< cv::Point_< int > > arg3 ;
  SwigValueWrapper< cv::Scalar_< double > > arg4 ;
  cv::Point *argp3 ;
  cv::Scalar *argp4 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  argp3 = (cv::Point *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg3 = (cv::Point)*argp3;
  
  
  argp4 = (cv::Scalar *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Scalar");
  }
  arg4 = (cv::Scalar)*argp4;
  
  
  result = (int)cv::floodFill((cv::_OutputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGR2BGRA_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGR2BGRA;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_RGB2RGBA_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_RGB2RGBA;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGRA2BGR_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGRA2BGR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_RGBA2RGB_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_RGBA2RGB;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGR2RGBA_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGR2RGBA;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_RGB2BGRA_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_RGB2BGRA;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_RGBA2BGR_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_RGBA2BGR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGRA2RGB_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGRA2RGB;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGR2RGB_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGR2RGB;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_RGB2BGR_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_RGB2BGR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGRA2RGBA_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGRA2RGBA;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_RGBA2BGRA_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_RGBA2BGRA;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGR2GRAY_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGR2GRAY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_RGB2GRAY_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_RGB2GRAY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_GRAY2BGR_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_GRAY2BGR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_GRAY2RGB_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_GRAY2RGB;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_GRAY2BGRA_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_GRAY2BGRA;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_GRAY2RGBA_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_GRAY2RGBA;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGRA2GRAY_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGRA2GRAY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_RGBA2GRAY_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_RGBA2GRAY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGR2BGR565_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGR2BGR565;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_RGB2BGR565_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_RGB2BGR565;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGR5652BGR_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGR5652BGR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGR5652RGB_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGR5652RGB;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGRA2BGR565_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGRA2BGR565;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_RGBA2BGR565_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_RGBA2BGR565;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGR5652BGRA_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGR5652BGRA;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGR5652RGBA_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGR5652RGBA;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_GRAY2BGR565_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_GRAY2BGR565;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGR5652GRAY_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGR5652GRAY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGR2BGR555_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGR2BGR555;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_RGB2BGR555_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_RGB2BGR555;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGR5552BGR_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGR5552BGR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGR5552RGB_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGR5552RGB;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGRA2BGR555_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGRA2BGR555;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_RGBA2BGR555_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_RGBA2BGR555;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGR5552BGRA_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGR5552BGRA;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGR5552RGBA_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGR5552RGBA;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_GRAY2BGR555_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_GRAY2BGR555;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGR5552GRAY_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGR5552GRAY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGR2XYZ_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGR2XYZ;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_RGB2XYZ_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_RGB2XYZ;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_XYZ2BGR_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_XYZ2BGR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_XYZ2RGB_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_XYZ2RGB;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGR2YCrCb_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGR2YCrCb;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_RGB2YCrCb_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_RGB2YCrCb;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YCrCb2BGR_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YCrCb2BGR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YCrCb2RGB_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YCrCb2RGB;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGR2HSV_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGR2HSV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_RGB2HSV_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_RGB2HSV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGR2Lab_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGR2Lab;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_RGB2Lab_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_RGB2Lab;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BayerBG2BGR_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BayerBG2BGR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BayerGB2BGR_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BayerGB2BGR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BayerRG2BGR_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BayerRG2BGR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BayerGR2BGR_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BayerGR2BGR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BayerBG2RGB_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BayerBG2RGB;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BayerGB2RGB_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BayerGB2RGB;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BayerRG2RGB_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BayerRG2RGB;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BayerGR2RGB_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BayerGR2RGB;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGR2Luv_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGR2Luv;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_RGB2Luv_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_RGB2Luv;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGR2HLS_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGR2HLS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_RGB2HLS_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_RGB2HLS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_HSV2BGR_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_HSV2BGR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_HSV2RGB_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_HSV2RGB;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_Lab2BGR_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_Lab2BGR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_Lab2RGB_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_Lab2RGB;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_Luv2BGR_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_Luv2BGR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_Luv2RGB_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_Luv2RGB;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_HLS2BGR_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_HLS2BGR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_HLS2RGB_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_HLS2RGB;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BayerBG2BGR_VNG_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BayerBG2BGR_VNG;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BayerGB2BGR_VNG_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BayerGB2BGR_VNG;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BayerRG2BGR_VNG_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BayerRG2BGR_VNG;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BayerGR2BGR_VNG_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BayerGR2BGR_VNG;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BayerBG2RGB_VNG_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BayerBG2RGB_VNG;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BayerGB2RGB_VNG_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BayerGB2RGB_VNG;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BayerRG2RGB_VNG_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BayerRG2RGB_VNG;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BayerGR2RGB_VNG_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BayerGR2RGB_VNG;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGR2HSV_FULL_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGR2HSV_FULL;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_RGB2HSV_FULL_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_RGB2HSV_FULL;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGR2HLS_FULL_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGR2HLS_FULL;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_RGB2HLS_FULL_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_RGB2HLS_FULL;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_HSV2BGR_FULL_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_HSV2BGR_FULL;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_HSV2RGB_FULL_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_HSV2RGB_FULL;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_HLS2BGR_FULL_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_HLS2BGR_FULL;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_HLS2RGB_FULL_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_HLS2RGB_FULL;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_LBGR2Lab_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_LBGR2Lab;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_LRGB2Lab_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_LRGB2Lab;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_LBGR2Luv_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_LBGR2Luv;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_LRGB2Luv_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_LRGB2Luv;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_Lab2LBGR_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_Lab2LBGR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_Lab2LRGB_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_Lab2LRGB;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_Luv2LBGR_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_Luv2LBGR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_Luv2LRGB_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_Luv2LRGB;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGR2YUV_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGR2YUV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_RGB2YUV_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_RGB2YUV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2BGR_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2BGR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2RGB_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2RGB;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BayerBG2GRAY_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BayerBG2GRAY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BayerGB2GRAY_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BayerGB2GRAY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BayerRG2GRAY_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BayerRG2GRAY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BayerGR2GRAY_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BayerGR2GRAY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2RGB_NV12_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2RGB_NV12;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2BGR_NV12_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2BGR_NV12;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2RGB_NV21_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2RGB_NV21;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2BGR_NV21_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2BGR_NV21;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV420sp2RGB_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV420sp2RGB;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV420sp2BGR_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV420sp2BGR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2RGBA_NV12_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2RGBA_NV12;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2BGRA_NV12_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2BGRA_NV12;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2RGBA_NV21_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2RGBA_NV21;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2BGRA_NV21_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2BGRA_NV21;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV420sp2RGBA_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV420sp2RGBA;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV420sp2BGRA_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV420sp2BGRA;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2RGB_YV12_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2RGB_YV12;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2BGR_YV12_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2BGR_YV12;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2RGB_IYUV_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2RGB_IYUV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2BGR_IYUV_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2BGR_IYUV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2RGB_I420_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2RGB_I420;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2BGR_I420_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2BGR_I420;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV420p2RGB_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV420p2RGB;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV420p2BGR_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV420p2BGR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2RGBA_YV12_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2RGBA_YV12;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2BGRA_YV12_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2BGRA_YV12;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2RGBA_IYUV_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2RGBA_IYUV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2BGRA_IYUV_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2BGRA_IYUV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2RGBA_I420_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2RGBA_I420;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2BGRA_I420_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2BGRA_I420;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV420p2RGBA_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV420p2RGBA;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV420p2BGRA_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV420p2BGRA;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2GRAY_420_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2GRAY_420;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2GRAY_NV21_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2GRAY_NV21;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2GRAY_NV12_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2GRAY_NV12;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2GRAY_YV12_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2GRAY_YV12;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2GRAY_IYUV_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2GRAY_IYUV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2GRAY_I420_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2GRAY_I420;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV420sp2GRAY_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV420sp2GRAY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV420p2GRAY_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV420p2GRAY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2RGB_UYVY_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2RGB_UYVY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2BGR_UYVY_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2BGR_UYVY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2RGB_Y422_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2RGB_Y422;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2BGR_Y422_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2BGR_Y422;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2RGB_UYNV_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2RGB_UYNV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2BGR_UYNV_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2BGR_UYNV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2RGBA_UYVY_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2RGBA_UYVY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2BGRA_UYVY_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2BGRA_UYVY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2RGBA_Y422_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2RGBA_Y422;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2BGRA_Y422_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2BGRA_Y422;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2RGBA_UYNV_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2RGBA_UYNV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2BGRA_UYNV_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2BGRA_UYNV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2RGB_YUY2_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2RGB_YUY2;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2BGR_YUY2_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2BGR_YUY2;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2RGB_YVYU_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2RGB_YVYU;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2BGR_YVYU_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2BGR_YVYU;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2RGB_YUYV_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2RGB_YUYV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2BGR_YUYV_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2BGR_YUYV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2RGB_YUNV_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2RGB_YUNV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2BGR_YUNV_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2BGR_YUNV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2RGBA_YUY2_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2RGBA_YUY2;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2BGRA_YUY2_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2BGRA_YUY2;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2RGBA_YVYU_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2RGBA_YVYU;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2BGRA_YVYU_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2BGRA_YVYU;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2RGBA_YUYV_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2RGBA_YUYV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2BGRA_YUYV_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2BGRA_YUYV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2RGBA_YUNV_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2RGBA_YUNV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2BGRA_YUNV_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2BGRA_YUNV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2GRAY_UYVY_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2GRAY_UYVY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2GRAY_YUY2_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2GRAY_YUY2;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2GRAY_Y422_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2GRAY_Y422;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2GRAY_UYNV_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2GRAY_UYNV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2GRAY_YVYU_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2GRAY_YVYU;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2GRAY_YUYV_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2GRAY_YUYV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_YUV2GRAY_YUNV_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_YUV2GRAY_YUNV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_RGBA2mRGBA_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_RGBA2mRGBA;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_mRGBA2RGBA_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_mRGBA2RGBA;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_RGB2YUV_I420_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_RGB2YUV_I420;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGR2YUV_I420_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGR2YUV_I420;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_RGB2YUV_IYUV_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_RGB2YUV_IYUV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGR2YUV_IYUV_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGR2YUV_IYUV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_RGBA2YUV_I420_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_RGBA2YUV_I420;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGRA2YUV_I420_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGRA2YUV_I420;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_RGBA2YUV_IYUV_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_RGBA2YUV_IYUV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGRA2YUV_IYUV_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGRA2YUV_IYUV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_RGB2YUV_YV12_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_RGB2YUV_YV12;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGR2YUV_YV12_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGR2YUV_YV12;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_RGBA2YUV_YV12_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_RGBA2YUV_YV12;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_BGRA2YUV_YV12_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_BGRA2YUV_YV12;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_COLOR_COLORCVT_MAX_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::COLOR_COLORCVT_MAX;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_cvtColor__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  cv::cvtColor((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4);
  
}


void _wrap_cvtColor__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  cv::cvtColor((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3);
  
}


cv::Moments *_wrap_new_Moments__SWIG_0_cv_dbcbba478e71899d() {
  cv::Moments *result = 0 ;
  cv::Moments *_swig_go_result;
  
  
  result = (cv::Moments *)new cv::Moments();
  *(cv::Moments **)&_swig_go_result = (cv::Moments *)result; 
  return _swig_go_result;
}


cv::Moments *_wrap_new_Moments__SWIG_1_cv_dbcbba478e71899d(double _swig_go_0, double _swig_go_1, double _swig_go_2, double _swig_go_3, double _swig_go_4, double _swig_go_5, double _swig_go_6, double _swig_go_7, double _swig_go_8, double _swig_go_9) {
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  double arg10 ;
  cv::Moments *result = 0 ;
  cv::Moments *_swig_go_result;
  
  arg1 = (double)_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  arg8 = (double)_swig_go_7; 
  arg9 = (double)_swig_go_8; 
  arg10 = (double)_swig_go_9; 
  
  result = (cv::Moments *)new cv::Moments(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  *(cv::Moments **)&_swig_go_result = (cv::Moments *)result; 
  return _swig_go_result;
}


cv::Moments *_wrap_new_Moments__SWIG_2_cv_dbcbba478e71899d(CvMoments *_swig_go_0) {
  CvMoments *arg1 = 0 ;
  cv::Moments *result = 0 ;
  cv::Moments *_swig_go_result;
  
  arg1 = *(CvMoments **)&_swig_go_0; 
  
  result = (cv::Moments *)new cv::Moments((CvMoments const &)*arg1);
  *(cv::Moments **)&_swig_go_result = (cv::Moments *)result; 
  return _swig_go_result;
}


void _wrap_Moments_m00_set_cv_dbcbba478e71899d(cv::Moments *_swig_go_0, double _swig_go_1) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double arg2 ;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m00 = arg2;
  
}


double _wrap_Moments_m00_get_cv_dbcbba478e71899d(cv::Moments *_swig_go_0) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  
  result = (double) ((arg1)->m00);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Moments_m10_set_cv_dbcbba478e71899d(cv::Moments *_swig_go_0, double _swig_go_1) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double arg2 ;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m10 = arg2;
  
}


double _wrap_Moments_m10_get_cv_dbcbba478e71899d(cv::Moments *_swig_go_0) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  
  result = (double) ((arg1)->m10);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Moments_m01_set_cv_dbcbba478e71899d(cv::Moments *_swig_go_0, double _swig_go_1) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double arg2 ;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m01 = arg2;
  
}


double _wrap_Moments_m01_get_cv_dbcbba478e71899d(cv::Moments *_swig_go_0) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  
  result = (double) ((arg1)->m01);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Moments_m20_set_cv_dbcbba478e71899d(cv::Moments *_swig_go_0, double _swig_go_1) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double arg2 ;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m20 = arg2;
  
}


double _wrap_Moments_m20_get_cv_dbcbba478e71899d(cv::Moments *_swig_go_0) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  
  result = (double) ((arg1)->m20);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Moments_m11_set_cv_dbcbba478e71899d(cv::Moments *_swig_go_0, double _swig_go_1) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double arg2 ;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m11 = arg2;
  
}


double _wrap_Moments_m11_get_cv_dbcbba478e71899d(cv::Moments *_swig_go_0) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  
  result = (double) ((arg1)->m11);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Moments_m02_set_cv_dbcbba478e71899d(cv::Moments *_swig_go_0, double _swig_go_1) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double arg2 ;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m02 = arg2;
  
}


double _wrap_Moments_m02_get_cv_dbcbba478e71899d(cv::Moments *_swig_go_0) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  
  result = (double) ((arg1)->m02);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Moments_m30_set_cv_dbcbba478e71899d(cv::Moments *_swig_go_0, double _swig_go_1) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double arg2 ;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m30 = arg2;
  
}


double _wrap_Moments_m30_get_cv_dbcbba478e71899d(cv::Moments *_swig_go_0) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  
  result = (double) ((arg1)->m30);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Moments_m21_set_cv_dbcbba478e71899d(cv::Moments *_swig_go_0, double _swig_go_1) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double arg2 ;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m21 = arg2;
  
}


double _wrap_Moments_m21_get_cv_dbcbba478e71899d(cv::Moments *_swig_go_0) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  
  result = (double) ((arg1)->m21);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Moments_m12_set_cv_dbcbba478e71899d(cv::Moments *_swig_go_0, double _swig_go_1) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double arg2 ;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m12 = arg2;
  
}


double _wrap_Moments_m12_get_cv_dbcbba478e71899d(cv::Moments *_swig_go_0) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  
  result = (double) ((arg1)->m12);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Moments_m03_set_cv_dbcbba478e71899d(cv::Moments *_swig_go_0, double _swig_go_1) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double arg2 ;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->m03 = arg2;
  
}


double _wrap_Moments_m03_get_cv_dbcbba478e71899d(cv::Moments *_swig_go_0) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  
  result = (double) ((arg1)->m03);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Moments_mu20_set_cv_dbcbba478e71899d(cv::Moments *_swig_go_0, double _swig_go_1) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double arg2 ;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->mu20 = arg2;
  
}


double _wrap_Moments_mu20_get_cv_dbcbba478e71899d(cv::Moments *_swig_go_0) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  
  result = (double) ((arg1)->mu20);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Moments_mu11_set_cv_dbcbba478e71899d(cv::Moments *_swig_go_0, double _swig_go_1) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double arg2 ;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->mu11 = arg2;
  
}


double _wrap_Moments_mu11_get_cv_dbcbba478e71899d(cv::Moments *_swig_go_0) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  
  result = (double) ((arg1)->mu11);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Moments_mu02_set_cv_dbcbba478e71899d(cv::Moments *_swig_go_0, double _swig_go_1) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double arg2 ;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->mu02 = arg2;
  
}


double _wrap_Moments_mu02_get_cv_dbcbba478e71899d(cv::Moments *_swig_go_0) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  
  result = (double) ((arg1)->mu02);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Moments_mu30_set_cv_dbcbba478e71899d(cv::Moments *_swig_go_0, double _swig_go_1) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double arg2 ;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->mu30 = arg2;
  
}


double _wrap_Moments_mu30_get_cv_dbcbba478e71899d(cv::Moments *_swig_go_0) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  
  result = (double) ((arg1)->mu30);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Moments_mu21_set_cv_dbcbba478e71899d(cv::Moments *_swig_go_0, double _swig_go_1) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double arg2 ;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->mu21 = arg2;
  
}


double _wrap_Moments_mu21_get_cv_dbcbba478e71899d(cv::Moments *_swig_go_0) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  
  result = (double) ((arg1)->mu21);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Moments_mu12_set_cv_dbcbba478e71899d(cv::Moments *_swig_go_0, double _swig_go_1) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double arg2 ;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->mu12 = arg2;
  
}


double _wrap_Moments_mu12_get_cv_dbcbba478e71899d(cv::Moments *_swig_go_0) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  
  result = (double) ((arg1)->mu12);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Moments_mu03_set_cv_dbcbba478e71899d(cv::Moments *_swig_go_0, double _swig_go_1) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double arg2 ;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->mu03 = arg2;
  
}


double _wrap_Moments_mu03_get_cv_dbcbba478e71899d(cv::Moments *_swig_go_0) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  
  result = (double) ((arg1)->mu03);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Moments_nu20_set_cv_dbcbba478e71899d(cv::Moments *_swig_go_0, double _swig_go_1) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double arg2 ;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->nu20 = arg2;
  
}


double _wrap_Moments_nu20_get_cv_dbcbba478e71899d(cv::Moments *_swig_go_0) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  
  result = (double) ((arg1)->nu20);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Moments_nu11_set_cv_dbcbba478e71899d(cv::Moments *_swig_go_0, double _swig_go_1) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double arg2 ;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->nu11 = arg2;
  
}


double _wrap_Moments_nu11_get_cv_dbcbba478e71899d(cv::Moments *_swig_go_0) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  
  result = (double) ((arg1)->nu11);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Moments_nu02_set_cv_dbcbba478e71899d(cv::Moments *_swig_go_0, double _swig_go_1) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double arg2 ;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->nu02 = arg2;
  
}


double _wrap_Moments_nu02_get_cv_dbcbba478e71899d(cv::Moments *_swig_go_0) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  
  result = (double) ((arg1)->nu02);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Moments_nu30_set_cv_dbcbba478e71899d(cv::Moments *_swig_go_0, double _swig_go_1) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double arg2 ;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->nu30 = arg2;
  
}


double _wrap_Moments_nu30_get_cv_dbcbba478e71899d(cv::Moments *_swig_go_0) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  
  result = (double) ((arg1)->nu30);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Moments_nu21_set_cv_dbcbba478e71899d(cv::Moments *_swig_go_0, double _swig_go_1) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double arg2 ;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->nu21 = arg2;
  
}


double _wrap_Moments_nu21_get_cv_dbcbba478e71899d(cv::Moments *_swig_go_0) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  
  result = (double) ((arg1)->nu21);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Moments_nu12_set_cv_dbcbba478e71899d(cv::Moments *_swig_go_0, double _swig_go_1) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double arg2 ;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->nu12 = arg2;
  
}


double _wrap_Moments_nu12_get_cv_dbcbba478e71899d(cv::Moments *_swig_go_0) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  
  result = (double) ((arg1)->nu12);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Moments_nu03_set_cv_dbcbba478e71899d(cv::Moments *_swig_go_0, double _swig_go_1) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double arg2 ;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->nu03 = arg2;
  
}


double _wrap_Moments_nu03_get_cv_dbcbba478e71899d(cv::Moments *_swig_go_0) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  
  result = (double) ((arg1)->nu03);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_Moments_cv_dbcbba478e71899d(cv::Moments *_swig_go_0) {
  cv::Moments *arg1 = (cv::Moments *) 0 ;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  
  delete arg1;
  
}


cv::Moments *_wrap_moments__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, bool _swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  bool arg2 ;
  cv::Moments result;
  cv::Moments *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = cv::moments((cv::_InputArray const &)*arg1,arg2);
  *(cv::Moments **)&_swig_go_result = new cv::Moments(result); 
  return _swig_go_result;
}


cv::Moments *_wrap_moments__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0) {
  cv::_InputArray *arg1 = 0 ;
  cv::Moments result;
  cv::Moments *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  result = cv::moments((cv::_InputArray const &)*arg1);
  *(cv::Moments **)&_swig_go_result = new cv::Moments(result); 
  return _swig_go_result;
}


void _wrap_HuMoments__SWIG_0_cv_dbcbba478e71899d(cv::Moments *_swig_go_0, double *_swig_go_1) {
  cv::Moments *arg1 = 0 ;
  double *arg2 ;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  
  cv::HuMoments((cv::Moments const &)*arg1,arg2);
  
}


void _wrap_HuMoments__SWIG_1_cv_dbcbba478e71899d(cv::Moments *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  cv::Moments *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  
  arg1 = *(cv::Moments **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  cv::HuMoments((cv::Moments const &)*arg1,(cv::_OutputArray const &)*arg2);
  
}


intgo _wrap_TM_SQDIFF_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::TM_SQDIFF;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_TM_SQDIFF_NORMED_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::TM_SQDIFF_NORMED;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_TM_CCORR_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::TM_CCORR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_TM_CCORR_NORMED_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::TM_CCORR_NORMED;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_TM_CCOEFF_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::TM_CCOEFF;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_TM_CCOEFF_NORMED_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::TM_CCOEFF_NORMED;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_matchTemplate_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, intgo _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  int arg4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  cv::matchTemplate((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,arg4);
  
}


intgo _wrap_RETR_EXTERNAL_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::RETR_EXTERNAL;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_RETR_LIST_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::RETR_LIST;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_RETR_CCOMP_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::RETR_CCOMP;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_RETR_TREE_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::RETR_TREE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_RETR_FLOODFILL_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::RETR_FLOODFILL;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CHAIN_APPROX_NONE_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::CHAIN_APPROX_NONE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CHAIN_APPROX_SIMPLE_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::CHAIN_APPROX_SIMPLE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CHAIN_APPROX_TC89_L1_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::CHAIN_APPROX_TC89_L1;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CHAIN_APPROX_TC89_KCOS_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::CHAIN_APPROX_TC89_KCOS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_findContours__SWIG_0_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4, cv::Point_< int > *_swig_go_5) {
  cv::_OutputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  int arg4 ;
  int arg5 ;
  SwigValueWrapper< cv::Point_< int > > arg6 ;
  cv::Point *argp6 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  argp6 = (cv::Point *)_swig_go_5;
  if (argp6 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg6 = (cv::Point)*argp6;
  
  
  cv::findContours((cv::_OutputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_OutputArray const &)*arg3,arg4,arg5,arg6);
  
}


void _wrap_findContours__SWIG_1_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  cv::_OutputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  int arg4 ;
  int arg5 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::findContours((cv::_OutputArray const &)*arg1,(cv::_OutputArray const &)*arg2,(cv::_OutputArray const &)*arg3,arg4,arg5);
  
}


void _wrap_findContours__SWIG_2_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, cv::Point_< int > *_swig_go_4) {
  cv::_OutputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  SwigValueWrapper< cv::Point_< int > > arg5 ;
  cv::Point *argp5 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  argp5 = (cv::Point *)_swig_go_4;
  if (argp5 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg5 = (cv::Point)*argp5;
  
  
  cv::findContours((cv::_OutputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5);
  
}


void _wrap_findContours__SWIG_3_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  cv::_OutputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  cv::findContours((cv::_OutputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4);
  
}


void _wrap_drawContours__SWIG_0_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::_InputArray *_swig_go_1, intgo _swig_go_2, cv::Scalar_< double > *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5, cv::_InputArray *_swig_go_6, intgo _swig_go_7, cv::Point_< int > *_swig_go_8) {
  cv::_OutputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  int arg3 ;
  cv::Scalar *arg4 = 0 ;
  int arg5 ;
  int arg6 ;
  cv::_InputArray *arg7 = 0 ;
  int arg8 ;
  SwigValueWrapper< cv::Point_< int > > arg9 ;
  cv::Point *argp9 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::Scalar **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = *(cv::_InputArray **)&_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  
  argp9 = (cv::Point *)_swig_go_8;
  if (argp9 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point");
  }
  arg9 = (cv::Point)*argp9;
  
  
  cv::drawContours((cv::_OutputArray const &)*arg1,(cv::_InputArray const &)*arg2,arg3,(cv::Scalar_< double > const &)*arg4,arg5,arg6,(cv::_InputArray const &)*arg7,arg8,arg9);
  
}


void _wrap_drawContours__SWIG_1_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::_InputArray *_swig_go_1, intgo _swig_go_2, cv::Scalar_< double > *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5, cv::_InputArray *_swig_go_6, intgo _swig_go_7) {
  cv::_OutputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  int arg3 ;
  cv::Scalar *arg4 = 0 ;
  int arg5 ;
  int arg6 ;
  cv::_InputArray *arg7 = 0 ;
  int arg8 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::Scalar **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = *(cv::_InputArray **)&_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  
  cv::drawContours((cv::_OutputArray const &)*arg1,(cv::_InputArray const &)*arg2,arg3,(cv::Scalar_< double > const &)*arg4,arg5,arg6,(cv::_InputArray const &)*arg7,arg8);
  
}


void _wrap_drawContours__SWIG_2_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::_InputArray *_swig_go_1, intgo _swig_go_2, cv::Scalar_< double > *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5, cv::_InputArray *_swig_go_6) {
  cv::_OutputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  int arg3 ;
  cv::Scalar *arg4 = 0 ;
  int arg5 ;
  int arg6 ;
  cv::_InputArray *arg7 = 0 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::Scalar **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = *(cv::_InputArray **)&_swig_go_6; 
  
  cv::drawContours((cv::_OutputArray const &)*arg1,(cv::_InputArray const &)*arg2,arg3,(cv::Scalar_< double > const &)*arg4,arg5,arg6,(cv::_InputArray const &)*arg7);
  
}


void _wrap_drawContours__SWIG_3_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::_InputArray *_swig_go_1, intgo _swig_go_2, cv::Scalar_< double > *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5) {
  cv::_OutputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  int arg3 ;
  cv::Scalar *arg4 = 0 ;
  int arg5 ;
  int arg6 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::Scalar **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  cv::drawContours((cv::_OutputArray const &)*arg1,(cv::_InputArray const &)*arg2,arg3,(cv::Scalar_< double > const &)*arg4,arg5,arg6);
  
}


void _wrap_drawContours__SWIG_4_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::_InputArray *_swig_go_1, intgo _swig_go_2, cv::Scalar_< double > *_swig_go_3, intgo _swig_go_4) {
  cv::_OutputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  int arg3 ;
  cv::Scalar *arg4 = 0 ;
  int arg5 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::Scalar **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  cv::drawContours((cv::_OutputArray const &)*arg1,(cv::_InputArray const &)*arg2,arg3,(cv::Scalar_< double > const &)*arg4,arg5);
  
}


void _wrap_drawContours__SWIG_5_cv_dbcbba478e71899d(cv::_OutputArray *_swig_go_0, cv::_InputArray *_swig_go_1, intgo _swig_go_2, cv::Scalar_< double > *_swig_go_3) {
  cv::_OutputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  int arg3 ;
  cv::Scalar *arg4 = 0 ;
  
  arg1 = *(cv::_OutputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = *(cv::Scalar **)&_swig_go_3; 
  
  cv::drawContours((cv::_OutputArray const &)*arg1,(cv::_InputArray const &)*arg2,arg3,(cv::Scalar_< double > const &)*arg4);
  
}


void _wrap_approxPolyDP_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, double _swig_go_2, bool _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  double arg3 ;
  bool arg4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (bool)_swig_go_3; 
  
  cv::approxPolyDP((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4);
  
}


double _wrap_arcLength_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, bool _swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  bool arg2 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = (double)cv::arcLength((cv::_InputArray const &)*arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


cv::Rect_< int > *_wrap_boundingRect_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0) {
  cv::_InputArray *arg1 = 0 ;
  SwigValueWrapper< cv::Rect_< int > > result;
  cv::Rect_< int > *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  result = cv::boundingRect((cv::_InputArray const &)*arg1);
  *(cv::Rect **)&_swig_go_result = new cv::Rect(result); 
  return _swig_go_result;
}


double _wrap_contourArea__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, bool _swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  bool arg2 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = (double)cv::contourArea((cv::_InputArray const &)*arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_contourArea__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0) {
  cv::_InputArray *arg1 = 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  result = (double)cv::contourArea((cv::_InputArray const &)*arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


cv::RotatedRect *_wrap_minAreaRect_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0) {
  cv::_InputArray *arg1 = 0 ;
  cv::RotatedRect result;
  cv::RotatedRect *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  result = cv::minAreaRect((cv::_InputArray const &)*arg1);
  *(cv::RotatedRect **)&_swig_go_result = new cv::RotatedRect(result); 
  return _swig_go_result;
}


void _wrap_minEnclosingCircle_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::Point_< float > *_swig_go_1, float *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::Point2f *arg2 = 0 ;
  float *arg3 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::Point2f **)&_swig_go_1; 
  arg3 = *(float **)&_swig_go_2; 
  
  cv::minEnclosingCircle((cv::_InputArray const &)*arg1,*arg2,*arg3);
  
}


double _wrap_matchShapes_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, intgo _swig_go_2, double _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  result = (double)cv::matchShapes((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_convexHull__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, bool _swig_go_2, bool _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  bool arg3 ;
  bool arg4 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  arg4 = (bool)_swig_go_3; 
  
  cv::convexHull((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4);
  
}


void _wrap_convexHull__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, bool _swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  bool arg3 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  cv::convexHull((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3);
  
}


void _wrap_convexHull__SWIG_2_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  
  cv::convexHull((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2);
  
}


void _wrap_convexityDefects_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  cv::convexityDefects((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3);
  
}


bool _wrap_isContourConvex_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0) {
  cv::_InputArray *arg1 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  result = (bool)cv::isContourConvex((cv::_InputArray const &)*arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_intersectConvexConvex__SWIG_0_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2, bool _swig_go_3) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  bool arg4 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  arg4 = (bool)_swig_go_3; 
  
  result = (float)cv::intersectConvexConvex((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_intersectConvexConvex__SWIG_1_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_InputArray *_swig_go_1, cv::_OutputArray *_swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  cv::_InputArray *arg2 = 0 ;
  cv::_OutputArray *arg3 = 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_InputArray **)&_swig_go_1; 
  arg3 = *(cv::_OutputArray **)&_swig_go_2; 
  
  result = (float)cv::intersectConvexConvex((cv::_InputArray const &)*arg1,(cv::_InputArray const &)*arg2,(cv::_OutputArray const &)*arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


cv::RotatedRect *_wrap_fitEllipse_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0) {
  cv::_InputArray *arg1 = 0 ;
  cv::RotatedRect result;
  cv::RotatedRect *_swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  result = cv::fitEllipse((cv::_InputArray const &)*arg1);
  *(cv::RotatedRect **)&_swig_go_result = new cv::RotatedRect(result); 
  return _swig_go_result;
}


void _wrap_fitLine_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::_OutputArray *_swig_go_1, intgo _swig_go_2, double _swig_go_3, double _swig_go_4, double _swig_go_5) {
  cv::_InputArray *arg1 = 0 ;
  cv::_OutputArray *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  arg2 = *(cv::_OutputArray **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  
  cv::fitLine((cv::_InputArray const &)*arg1,(cv::_OutputArray const &)*arg2,arg3,arg4,arg5,arg6);
  
}


double _wrap_pointPolygonTest_cv_dbcbba478e71899d(cv::_InputArray *_swig_go_0, cv::Point_< float > *_swig_go_1, bool _swig_go_2) {
  cv::_InputArray *arg1 = 0 ;
  SwigValueWrapper< cv::Point_< float > > arg2 ;
  bool arg3 ;
  cv::Point2f *argp2 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(cv::_InputArray **)&_swig_go_0; 
  
  argp2 = (cv::Point2f *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point2f");
  }
  arg2 = (cv::Point2f)*argp2;
  
  arg3 = (bool)_swig_go_2; 
  
  result = (double)cv::pointPolygonTest((cv::_InputArray const &)*arg1,arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_PTLOC_ERROR_Subdiv2D_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::Subdiv2D::PTLOC_ERROR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_PTLOC_OUTSIDE_RECT_Subdiv2D_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::Subdiv2D::PTLOC_OUTSIDE_RECT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_PTLOC_INSIDE_Subdiv2D_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::Subdiv2D::PTLOC_INSIDE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_PTLOC_VERTEX_Subdiv2D_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::Subdiv2D::PTLOC_VERTEX;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_PTLOC_ON_EDGE_Subdiv2D_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::Subdiv2D::PTLOC_ON_EDGE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_NEXT_AROUND_ORG_Subdiv2D_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::Subdiv2D::NEXT_AROUND_ORG;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_NEXT_AROUND_DST_Subdiv2D_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::Subdiv2D::NEXT_AROUND_DST;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_PREV_AROUND_ORG_Subdiv2D_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::Subdiv2D::PREV_AROUND_ORG;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_PREV_AROUND_DST_Subdiv2D_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::Subdiv2D::PREV_AROUND_DST;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_NEXT_AROUND_LEFT_Subdiv2D_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::Subdiv2D::NEXT_AROUND_LEFT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_NEXT_AROUND_RIGHT_Subdiv2D_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::Subdiv2D::NEXT_AROUND_RIGHT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_PREV_AROUND_LEFT_Subdiv2D_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::Subdiv2D::PREV_AROUND_LEFT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_PREV_AROUND_RIGHT_Subdiv2D_cv_dbcbba478e71899d() {
  int result;
  intgo _swig_go_result;
  
  
  result = cv::Subdiv2D::PREV_AROUND_RIGHT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


cv::Subdiv2D *_wrap_new_Subdiv2D__SWIG_0_cv_dbcbba478e71899d() {
  cv::Subdiv2D *result = 0 ;
  cv::Subdiv2D *_swig_go_result;
  
  
  result = (cv::Subdiv2D *)new cv::Subdiv2D();
  *(cv::Subdiv2D **)&_swig_go_result = (cv::Subdiv2D *)result; 
  return _swig_go_result;
}


cv::Subdiv2D *_wrap_new_Subdiv2D__SWIG_1_cv_dbcbba478e71899d(cv::Rect_< int > *_swig_go_0) {
  SwigValueWrapper< cv::Rect_< int > > arg1 ;
  cv::Rect *argp1 ;
  cv::Subdiv2D *result = 0 ;
  cv::Subdiv2D *_swig_go_result;
  
  
  argp1 = (cv::Rect *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Rect");
  }
  arg1 = (cv::Rect)*argp1;
  
  
  result = (cv::Subdiv2D *)new cv::Subdiv2D(arg1);
  *(cv::Subdiv2D **)&_swig_go_result = (cv::Subdiv2D *)result; 
  return _swig_go_result;
}


void _wrap_Subdiv2D_initDelaunay_cv_dbcbba478e71899d(cv::Subdiv2D *_swig_go_0, cv::Rect_< int > *_swig_go_1) {
  cv::Subdiv2D *arg1 = (cv::Subdiv2D *) 0 ;
  SwigValueWrapper< cv::Rect_< int > > arg2 ;
  cv::Rect *argp2 ;
  
  arg1 = *(cv::Subdiv2D **)&_swig_go_0; 
  
  argp2 = (cv::Rect *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Rect");
  }
  arg2 = (cv::Rect)*argp2;
  
  
  (arg1)->initDelaunay(arg2);
  
}


intgo _wrap_Subdiv2D_insert__SWIG_0_cv_dbcbba478e71899d(cv::Subdiv2D *_swig_go_0, cv::Point_< float > *_swig_go_1) {
  cv::Subdiv2D *arg1 = (cv::Subdiv2D *) 0 ;
  SwigValueWrapper< cv::Point_< float > > arg2 ;
  cv::Point2f *argp2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::Subdiv2D **)&_swig_go_0; 
  
  argp2 = (cv::Point2f *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point2f");
  }
  arg2 = (cv::Point2f)*argp2;
  
  
  result = (int)(arg1)->insert(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Subdiv2D_insert__SWIG_1_cv_dbcbba478e71899d(cv::Subdiv2D *_swig_go_0, std::vector< cv::Point_< float > > *_swig_go_1) {
  cv::Subdiv2D *arg1 = (cv::Subdiv2D *) 0 ;
  std::vector< cv::Point2f > *arg2 = 0 ;
  
  arg1 = *(cv::Subdiv2D **)&_swig_go_0; 
  arg2 = *(std::vector< cv::Point2f > **)&_swig_go_1; 
  
  (arg1)->insert((std::vector< cv::Point2f > const &)*arg2);
  
}


intgo _wrap_Subdiv2D_locate_cv_dbcbba478e71899d(cv::Subdiv2D *_swig_go_0, cv::Point_< float > *_swig_go_1, int *_swig_go_2, int *_swig_go_3) {
  cv::Subdiv2D *arg1 = (cv::Subdiv2D *) 0 ;
  SwigValueWrapper< cv::Point_< float > > arg2 ;
  int *arg3 = 0 ;
  int *arg4 = 0 ;
  cv::Point2f *argp2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::Subdiv2D **)&_swig_go_0; 
  
  argp2 = (cv::Point2f *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point2f");
  }
  arg2 = (cv::Point2f)*argp2;
  
  arg3 = *(int **)&_swig_go_2; 
  arg4 = *(int **)&_swig_go_3; 
  
  result = (int)(arg1)->locate(arg2,*arg3,*arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_Subdiv2D_findNearest__SWIG_0_cv_dbcbba478e71899d(cv::Subdiv2D *_swig_go_0, cv::Point_< float > *_swig_go_1, cv::Point_< float > *_swig_go_2) {
  cv::Subdiv2D *arg1 = (cv::Subdiv2D *) 0 ;
  SwigValueWrapper< cv::Point_< float > > arg2 ;
  cv::Point2f *arg3 = (cv::Point2f *) 0 ;
  cv::Point2f *argp2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::Subdiv2D **)&_swig_go_0; 
  
  argp2 = (cv::Point2f *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point2f");
  }
  arg2 = (cv::Point2f)*argp2;
  
  arg3 = *(cv::Point2f **)&_swig_go_2; 
  
  result = (int)(arg1)->findNearest(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_Subdiv2D_findNearest__SWIG_1_cv_dbcbba478e71899d(cv::Subdiv2D *_swig_go_0, cv::Point_< float > *_swig_go_1) {
  cv::Subdiv2D *arg1 = (cv::Subdiv2D *) 0 ;
  SwigValueWrapper< cv::Point_< float > > arg2 ;
  cv::Point2f *argp2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::Subdiv2D **)&_swig_go_0; 
  
  argp2 = (cv::Point2f *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null cv::Point2f");
  }
  arg2 = (cv::Point2f)*argp2;
  
  
  result = (int)(arg1)->findNearest(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_Subdiv2D_getEdgeList_cv_dbcbba478e71899d(cv::Subdiv2D *_swig_go_0, std::vector< cv::Vec< float,4 > > *_swig_go_1) {
  cv::Subdiv2D *arg1 = (cv::Subdiv2D *) 0 ;
  std::vector< cv::Vec4f > *arg2 = 0 ;
  
  arg1 = *(cv::Subdiv2D **)&_swig_go_0; 
  arg2 = *(std::vector< cv::Vec4f > **)&_swig_go_1; 
  
  ((cv::Subdiv2D const *)arg1)->getEdgeList(*arg2);
  
}


void _wrap_Subdiv2D_getTriangleList_cv_dbcbba478e71899d(cv::Subdiv2D *_swig_go_0, std::vector< cv::Vec< float,6 > > *_swig_go_1) {
  cv::Subdiv2D *arg1 = (cv::Subdiv2D *) 0 ;
  std::vector< cv::Vec6f > *arg2 = 0 ;
  
  arg1 = *(cv::Subdiv2D **)&_swig_go_0; 
  arg2 = *(std::vector< cv::Vec6f > **)&_swig_go_1; 
  
  ((cv::Subdiv2D const *)arg1)->getTriangleList(*arg2);
  
}


void _wrap_Subdiv2D_getVoronoiFacetList_cv_dbcbba478e71899d(cv::Subdiv2D *_swig_go_0, std::vector< int > *_swig_go_1, std::vector< std::vector< cv::Point_< float > > > *_swig_go_2, std::vector< cv::Point_< float > > *_swig_go_3) {
  cv::Subdiv2D *arg1 = (cv::Subdiv2D *) 0 ;
  std::vector< int > *arg2 = 0 ;
  std::vector< std::vector< cv::Point2f > > *arg3 = 0 ;
  std::vector< cv::Point2f > *arg4 = 0 ;
  
  arg1 = *(cv::Subdiv2D **)&_swig_go_0; 
  arg2 = *(std::vector< int > **)&_swig_go_1; 
  arg3 = *(std::vector< std::vector< cv::Point2f > > **)&_swig_go_2; 
  arg4 = *(std::vector< cv::Point2f > **)&_swig_go_3; 
  
  (arg1)->getVoronoiFacetList((std::vector< int > const &)*arg2,*arg3,*arg4);
  
}


cv::Point_< float > *_wrap_Subdiv2D_getVertex__SWIG_0_cv_dbcbba478e71899d(cv::Subdiv2D *_swig_go_0, intgo _swig_go_1, intgo *_swig_go_2) {
  cv::Subdiv2D *arg1 = (cv::Subdiv2D *) 0 ;
  int arg2 ;
  int *arg3 = (int *) 0 ;
  SwigValueWrapper< cv::Point_< float > > result;
  cv::Point_< float > *_swig_go_result;
  
  arg1 = *(cv::Subdiv2D **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  
  result = ((cv::Subdiv2D const *)arg1)->getVertex(arg2,arg3);
  *(cv::Point2f **)&_swig_go_result = new cv::Point2f(result); 
  return _swig_go_result;
}


cv::Point_< float > *_wrap_Subdiv2D_getVertex__SWIG_1_cv_dbcbba478e71899d(cv::Subdiv2D *_swig_go_0, intgo _swig_go_1) {
  cv::Subdiv2D *arg1 = (cv::Subdiv2D *) 0 ;
  int arg2 ;
  SwigValueWrapper< cv::Point_< float > > result;
  cv::Point_< float > *_swig_go_result;
  
  arg1 = *(cv::Subdiv2D **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = ((cv::Subdiv2D const *)arg1)->getVertex(arg2);
  *(cv::Point2f **)&_swig_go_result = new cv::Point2f(result); 
  return _swig_go_result;
}


intgo _wrap_Subdiv2D_getEdge_cv_dbcbba478e71899d(cv::Subdiv2D *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  cv::Subdiv2D *arg1 = (cv::Subdiv2D *) 0 ;
  int arg2 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::Subdiv2D **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)((cv::Subdiv2D const *)arg1)->getEdge(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_Subdiv2D_nextEdge_cv_dbcbba478e71899d(cv::Subdiv2D *_swig_go_0, intgo _swig_go_1) {
  cv::Subdiv2D *arg1 = (cv::Subdiv2D *) 0 ;
  int arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::Subdiv2D **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (int)((cv::Subdiv2D const *)arg1)->nextEdge(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_Subdiv2D_rotateEdge_cv_dbcbba478e71899d(cv::Subdiv2D *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  cv::Subdiv2D *arg1 = (cv::Subdiv2D *) 0 ;
  int arg2 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::Subdiv2D **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)((cv::Subdiv2D const *)arg1)->rotateEdge(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_Subdiv2D_symEdge_cv_dbcbba478e71899d(cv::Subdiv2D *_swig_go_0, intgo _swig_go_1) {
  cv::Subdiv2D *arg1 = (cv::Subdiv2D *) 0 ;
  int arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::Subdiv2D **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (int)((cv::Subdiv2D const *)arg1)->symEdge(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_Subdiv2D_edgeOrg__SWIG_0_cv_dbcbba478e71899d(cv::Subdiv2D *_swig_go_0, intgo _swig_go_1, cv::Point_< float > *_swig_go_2) {
  cv::Subdiv2D *arg1 = (cv::Subdiv2D *) 0 ;
  int arg2 ;
  cv::Point2f *arg3 = (cv::Point2f *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::Subdiv2D **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::Point2f **)&_swig_go_2; 
  
  result = (int)((cv::Subdiv2D const *)arg1)->edgeOrg(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_Subdiv2D_edgeOrg__SWIG_1_cv_dbcbba478e71899d(cv::Subdiv2D *_swig_go_0, intgo _swig_go_1) {
  cv::Subdiv2D *arg1 = (cv::Subdiv2D *) 0 ;
  int arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::Subdiv2D **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (int)((cv::Subdiv2D const *)arg1)->edgeOrg(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_Subdiv2D_edgeDst__SWIG_0_cv_dbcbba478e71899d(cv::Subdiv2D *_swig_go_0, intgo _swig_go_1, cv::Point_< float > *_swig_go_2) {
  cv::Subdiv2D *arg1 = (cv::Subdiv2D *) 0 ;
  int arg2 ;
  cv::Point2f *arg3 = (cv::Point2f *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::Subdiv2D **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = *(cv::Point2f **)&_swig_go_2; 
  
  result = (int)((cv::Subdiv2D const *)arg1)->edgeDst(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_Subdiv2D_edgeDst__SWIG_1_cv_dbcbba478e71899d(cv::Subdiv2D *_swig_go_0, intgo _swig_go_1) {
  cv::Subdiv2D *arg1 = (cv::Subdiv2D *) 0 ;
  int arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(cv::Subdiv2D **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (int)((cv::Subdiv2D const *)arg1)->edgeDst(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_Subdiv2D_cv_dbcbba478e71899d(cv::Subdiv2D *_swig_go_0) {
  cv::Subdiv2D *arg1 = (cv::Subdiv2D *) 0 ;
  
  arg1 = *(cv::Subdiv2D **)&_swig_go_0; 
  
  delete arg1;
  
}


#ifdef __cplusplus
}
#endif

